class Device{}Device.agent=navigator.userAgent.toLowerCase(),Device.mobile=!!navigator.maxTouchPoints,Device.tablet=Device.mobile&&Math.max(window.innerWidth,window.innerHeight)>1e3,Device.phone=Device.mobile&&!Device.tablet,Device.webgl=(()=>{if("undefined"==typeof window)return;const e={failIfMajorPerformanceCaveat:!0};let t=document.createElement("canvas"),r=t.getContext("webgl",e)||t.getContext("experimental-webgl",e);const n=!!r;if(r){const e=r.getExtension("WEBGL_lose_context");e&&e.loseContext()}return r=null,t=null,n})();class Events{}Events.STATE_CHANGE="state_change",Events.KEY_DOWN="key_down",Events.KEY_UP="key_up",Events.KEY_PRESS="key_press",Events.RESIZE="resize",Events.VISIBILITY="visibility",Events.PROGRESS="progress",Events.COMPLETE="complete",Events.UPDATE="update",Events.HOVER="hover",Events.CLICK="click";class Global{}class Assets{static add(e,t){this.cache&&(this.files[e]=t)}static get(e){if(this.cache)return this.files[e]}static remove(e){delete this.files[e]}static clear(){this.files={}}static filter(e){return Object.keys(this.files).filter(e).reduce((e,t)=>(e[t]=this.files[t],e),{})}static getPath(e){return e.includes("//")||this.path&&!e.includes(this.path)&&(e=this.path+e),e}static loadImage(e,t){const r=new Image;r.crossOrigin=this.crossOrigin,r.src=this.getPath(e);const n=new Promise((e,t)=>{r.onload=()=>{e(r),r.onload=null},r.onerror=e=>{t(e),r.onerror=null}});return t&&n.then(t),n}}Assets.path="",Assets.crossOrigin=void 0,Assets.options=void 0,Assets.cache=!1,Assets.files={};class EventEmitter{constructor(){this.callbacks={}}on(e,t){this.callbacks[e]||(this.callbacks[e]=[]),this.callbacks[e].push(t)}off(e,t){if(this.callbacks[e])if(t){const r=this.callbacks[e].indexOf(t);~r&&this.callbacks[e].splice(r,1)}else delete this.callbacks[e]}emit(e,t={}){if(!this.callbacks[e])return;const r=this.callbacks[e].slice();for(let e=0,n=r.length;e<n;e++)r[e].call(this,t)}destroy(){for(const e in this)this[e]=null;return null}}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _inheritsLoose(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}
/*!
 * GSAP 3.6.0
 * https://greensock.com
 *
 * @license Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/var _suppressOverwrites,_globalTimeline,_win,_coreInitted,_doc,_coreReady,_lastRenderedFrame,_quickTween,_tickerActive,_config={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},_defaults={duration:.5,overwrite:!1,delay:0},_bigNum=1e8,_tinyNum=1/_bigNum,_2PI=2*Math.PI,_HALF_PI=_2PI/4,_gsID=0,_sqrt=Math.sqrt,_cos=Math.cos,_sin=Math.sin,_isString=function _isString(e){return"string"==typeof e},_isFunction=function _isFunction(e){return"function"==typeof e},_isNumber=function _isNumber(e){return"number"==typeof e},_isUndefined=function _isUndefined(e){return void 0===e},_isObject=function _isObject(e){return"object"==typeof e},_isNotFalse=function _isNotFalse(e){return!1!==e},_windowExists=function _windowExists(){return"undefined"!=typeof window},_isFuncOrString=function _isFuncOrString(e){return _isFunction(e)||_isString(e)},_isTypedArray="function"==typeof ArrayBuffer&&ArrayBuffer.isView||function(){},_isArray=Array.isArray,_strictNumExp=/(?:-?\.?\d|\.)+/gi,_numExp=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,_numWithUnitExp=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,_complexStringNumExp=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,_relExp=/[+-]=-?[.\d]+/,_delimitedValueExp=/[#\-+.]*\b[a-z\d-=+%.]+/gi,_unitExp=/[\d.+\-=]+(?:e[-+]\d*)*/i,_globals={},_installScope={},_install=function _install(e){return(_installScope=_merge(e,_globals))&&gsap},_missingPlugin=function _missingPlugin(e,t){return console.warn("Invalid property",e,"set to",t,"Missing plugin? gsap.registerPlugin()")},_warn=function _warn(e,t){return!t&&console.warn(e)},_addGlobal=function _addGlobal(e,t){return e&&(_globals[e]=t)&&_installScope&&(_installScope[e]=t)||_globals},_emptyFunc=function _emptyFunc(){return 0},_reservedProps={},_lazyTweens=[],_lazyLookup={},_plugins={},_effects={},_nextGCFrame=30,_harnessPlugins=[],_callbackNames="",_harness=function _harness(e){var t,r,n=e[0];if(_isObject(n)||_isFunction(n)||(e=[e]),!(t=(n._gsap||{}).harness)){for(r=_harnessPlugins.length;r--&&!_harnessPlugins[r].targetTest(n););t=_harnessPlugins[r]}for(r=e.length;r--;)e[r]&&(e[r]._gsap||(e[r]._gsap=new GSCache(e[r],t)))||e.splice(r,1);return e},_getCache=function _getCache(e){return e._gsap||_harness(toArray(e))[0]._gsap},_getProperty=function _getProperty(e,t,r){return(r=e[t])&&_isFunction(r)?e[t]():_isUndefined(r)&&e.getAttribute&&e.getAttribute(t)||r},_forEachName=function _forEachName(e,t){return(e=e.split(",")).forEach(t)||e},_round=function _round(e){return Math.round(1e5*e)/1e5||0},_arrayContainsAny=function _arrayContainsAny(e,t){for(var r=t.length,n=0;e.indexOf(t[n])<0&&++n<r;);return n<r},_parseVars=function _parseVars(e,t,r){var n,i=_isNumber(e[1]),o=(i?2:1)+(t<2?0:1),a=e[o];if(i&&(a.duration=e[1]),a.parent=r,t){for(n=a;r&&!("immediateRender"in n);)n=r.vars.defaults||{},r=_isNotFalse(r.vars.inherit)&&r.parent;a.immediateRender=_isNotFalse(n.immediateRender),t<2?a.runBackwards=1:a.startAt=e[o-1]}return a},_lazyRender=function _lazyRender(){var e,t,r=_lazyTweens.length,n=_lazyTweens.slice(0);for(_lazyLookup={},_lazyTweens.length=0,e=0;e<r;e++)(t=n[e])&&t._lazy&&(t.render(t._lazy[0],t._lazy[1],!0)._lazy=0)},_lazySafeRender=function _lazySafeRender(e,t,r,n){_lazyTweens.length&&_lazyRender(),e.render(t,r,n),_lazyTweens.length&&_lazyRender()},_numericIfPossible=function _numericIfPossible(e){var t=parseFloat(e);return(t||0===t)&&(e+"").match(_delimitedValueExp).length<2?t:_isString(e)?e.trim():e},_passThrough=function _passThrough(e){return e},_setDefaults=function _setDefaults(e,t){for(var r in t)r in e||(e[r]=t[r]);return e},_setKeyframeDefaults=function _setKeyframeDefaults(e,t){for(var r in t)r in e||"duration"===r||"ease"===r||(e[r]=t[r])},_merge=function _merge(e,t){for(var r in t)e[r]=t[r];return e},_mergeDeep=function _mergeDeep(e,t){for(var r in t)"__proto__"!==r&&"constructor"!==r&&"prototype"!==r&&(e[r]=_isObject(t[r])?_mergeDeep(e[r]||(e[r]={}),t[r]):t[r]);return e},_copyExcluding=function _copyExcluding(e,t){var r,n={};for(r in e)r in t||(n[r]=e[r]);return n},_inheritDefaults=function _inheritDefaults(e){var t=e.parent||_globalTimeline,r=e.keyframes?_setKeyframeDefaults:_setDefaults;if(_isNotFalse(e.inherit))for(;t;)r(e,t.vars.defaults),t=t.parent||t._dp;return e},_arraysMatch=function _arraysMatch(e,t){for(var r=e.length,n=r===t.length;n&&r--&&e[r]===t[r];);return r<0},_addLinkedListItem=function _addLinkedListItem(e,t,r,n,i){void 0===r&&(r="_first"),void 0===n&&(n="_last");var o,a=e[n];if(i)for(o=t[i];a&&a[i]>o;)a=a._prev;return a?(t._next=a._next,a._next=t):(t._next=e[r],e[r]=t),t._next?t._next._prev=t:e[n]=t,t._prev=a,t.parent=t._dp=e,t},_removeLinkedListItem=function _removeLinkedListItem(e,t,r,n){void 0===r&&(r="_first"),void 0===n&&(n="_last");var i=t._prev,o=t._next;i?i._next=o:e[r]===t&&(e[r]=o),o?o._prev=i:e[n]===t&&(e[n]=i),t._next=t._prev=t.parent=null},_removeFromParent=function _removeFromParent(e,t){e.parent&&(!t||e.parent.autoRemoveChildren)&&e.parent.remove(e),e._act=0},_uncache=function _uncache(e,t){if(e&&(!t||t._end>e._dur||t._start<0))for(var r=e;r;)r._dirty=1,r=r.parent;return e},_recacheAncestors=function _recacheAncestors(e){for(var t=e.parent;t&&t.parent;)t._dirty=1,t.totalDuration(),t=t.parent;return e},_hasNoPausedAncestors=function _hasNoPausedAncestors(e){return!e||e._ts&&_hasNoPausedAncestors(e.parent)},_elapsedCycleDuration=function _elapsedCycleDuration(e){return e._repeat?_animationCycle(e._tTime,e=e.duration()+e._rDelay)*e:0},_animationCycle=function _animationCycle(e,t){var r=Math.floor(e/=t);return e&&r===e?r-1:r},_parentToChildTotalTime=function _parentToChildTotalTime(e,t){return(e-t._start)*t._ts+(t._ts>=0?0:t._dirty?t.totalDuration():t._tDur)},_setEnd=function _setEnd(e){return e._end=_round(e._start+(e._tDur/Math.abs(e._ts||e._rts||_tinyNum)||0))},_alignPlayhead=function _alignPlayhead(e,t){var r=e._dp;return r&&r.smoothChildTiming&&e._ts&&(e._start=_round(r._time-(e._ts>0?t/e._ts:((e._dirty?e.totalDuration():e._tDur)-t)/-e._ts)),_setEnd(e),r._dirty||_uncache(r,e)),e},_postAddChecks=function _postAddChecks(e,t){var r;if((t._time||t._initted&&!t._dur)&&(r=_parentToChildTotalTime(e.rawTime(),t),(!t._dur||_clamp(0,t.totalDuration(),r)-t._tTime>_tinyNum)&&t.render(r,!0)),_uncache(e,t)._dp&&e._initted&&e._time>=e._dur&&e._ts){if(e._dur<e.duration())for(r=e;r._dp;)r.rawTime()>=0&&r.totalTime(r._tTime),r=r._dp;e._zTime=-_tinyNum}},_addToTimeline=function _addToTimeline(e,t,r,n){return t.parent&&_removeFromParent(t),t._start=_round(r+t._delay),t._end=_round(t._start+(t.totalDuration()/Math.abs(t.timeScale())||0)),_addLinkedListItem(e,t,"_first","_last",e._sort?"_start":0),e._recent=t,n||_postAddChecks(e,t),e},_scrollTrigger=function _scrollTrigger(e,t){return(_globals.ScrollTrigger||_missingPlugin("scrollTrigger",t))&&_globals.ScrollTrigger.create(t,e)},_attemptInitTween=function _attemptInitTween(e,t,r,n){return _initTween(e,t),e._initted?!r&&e._pt&&(e._dur&&!1!==e.vars.lazy||!e._dur&&e.vars.lazy)&&_lastRenderedFrame!==_ticker.frame?(_lazyTweens.push(e),e._lazy=[t,n],1):void 0:1},_parentPlayheadIsBeforeStart=function _parentPlayheadIsBeforeStart(e){var t=e.parent;return t&&t._ts&&t._initted&&!t._lock&&(t.rawTime()<0||_parentPlayheadIsBeforeStart(t))},_renderZeroDurationTween=function _renderZeroDurationTween(e,t,r,n){var i,o,a,s=e.ratio,l=t<0||!t&&(!e._start&&_parentPlayheadIsBeforeStart(e)||(e._ts<0||e._dp._ts<0)&&"isFromStart"!==e.data&&"isStart"!==e.data)?0:1,c=e._rDelay,u=0;if(c&&e._repeat&&(u=_clamp(0,e._tDur,t),o=_animationCycle(u,c),a=_animationCycle(e._tTime,c),e._yoyo&&1&o&&(l=1-l),o!==a&&(s=1-l,e.vars.repeatRefresh&&e._initted&&e.invalidate())),l!==s||n||e._zTime===_tinyNum||!t&&e._zTime){if(!e._initted&&_attemptInitTween(e,t,n,r))return;for(a=e._zTime,e._zTime=t||(r?_tinyNum:0),r||(r=t&&!a),e.ratio=l,e._from&&(l=1-l),e._time=0,e._tTime=u,r||_callback(e,"onStart"),i=e._pt;i;)i.r(l,i.d),i=i._next;e._startAt&&t<0&&e._startAt.render(t,!0,!0),e._onUpdate&&!r&&_callback(e,"onUpdate"),u&&e._repeat&&!r&&e.parent&&_callback(e,"onRepeat"),(t>=e._tDur||t<0)&&e.ratio===l&&(l&&_removeFromParent(e,1),r||(_callback(e,l?"onComplete":"onReverseComplete",!0),e._prom&&e._prom()))}else e._zTime||(e._zTime=t)},_findNextPauseTween=function _findNextPauseTween(e,t,r){var n;if(r>t)for(n=e._first;n&&n._start<=r;){if(!n._dur&&"isPause"===n.data&&n._start>t)return n;n=n._next}else for(n=e._last;n&&n._start>=r;){if(!n._dur&&"isPause"===n.data&&n._start<t)return n;n=n._prev}},_setDuration=function _setDuration(e,t,r,n){var i=e._repeat,o=_round(t)||0,a=e._tTime/e._tDur;return a&&!n&&(e._time*=o/e._dur),e._dur=o,e._tDur=i?i<0?1e10:_round(o*(i+1)+e._rDelay*i):o,a&&!n?_alignPlayhead(e,e._tTime=e._tDur*a):e.parent&&_setEnd(e),r||_uncache(e.parent,e),e},_onUpdateTotalDuration=function _onUpdateTotalDuration(e){return e instanceof Timeline?_uncache(e):_setDuration(e,e._dur)},_zeroPosition={_start:0,endTime:_emptyFunc},_parsePosition=function _parsePosition(e,t){var r,n,i=e.labels,o=e._recent||_zeroPosition,a=e.duration()>=_bigNum?o.endTime(!1):e._dur;return _isString(t)&&(isNaN(t)||t in i)?"<"===(r=t.charAt(0))||">"===r?("<"===r?o._start:o.endTime(o._repeat>=0))+(parseFloat(t.substr(1))||0):(r=t.indexOf("="))<0?(t in i||(i[t]=a),i[t]):(n=+(t.charAt(r-1)+t.substr(r+1)),r>1?_parsePosition(e,t.substr(0,r-1))+n:a+n):null==t?a:+t},_conditionalReturn=function _conditionalReturn(e,t){return e||0===e?t(e):t},_clamp=function _clamp(e,t,r){return r<e?e:r>t?t:r},getUnit=function getUnit(e){if("string"!=typeof e)return"";var t=_unitExp.exec(e);return t?e.substr(t.index+t[0].length):""},clamp=function clamp(e,t,r){return _conditionalReturn(r,(function(r){return _clamp(e,t,r)}))},_slice=[].slice,_isArrayLike=function _isArrayLike(e,t){return e&&_isObject(e)&&"length"in e&&(!t&&!e.length||e.length-1 in e&&_isObject(e[0]))&&!e.nodeType&&e!==_win},_flatten=function _flatten(e,t,r){return void 0===r&&(r=[]),e.forEach((function(e){var n;return _isString(e)&&!t||_isArrayLike(e,1)?(n=r).push.apply(n,toArray(e)):r.push(e)}))||r},toArray=function toArray(e,t){return!_isString(e)||t||!_coreInitted&&_wake()?_isArray(e)?_flatten(e,t):_isArrayLike(e)?_slice.call(e,0):e?[e]:[]:_slice.call(_doc.querySelectorAll(e),0)},shuffle=function shuffle(e){return e.sort((function(){return.5-Math.random()}))},distribute=function distribute(e){if(_isFunction(e))return e;var t=_isObject(e)?e:{each:e},r=_parseEase(t.ease),n=t.from||0,i=parseFloat(t.base)||0,o={},a=n>0&&n<1,s=isNaN(n)||a,l=t.axis,c=n,u=n;return _isString(n)?c=u={center:.5,edges:.5,end:1}[n]||0:!a&&s&&(c=n[0],u=n[1]),function(e,a,h){var d,p,m,f,g,_,y,x,b,w=(h||t).length,M=o[w];if(!M){if(!(b="auto"===t.grid?0:(t.grid||[1,_bigNum])[1])){for(y=-_bigNum;y<(y=h[b++].getBoundingClientRect().left)&&b<w;);b--}for(M=o[w]=[],d=s?Math.min(b,w)*c-.5:n%b,p=s?w*u/b-.5:n/b|0,y=0,x=_bigNum,_=0;_<w;_++)m=_%b-d,f=p-(_/b|0),M[_]=g=l?Math.abs("y"===l?f:m):_sqrt(m*m+f*f),g>y&&(y=g),g<x&&(x=g);"random"===n&&shuffle(M),M.max=y-x,M.min=x,M.v=w=(parseFloat(t.amount)||parseFloat(t.each)*(b>w?w-1:l?"y"===l?w/b:b:Math.max(b,w/b))||0)*("edges"===n?-1:1),M.b=w<0?i-w:i,M.u=getUnit(t.amount||t.each)||0,r=r&&w<0?_invertEase(r):r}return w=(M[e]-M.min)/M.max||0,_round(M.b+(r?r(w):w)*M.v)+M.u}},_roundModifier=function _roundModifier(e){var t=e<1?Math.pow(10,(e+"").length-2):1;return function(r){var n=Math.round(parseFloat(r)/e)*e*t;return(n-n%1)/t+(_isNumber(r)?0:getUnit(r))}},snap=function snap(e,t){var r,n,i=_isArray(e);return!i&&_isObject(e)&&(r=i=e.radius||_bigNum,e.values?(e=toArray(e.values),(n=!_isNumber(e[0]))&&(r*=r)):e=_roundModifier(e.increment)),_conditionalReturn(t,i?_isFunction(e)?function(t){return n=e(t),Math.abs(n-t)<=r?n:t}:function(t){for(var i,o,a=parseFloat(n?t.x:t),s=parseFloat(n?t.y:0),l=_bigNum,c=0,u=e.length;u--;)(i=n?(i=e[u].x-a)*i+(o=e[u].y-s)*o:Math.abs(e[u]-a))<l&&(l=i,c=u);return c=!r||l<=r?e[c]:t,n||c===t||_isNumber(t)?c:c+getUnit(t)}:_roundModifier(e))},random=function random(e,t,r,n){return _conditionalReturn(_isArray(e)?!t:!0===r?!!(r=0):!n,(function(){return _isArray(e)?e[~~(Math.random()*e.length)]:(r=r||1e-5)&&(n=r<1?Math.pow(10,(r+"").length-2):1)&&Math.floor(Math.round((e-r/2+Math.random()*(t-e+.99*r))/r)*r*n)/n}))},pipe=function pipe(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return function(e){return t.reduce((function(e,t){return t(e)}),e)}},unitize=function unitize(e,t){return function(r){return e(parseFloat(r))+(t||getUnit(r))}},normalize=function normalize(e,t,r){return mapRange(e,t,0,1,r)},_wrapArray=function _wrapArray(e,t,r){return _conditionalReturn(r,(function(r){return e[~~t(r)]}))},wrap=function wrap(e,t,r){var n=t-e;return _isArray(e)?_wrapArray(e,wrap(0,e.length),t):_conditionalReturn(r,(function(t){return(n+(t-e)%n)%n+e}))},wrapYoyo=function wrapYoyo(e,t,r){var n=t-e,i=2*n;return _isArray(e)?_wrapArray(e,wrapYoyo(0,e.length-1),t):_conditionalReturn(r,(function(t){return e+((t=(i+(t-e)%i)%i||0)>n?i-t:t)}))},_replaceRandom=function _replaceRandom(e){for(var t,r,n,i,o=0,a="";~(t=e.indexOf("random(",o));)n=e.indexOf(")",t),i="["===e.charAt(t+7),r=e.substr(t+7,n-t-7).match(i?_delimitedValueExp:_strictNumExp),a+=e.substr(o,t-o)+random(i?r:+r[0],i?0:+r[1],+r[2]||1e-5),o=n+1;return a+e.substr(o,e.length-o)},mapRange=function mapRange(e,t,r,n,i){var o=t-e,a=n-r;return _conditionalReturn(i,(function(t){return r+((t-e)/o*a||0)}))},interpolate=function interpolate(e,t,r,n){var i=isNaN(e+t)?0:function(r){return(1-r)*e+r*t};if(!i){var o,a,s,l,c,u=_isString(e),h={};if(!0===r&&(n=1)&&(r=null),u)e={p:e},t={p:t};else if(_isArray(e)&&!_isArray(t)){for(s=[],l=e.length,c=l-2,a=1;a<l;a++)s.push(interpolate(e[a-1],e[a]));l--,i=function func(e){e*=l;var t=Math.min(c,~~e);return s[t](e-t)},r=t}else n||(e=_merge(_isArray(e)?[]:{},e));if(!s){for(o in t)_addPropTween.call(h,e,o,"get",t[o]);i=function func(t){return _renderPropTweens(t,h)||(u?e.p:e)}}}return _conditionalReturn(r,i)},_getLabelInDirection=function _getLabelInDirection(e,t,r){var n,i,o,a=e.labels,s=_bigNum;for(n in a)(i=a[n]-t)<0==!!r&&i&&s>(i=Math.abs(i))&&(o=n,s=i);return o},_callback=function _callback(e,t,r){var n,i,o=e.vars,a=o[t];if(a)return n=o[t+"Params"],i=o.callbackScope||e,r&&_lazyTweens.length&&_lazyRender(),n?a.apply(i,n):a.call(i)},_interrupt=function _interrupt(e){return _removeFromParent(e),e.progress()<1&&_callback(e,"onInterrupt"),e},_createPlugin=function _createPlugin(e){var t=(e=!e.name&&e.default||e).name,r=_isFunction(e),n=t&&!r&&e.init?function(){this._props=[]}:e,i={init:_emptyFunc,render:_renderPropTweens,add:_addPropTween,kill:_killPropTweensOf,modifier:_addPluginModifier,rawVars:0},o={targetTest:0,get:0,getSetter:_getSetter,aliases:{},register:0};if(_wake(),e!==n){if(_plugins[t])return;_setDefaults(n,_setDefaults(_copyExcluding(e,i),o)),_merge(n.prototype,_merge(i,_copyExcluding(e,o))),_plugins[n.prop=t]=n,e.targetTest&&(_harnessPlugins.push(n),_reservedProps[t]=1),t=("css"===t?"CSS":t.charAt(0).toUpperCase()+t.substr(1))+"Plugin"}_addGlobal(t,n),e.register&&e.register(gsap,n,PropTween)},_255=255,_colorLookup={aqua:[0,_255,_255],lime:[0,_255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,_255],navy:[0,0,128],white:[_255,_255,_255],olive:[128,128,0],yellow:[_255,_255,0],orange:[_255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[_255,0,0],pink:[_255,192,203],cyan:[0,_255,_255],transparent:[_255,_255,_255,0]},_hue=function _hue(e,t,r){return(6*(e=e<0?e+1:e>1?e-1:e)<1?t+(r-t)*e*6:e<.5?r:3*e<2?t+(r-t)*(2/3-e)*6:t)*_255+.5|0},splitColor=function splitColor(e,t,r){var n,i,o,a,s,l,c,u,h,d,p=e?_isNumber(e)?[e>>16,e>>8&_255,e&_255]:0:_colorLookup.black;if(!p){if(","===e.substr(-1)&&(e=e.substr(0,e.length-1)),_colorLookup[e])p=_colorLookup[e];else if("#"===e.charAt(0)){if(e.length<6&&(n=e.charAt(1),i=e.charAt(2),o=e.charAt(3),e="#"+n+n+i+i+o+o+(5===e.length?e.charAt(4)+e.charAt(4):"")),9===e.length)return[(p=parseInt(e.substr(1,6),16))>>16,p>>8&_255,p&_255,parseInt(e.substr(7),16)/255];p=[(e=parseInt(e.substr(1),16))>>16,e>>8&_255,e&_255]}else if("hsl"===e.substr(0,3))if(p=d=e.match(_strictNumExp),t){if(~e.indexOf("="))return p=e.match(_numExp),r&&p.length<4&&(p[3]=1),p}else a=+p[0]%360/360,s=+p[1]/100,n=2*(l=+p[2]/100)-(i=l<=.5?l*(s+1):l+s-l*s),p.length>3&&(p[3]*=1),p[0]=_hue(a+1/3,n,i),p[1]=_hue(a,n,i),p[2]=_hue(a-1/3,n,i);else p=e.match(_strictNumExp)||_colorLookup.transparent;p=p.map(Number)}return t&&!d&&(n=p[0]/_255,i=p[1]/_255,o=p[2]/_255,l=((c=Math.max(n,i,o))+(u=Math.min(n,i,o)))/2,c===u?a=s=0:(h=c-u,s=l>.5?h/(2-c-u):h/(c+u),a=c===n?(i-o)/h+(i<o?6:0):c===i?(o-n)/h+2:(n-i)/h+4,a*=60),p[0]=~~(a+.5),p[1]=~~(100*s+.5),p[2]=~~(100*l+.5)),r&&p.length<4&&(p[3]=1),p},_colorOrderData=function _colorOrderData(e){var t=[],r=[],n=-1;return e.split(_colorExp).forEach((function(e){var i=e.match(_numWithUnitExp)||[];t.push.apply(t,i),r.push(n+=i.length+1)})),t.c=r,t},_formatColors=function _formatColors(e,t,r){var n,i,o,a,s="",l=(e+s).match(_colorExp),c=t?"hsla(":"rgba(",u=0;if(!l)return e;if(l=l.map((function(e){return(e=splitColor(e,t,1))&&c+(t?e[0]+","+e[1]+"%,"+e[2]+"%,"+e[3]:e.join(","))+")"})),r&&(o=_colorOrderData(e),(n=r.c).join(s)!==o.c.join(s)))for(a=(i=e.replace(_colorExp,"1").split(_numWithUnitExp)).length-1;u<a;u++)s+=i[u]+(~n.indexOf(u)?l.shift()||c+"0,0,0,0)":(o.length?o:l.length?l:r).shift());if(!i)for(a=(i=e.split(_colorExp)).length-1;u<a;u++)s+=i[u]+l[u];return s+i[a]},_colorExp=function(){var e,t="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b";for(e in _colorLookup)t+="|"+e+"\\b";return new RegExp(t+")","gi")}(),_hslExp=/hsl[a]?\(/,_colorStringFilter=function _colorStringFilter(e){var t,r=e.join(" ");if(_colorExp.lastIndex=0,_colorExp.test(r))return t=_hslExp.test(r),e[1]=_formatColors(e[1],t),e[0]=_formatColors(e[0],t,_colorOrderData(e[1])),!0},_ticker=function(){var e,t,r,n,i,o,a=Date.now,s=500,l=33,c=a(),u=c,h=1e3/240,d=h,p=[],m=function _tick(r){var m,f,g,_,y=a()-u,x=!0===r;if(y>s&&(c+=y-l),((m=(g=(u+=y)-c)-d)>0||x)&&(_=++n.frame,i=g-1e3*n.time,n.time=g/=1e3,d+=m+(m>=h?4:h-m),f=1),x||(e=t(_tick)),f)for(o=0;o<p.length;o++)p[o](g,i,_,r)};return n={time:0,frame:0,tick:function tick(){m(!0)},deltaRatio:function deltaRatio(e){return i/(1e3/(e||60))},wake:function wake(){_coreReady&&(!_coreInitted&&_windowExists()&&(_win=_coreInitted=window,_doc=_win.document||{},_globals.gsap=gsap,(_win.gsapVersions||(_win.gsapVersions=[])).push(gsap.version),_install(_installScope||_win.GreenSockGlobals||!_win.gsap&&_win||{}),r=_win.requestAnimationFrame),e&&n.sleep(),t=r||function(e){return setTimeout(e,d-1e3*n.time+1|0)},_tickerActive=1,m(2))},sleep:function sleep(){(r?_win.cancelAnimationFrame:clearTimeout)(e),_tickerActive=0,t=_emptyFunc},lagSmoothing:function lagSmoothing(e,t){s=e||1/_tinyNum,l=Math.min(t,s,0)},fps:function fps(e){h=1e3/(e||240),d=1e3*n.time+h},add:function add(e){p.indexOf(e)<0&&p.push(e),_wake()},remove:function remove(e){var t;~(t=p.indexOf(e))&&p.splice(t,1)&&o>=t&&o--},_listeners:p}}(),_wake=function _wake(){return!_tickerActive&&_ticker.wake()},_easeMap={},_customEaseExp=/^[\d.\-M][\d.\-,\s]/,_quotesExp=/["']/g,_parseObjectInString=function _parseObjectInString(e){for(var t,r,n,i={},o=e.substr(1,e.length-3).split(":"),a=o[0],s=1,l=o.length;s<l;s++)r=o[s],t=s!==l-1?r.lastIndexOf(","):r.length,n=r.substr(0,t),i[a]=isNaN(n)?n.replace(_quotesExp,"").trim():+n,a=r.substr(t+1).trim();return i},_valueInParentheses=function _valueInParentheses(e){var t=e.indexOf("(")+1,r=e.indexOf(")"),n=e.indexOf("(",t);return e.substring(t,~n&&n<r?e.indexOf(")",r+1):r)},_configEaseFromString=function _configEaseFromString(e){var t=(e+"").split("("),r=_easeMap[t[0]];return r&&t.length>1&&r.config?r.config.apply(null,~e.indexOf("{")?[_parseObjectInString(t[1])]:_valueInParentheses(e).split(",").map(_numericIfPossible)):_easeMap._CE&&_customEaseExp.test(e)?_easeMap._CE("",e):r},_invertEase=function _invertEase(e){return function(t){return 1-e(1-t)}},_propagateYoyoEase=function _propagateYoyoEase(e,t){for(var r,n=e._first;n;)n instanceof Timeline?_propagateYoyoEase(n,t):!n.vars.yoyoEase||n._yoyo&&n._repeat||n._yoyo===t||(n.timeline?_propagateYoyoEase(n.timeline,t):(r=n._ease,n._ease=n._yEase,n._yEase=r,n._yoyo=t)),n=n._next},_parseEase=function _parseEase(e,t){return e&&(_isFunction(e)?e:_easeMap[e]||_configEaseFromString(e))||t},_insertEase=function _insertEase(e,t,r,n){void 0===r&&(r=function easeOut(e){return 1-t(1-e)}),void 0===n&&(n=function easeInOut(e){return e<.5?t(2*e)/2:1-t(2*(1-e))/2});var i,o={easeIn:t,easeOut:r,easeInOut:n};return _forEachName(e,(function(e){for(var t in _easeMap[e]=_globals[e]=o,_easeMap[i=e.toLowerCase()]=r,o)_easeMap[i+("easeIn"===t?".in":"easeOut"===t?".out":".inOut")]=_easeMap[e+"."+t]=o[t]})),o},_easeInOutFromOut=function _easeInOutFromOut(e){return function(t){return t<.5?(1-e(1-2*t))/2:.5+e(2*(t-.5))/2}},_configElastic=function _configElastic(e,t,r){var n=t>=1?t:1,i=(r||(e?.3:.45))/(t<1?t:1),o=i/_2PI*(Math.asin(1/n)||0),a=function easeOut(e){return 1===e?1:n*Math.pow(2,-10*e)*_sin((e-o)*i)+1},s="out"===e?a:"in"===e?function(e){return 1-a(1-e)}:_easeInOutFromOut(a);return i=_2PI/i,s.config=function(t,r){return _configElastic(e,t,r)},s},_configBack=function _configBack(e,t){void 0===t&&(t=1.70158);var r=function easeOut(e){return e?--e*e*((t+1)*e+t)+1:0},n="out"===e?r:"in"===e?function(e){return 1-r(1-e)}:_easeInOutFromOut(r);return n.config=function(t){return _configBack(e,t)},n};_forEachName("Linear,Quad,Cubic,Quart,Quint,Strong",(function(e,t){var r=t<5?t+1:t;_insertEase(e+",Power"+(r-1),t?function(e){return Math.pow(e,r)}:function(e){return e},(function(e){return 1-Math.pow(1-e,r)}),(function(e){return e<.5?Math.pow(2*e,r)/2:1-Math.pow(2*(1-e),r)/2}))})),_easeMap.Linear.easeNone=_easeMap.none=_easeMap.Linear.easeIn,_insertEase("Elastic",_configElastic("in"),_configElastic("out"),_configElastic()),function(e,t){var r=1/t,n=function easeOut(n){return n<r?e*n*n:n<.7272727272727273?e*Math.pow(n-1.5/t,2)+.75:n<.9090909090909092?e*(n-=2.25/t)*n+.9375:e*Math.pow(n-2.625/t,2)+.984375};_insertEase("Bounce",(function(e){return 1-n(1-e)}),n)}(7.5625,2.75),_insertEase("Expo",(function(e){return e?Math.pow(2,10*(e-1)):0})),_insertEase("Circ",(function(e){return-(_sqrt(1-e*e)-1)})),_insertEase("Sine",(function(e){return 1===e?1:1-_cos(e*_HALF_PI)})),_insertEase("Back",_configBack("in"),_configBack("out"),_configBack()),_easeMap.SteppedEase=_easeMap.steps=_globals.SteppedEase={config:function config(e,t){void 0===e&&(e=1);var r=1/e,n=e+(t?0:1),i=t?1:0,o=1-_tinyNum;return function(e){return((n*_clamp(0,o,e)|0)+i)*r}}},_defaults.ease=_easeMap["quad.out"],_forEachName("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",(function(e){return _callbackNames+=e+","+e+"Params,"}));var GSCache=function GSCache(e,t){this.id=_gsID++,e._gsap=this,this.target=e,this.harness=t,this.get=t?t.get:_getProperty,this.set=t?t.getSetter:_getSetter},Animation=function(){function Animation(e,t){var r=e.parent||_globalTimeline;this.vars=e,this._delay=+e.delay||0,(this._repeat=e.repeat===1/0?-2:e.repeat||0)&&(this._rDelay=e.repeatDelay||0,this._yoyo=!!e.yoyo||!!e.yoyoEase),this._ts=1,_setDuration(this,+e.duration,1,1),this.data=e.data,_tickerActive||_ticker.wake(),r&&_addToTimeline(r,this,t||0===t?t:r._time,1),e.reversed&&this.reverse(),e.paused&&this.paused(!0)}var e=Animation.prototype;return e.delay=function delay(e){return e||0===e?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+e-this._delay),this._delay=e,this):this._delay},e.duration=function duration(e){return arguments.length?this.totalDuration(this._repeat>0?e+(e+this._rDelay)*this._repeat:e):this.totalDuration()&&this._dur},e.totalDuration=function totalDuration(e){return arguments.length?(this._dirty=0,_setDuration(this,this._repeat<0?e:(e-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},e.totalTime=function totalTime(e,t){if(_wake(),!arguments.length)return this._tTime;var r=this._dp;if(r&&r.smoothChildTiming&&this._ts){for(_alignPlayhead(this,e),!r._dp||r.parent||_postAddChecks(r,this);r.parent;)r.parent._time!==r._start+(r._ts>=0?r._tTime/r._ts:(r.totalDuration()-r._tTime)/-r._ts)&&r.totalTime(r._tTime,!0),r=r.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&e<this._tDur||this._ts<0&&e>0||!this._tDur&&!e)&&_addToTimeline(this._dp,this,this._start-this._delay)}return(this._tTime!==e||!this._dur&&!t||this._initted&&Math.abs(this._zTime)===_tinyNum||!e&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=e),_lazySafeRender(this,e,t)),this},e.time=function time(e,t){return arguments.length?this.totalTime(Math.min(this.totalDuration(),e+_elapsedCycleDuration(this))%this._dur||(e?this._dur:0),t):this._time},e.totalProgress=function totalProgress(e,t){return arguments.length?this.totalTime(this.totalDuration()*e,t):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.ratio},e.progress=function progress(e,t){return arguments.length?this.totalTime(this.duration()*(!this._yoyo||1&this.iteration()?e:1-e)+_elapsedCycleDuration(this),t):this.duration()?Math.min(1,this._time/this._dur):this.ratio},e.iteration=function iteration(e,t){var r=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(e-1)*r,t):this._repeat?_animationCycle(this._tTime,r)+1:1},e.timeScale=function timeScale(e){if(!arguments.length)return this._rts===-_tinyNum?0:this._rts;if(this._rts===e)return this;var t=this.parent&&this._ts?_parentToChildTotalTime(this.parent._time,this):this._tTime;return this._rts=+e||0,this._ts=this._ps||e===-_tinyNum?0:this._rts,_recacheAncestors(this.totalTime(_clamp(-this._delay,this._tDur,t),!0))},e.paused=function paused(e){return arguments.length?(this._ps!==e&&(this._ps=e,e?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(_wake(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,1===this.progress()&&(this._tTime-=_tinyNum)&&Math.abs(this._zTime)!==_tinyNum))),this):this._ps},e.startTime=function startTime(e){if(arguments.length){this._start=e;var t=this.parent||this._dp;return t&&(t._sort||!this.parent)&&_addToTimeline(t,this,e-this._delay),this}return this._start},e.endTime=function endTime(e){return this._start+(_isNotFalse(e)?this.totalDuration():this.duration())/Math.abs(this._ts)},e.rawTime=function rawTime(e){var t=this.parent||this._dp;return t?e&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?_parentToChildTotalTime(t.rawTime(e),this):this._tTime:this._tTime},e.globalTime=function globalTime(e){for(var t=this,r=arguments.length?e:t.rawTime();t;)r=t._start+r/(t._ts||1),t=t._dp;return r},e.repeat=function repeat(e){return arguments.length?(this._repeat=e===1/0?-2:e,_onUpdateTotalDuration(this)):-2===this._repeat?1/0:this._repeat},e.repeatDelay=function repeatDelay(e){return arguments.length?(this._rDelay=e,_onUpdateTotalDuration(this)):this._rDelay},e.yoyo=function yoyo(e){return arguments.length?(this._yoyo=e,this):this._yoyo},e.seek=function seek(e,t){return this.totalTime(_parsePosition(this,e),_isNotFalse(t))},e.restart=function restart(e,t){return this.play().totalTime(e?-this._delay:0,_isNotFalse(t))},e.play=function play(e,t){return null!=e&&this.seek(e,t),this.reversed(!1).paused(!1)},e.reverse=function reverse(e,t){return null!=e&&this.seek(e||this.totalDuration(),t),this.reversed(!0).paused(!1)},e.pause=function pause(e,t){return null!=e&&this.seek(e,t),this.paused(!0)},e.resume=function resume(){return this.paused(!1)},e.reversed=function reversed(e){return arguments.length?(!!e!==this.reversed()&&this.timeScale(-this._rts||(e?-_tinyNum:0)),this):this._rts<0},e.invalidate=function invalidate(){return this._initted=this._act=0,this._zTime=-_tinyNum,this},e.isActive=function isActive(){var e,t=this.parent||this._dp,r=this._start;return!(t&&!(this._ts&&this._initted&&t.isActive()&&(e=t.rawTime(!0))>=r&&e<this.endTime(!0)-_tinyNum))},e.eventCallback=function eventCallback(e,t,r){var n=this.vars;return arguments.length>1?(t?(n[e]=t,r&&(n[e+"Params"]=r),"onUpdate"===e&&(this._onUpdate=t)):delete n[e],this):n[e]},e.then=function then(e){var t=this;return new Promise((function(r){var n=_isFunction(e)?e:_passThrough,i=function _resolve(){var e=t.then;t.then=null,_isFunction(n)&&(n=n(t))&&(n.then||n===t)&&(t.then=e),r(n),t.then=e};t._initted&&1===t.totalProgress()&&t._ts>=0||!t._tTime&&t._ts<0?i():t._prom=i}))},e.kill=function kill(){_interrupt(this)},Animation}();_setDefaults(Animation.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-_tinyNum,_prom:0,_ps:!1,_rts:1});var Timeline=function(e){function Timeline(t,r){var n;return void 0===t&&(t={}),(n=e.call(this,t,r)||this).labels={},n.smoothChildTiming=!!t.smoothChildTiming,n.autoRemoveChildren=!!t.autoRemoveChildren,n._sort=_isNotFalse(t.sortChildren),n.parent&&_postAddChecks(n.parent,_assertThisInitialized(n)),t.scrollTrigger&&_scrollTrigger(_assertThisInitialized(n),t.scrollTrigger),n}_inheritsLoose(Timeline,e);var t=Timeline.prototype;return t.to=function to(e,t,r){return new Tween(e,_parseVars(arguments,0,this),_parsePosition(this,_isNumber(t)?arguments[3]:r)),this},t.from=function from(e,t,r){return new Tween(e,_parseVars(arguments,1,this),_parsePosition(this,_isNumber(t)?arguments[3]:r)),this},t.fromTo=function fromTo(e,t,r,n){return new Tween(e,_parseVars(arguments,2,this),_parsePosition(this,_isNumber(t)?arguments[4]:n)),this},t.set=function set(e,t,r){return t.duration=0,t.parent=this,_inheritDefaults(t).repeatDelay||(t.repeat=0),t.immediateRender=!!t.immediateRender,new Tween(e,t,_parsePosition(this,r),1),this},t.call=function call(e,t,r){return _addToTimeline(this,Tween.delayedCall(0,e,t),_parsePosition(this,r))},t.staggerTo=function staggerTo(e,t,r,n,i,o,a){return r.duration=t,r.stagger=r.stagger||n,r.onComplete=o,r.onCompleteParams=a,r.parent=this,new Tween(e,r,_parsePosition(this,i)),this},t.staggerFrom=function staggerFrom(e,t,r,n,i,o,a){return r.runBackwards=1,_inheritDefaults(r).immediateRender=_isNotFalse(r.immediateRender),this.staggerTo(e,t,r,n,i,o,a)},t.staggerFromTo=function staggerFromTo(e,t,r,n,i,o,a,s){return n.startAt=r,_inheritDefaults(n).immediateRender=_isNotFalse(n.immediateRender),this.staggerTo(e,t,n,i,o,a,s)},t.render=function render(e,t,r){var n,i,o,a,s,l,c,u,h,d,p,m,f=this._time,g=this._dirty?this.totalDuration():this._tDur,_=this._dur,y=this!==_globalTimeline&&e>g-_tinyNum&&e>=0?g:e<_tinyNum?0:e,x=this._zTime<0!=e<0&&(this._initted||!_);if(y!==this._tTime||r||x){if(f!==this._time&&_&&(y+=this._time-f,e+=this._time-f),n=y,h=this._start,l=!(u=this._ts),x&&(_||(f=this._zTime),(e||!t)&&(this._zTime=e)),this._repeat){if(p=this._yoyo,s=_+this._rDelay,this._repeat<-1&&e<0)return this.totalTime(100*s+e,t,r);if(n=_round(y%s),y===g?(a=this._repeat,n=_):((a=~~(y/s))&&a===y/s&&(n=_,a--),n>_&&(n=_)),d=_animationCycle(this._tTime,s),!f&&this._tTime&&d!==a&&(d=a),p&&1&a&&(n=_-n,m=1),a!==d&&!this._lock){var b=p&&1&d,w=b===(p&&1&a);if(a<d&&(b=!b),f=b?0:_,this._lock=1,this.render(f||(m?0:_round(a*s)),t,!_)._lock=0,!t&&this.parent&&_callback(this,"onRepeat"),this.vars.repeatRefresh&&!m&&(this.invalidate()._lock=1),f!==this._time||l!==!this._ts)return this;if(_=this._dur,g=this._tDur,w&&(this._lock=2,f=b?_:-1e-4,this.render(f,!0),this.vars.repeatRefresh&&!m&&this.invalidate()),this._lock=0,!this._ts&&!l)return this;_propagateYoyoEase(this,m)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(c=_findNextPauseTween(this,_round(f),_round(n)))&&(y-=n-(n=c._start)),this._tTime=y,this._time=n,this._act=!u,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=e,f=0),!f&&(n||!_&&e>=0)&&!t&&_callback(this,"onStart"),n>=f&&e>=0)for(i=this._first;i;){if(o=i._next,(i._act||n>=i._start)&&i._ts&&c!==i){if(i.parent!==this)return this.render(e,t,r);if(i.render(i._ts>0?(n-i._start)*i._ts:(i._dirty?i.totalDuration():i._tDur)+(n-i._start)*i._ts,t,r),n!==this._time||!this._ts&&!l){c=0,o&&(y+=this._zTime=-_tinyNum);break}}i=o}else{i=this._last;for(var M=e<0?e:n;i;){if(o=i._prev,(i._act||M<=i._end)&&i._ts&&c!==i){if(i.parent!==this)return this.render(e,t,r);if(i.render(i._ts>0?(M-i._start)*i._ts:(i._dirty?i.totalDuration():i._tDur)+(M-i._start)*i._ts,t,r),n!==this._time||!this._ts&&!l){c=0,o&&(y+=this._zTime=M?-_tinyNum:_tinyNum);break}}i=o}}if(c&&!t&&(this.pause(),c.render(n>=f?0:-_tinyNum)._zTime=n>=f?1:-1,this._ts))return this._start=h,_setEnd(this),this.render(e,t,r);this._onUpdate&&!t&&_callback(this,"onUpdate",!0),(y===g&&g>=this.totalDuration()||!y&&f)&&(h!==this._start&&Math.abs(u)===Math.abs(this._ts)||this._lock||((e||!_)&&(y===g&&this._ts>0||!y&&this._ts<0)&&_removeFromParent(this,1),t||e<0&&!f||!y&&!f||(_callback(this,y===g?"onComplete":"onReverseComplete",!0),this._prom&&!(y<g&&this.timeScale()>0)&&this._prom())))}return this},t.add=function add(e,t){var r=this;if(_isNumber(t)||(t=_parsePosition(this,t)),!(e instanceof Animation)){if(_isArray(e))return e.forEach((function(e){return r.add(e,t)})),this;if(_isString(e))return this.addLabel(e,t);if(!_isFunction(e))return this;e=Tween.delayedCall(0,e)}return this!==e?_addToTimeline(this,e,t):this},t.getChildren=function getChildren(e,t,r,n){void 0===e&&(e=!0),void 0===t&&(t=!0),void 0===r&&(r=!0),void 0===n&&(n=-_bigNum);for(var i=[],o=this._first;o;)o._start>=n&&(o instanceof Tween?t&&i.push(o):(r&&i.push(o),e&&i.push.apply(i,o.getChildren(!0,t,r)))),o=o._next;return i},t.getById=function getById(e){for(var t=this.getChildren(1,1,1),r=t.length;r--;)if(t[r].vars.id===e)return t[r]},t.remove=function remove(e){return _isString(e)?this.removeLabel(e):_isFunction(e)?this.killTweensOf(e):(_removeLinkedListItem(this,e),e===this._recent&&(this._recent=this._last),_uncache(this))},t.totalTime=function totalTime(t,r){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=_round(_ticker.time-(this._ts>0?t/this._ts:(this.totalDuration()-t)/-this._ts))),e.prototype.totalTime.call(this,t,r),this._forcing=0,this):this._tTime},t.addLabel=function addLabel(e,t){return this.labels[e]=_parsePosition(this,t),this},t.removeLabel=function removeLabel(e){return delete this.labels[e],this},t.addPause=function addPause(e,t,r){var n=Tween.delayedCall(0,t||_emptyFunc,r);return n.data="isPause",this._hasPause=1,_addToTimeline(this,n,_parsePosition(this,e))},t.removePause=function removePause(e){var t=this._first;for(e=_parsePosition(this,e);t;)t._start===e&&"isPause"===t.data&&_removeFromParent(t),t=t._next},t.killTweensOf=function killTweensOf(e,t,r){for(var n=this.getTweensOf(e,r),i=n.length;i--;)_overwritingTween!==n[i]&&n[i].kill(e,t);return this},t.getTweensOf=function getTweensOf(e,t){for(var r,n=[],i=toArray(e),o=this._first,a=_isNumber(t);o;)o instanceof Tween?_arrayContainsAny(o._targets,i)&&(a?(!_overwritingTween||o._initted&&o._ts)&&o.globalTime(0)<=t&&o.globalTime(o.totalDuration())>t:!t||o.isActive())&&n.push(o):(r=o.getTweensOf(i,t)).length&&n.push.apply(n,r),o=o._next;return n},t.tweenTo=function tweenTo(e,t){t=t||{};var r=this,n=_parsePosition(r,e),i=t,o=i.startAt,a=i.onStart,s=i.onStartParams,l=i.immediateRender,c=Tween.to(r,_setDefaults({ease:"none",lazy:!1,immediateRender:!1,time:n,overwrite:"auto",duration:t.duration||Math.abs((n-(o&&"time"in o?o.time:r._time))/r.timeScale())||_tinyNum,onStart:function onStart(){r.pause();var e=t.duration||Math.abs((n-r._time)/r.timeScale());c._dur!==e&&_setDuration(c,e,0,1).render(c._time,!0,!0),a&&a.apply(c,s||[])}},t));return l?c.render(0):c},t.tweenFromTo=function tweenFromTo(e,t,r){return this.tweenTo(t,_setDefaults({startAt:{time:_parsePosition(this,e)}},r))},t.recent=function recent(){return this._recent},t.nextLabel=function nextLabel(e){return void 0===e&&(e=this._time),_getLabelInDirection(this,_parsePosition(this,e))},t.previousLabel=function previousLabel(e){return void 0===e&&(e=this._time),_getLabelInDirection(this,_parsePosition(this,e),1)},t.currentLabel=function currentLabel(e){return arguments.length?this.seek(e,!0):this.previousLabel(this._time+_tinyNum)},t.shiftChildren=function shiftChildren(e,t,r){void 0===r&&(r=0);for(var n,i=this._first,o=this.labels;i;)i._start>=r&&(i._start+=e,i._end+=e),i=i._next;if(t)for(n in o)o[n]>=r&&(o[n]+=e);return _uncache(this)},t.invalidate=function invalidate(){var t=this._first;for(this._lock=0;t;)t.invalidate(),t=t._next;return e.prototype.invalidate.call(this)},t.clear=function clear(e){void 0===e&&(e=!0);for(var t,r=this._first;r;)t=r._next,this.remove(r),r=t;return this._dp&&(this._time=this._tTime=this._pTime=0),e&&(this.labels={}),_uncache(this)},t.totalDuration=function totalDuration(e){var t,r,n,i=0,o=this,a=o._last,s=_bigNum;if(arguments.length)return o.timeScale((o._repeat<0?o.duration():o.totalDuration())/(o.reversed()?-e:e));if(o._dirty){for(n=o.parent;a;)t=a._prev,a._dirty&&a.totalDuration(),(r=a._start)>s&&o._sort&&a._ts&&!o._lock?(o._lock=1,_addToTimeline(o,a,r-a._delay,1)._lock=0):s=r,r<0&&a._ts&&(i-=r,(!n&&!o._dp||n&&n.smoothChildTiming)&&(o._start+=r/o._ts,o._time-=r,o._tTime-=r),o.shiftChildren(-r,!1,-Infinity),s=0),a._end>i&&a._ts&&(i=a._end),a=t;_setDuration(o,o===_globalTimeline&&o._time>i?o._time:i,1,1),o._dirty=0}return o._tDur},Timeline.updateRoot=function updateRoot(e){if(_globalTimeline._ts&&(_lazySafeRender(_globalTimeline,_parentToChildTotalTime(e,_globalTimeline)),_lastRenderedFrame=_ticker.frame),_ticker.frame>=_nextGCFrame){_nextGCFrame+=_config.autoSleep||120;var t=_globalTimeline._first;if((!t||!t._ts)&&_config.autoSleep&&_ticker._listeners.length<2){for(;t&&!t._ts;)t=t._next;t||_ticker.sleep()}}},Timeline}(Animation);_setDefaults(Timeline.prototype,{_lock:0,_hasPause:0,_forcing:0});var _overwritingTween,_addComplexStringPropTween=function _addComplexStringPropTween(e,t,r,n,i,o,a){var s,l,c,u,h,d,p,m,f=new PropTween(this._pt,e,t,0,1,_renderComplexString,null,i),g=0,_=0;for(f.b=r,f.e=n,r+="",(p=~(n+="").indexOf("random("))&&(n=_replaceRandom(n)),o&&(o(m=[r,n],e,t),r=m[0],n=m[1]),l=r.match(_complexStringNumExp)||[];s=_complexStringNumExp.exec(n);)u=s[0],h=n.substring(g,s.index),c?c=(c+1)%5:"rgba("===h.substr(-5)&&(c=1),u!==l[_++]&&(d=parseFloat(l[_-1])||0,f._pt={_next:f._pt,p:h||1===_?h:",",s:d,c:"="===u.charAt(1)?parseFloat(u.substr(2))*("-"===u.charAt(0)?-1:1):parseFloat(u)-d,m:c&&c<4?Math.round:0},g=_complexStringNumExp.lastIndex);return f.c=g<n.length?n.substring(g,n.length):"",f.fp=a,(_relExp.test(n)||p)&&(f.e=0),this._pt=f,f},_addPropTween=function _addPropTween(e,t,r,n,i,o,a,s,l){_isFunction(n)&&(n=n(i||0,e,o));var c,u=e[t],h="get"!==r?r:_isFunction(u)?l?e[t.indexOf("set")||!_isFunction(e["get"+t.substr(3)])?t:"get"+t.substr(3)](l):e[t]():u,d=_isFunction(u)?l?_setterFuncWithParam:_setterFunc:_setterPlain;if(_isString(n)&&(~n.indexOf("random(")&&(n=_replaceRandom(n)),"="===n.charAt(1)&&(n=parseFloat(h)+parseFloat(n.substr(2))*("-"===n.charAt(0)?-1:1)+(getUnit(h)||0))),h!==n)return isNaN(h*n)?(!u&&!(t in e)&&_missingPlugin(t,n),_addComplexStringPropTween.call(this,e,t,h,n,d,s||_config.stringFilter,l)):(c=new PropTween(this._pt,e,t,+h||0,n-(h||0),"boolean"==typeof u?_renderBoolean:_renderPlain,0,d),l&&(c.fp=l),a&&c.modifier(a,this,e),this._pt=c)},_processVars=function _processVars(e,t,r,n,i){if(_isFunction(e)&&(e=_parseFuncOrString(e,i,t,r,n)),!_isObject(e)||e.style&&e.nodeType||_isArray(e)||_isTypedArray(e))return _isString(e)?_parseFuncOrString(e,i,t,r,n):e;var o,a={};for(o in e)a[o]=_parseFuncOrString(e[o],i,t,r,n);return a},_checkPlugin=function _checkPlugin(e,t,r,n,i,o){var a,s,l,c;if(_plugins[e]&&!1!==(a=new _plugins[e]).init(i,a.rawVars?t[e]:_processVars(t[e],n,i,o,r),r,n,o)&&(r._pt=s=new PropTween(r._pt,i,e,0,1,a.render,a,0,a.priority),r!==_quickTween))for(l=r._ptLookup[r._targets.indexOf(i)],c=a._props.length;c--;)l[a._props[c]]=s;return a},_initTween=function _initTween(e,t){var r,n,i,o,a,s,l,c,u,h,d,p,m,f=e.vars,g=f.ease,_=f.startAt,y=f.immediateRender,x=f.lazy,b=f.onUpdate,w=f.onUpdateParams,M=f.callbackScope,S=f.runBackwards,T=f.yoyoEase,A=f.keyframes,E=f.autoRevert,C=e._dur,L=e._startAt,P=e._targets,R=e.parent,B=R&&"nested"===R.data?R.parent._targets:P,D="auto"===e._overwrite&&!_suppressOverwrites,O=e.timeline;if(O&&(!A||!g)&&(g="none"),e._ease=_parseEase(g,_defaults.ease),e._yEase=T?_invertEase(_parseEase(!0===T?g:T,_defaults.ease)):0,T&&e._yoyo&&!e._repeat&&(T=e._yEase,e._yEase=e._ease,e._ease=T),!O){if(p=(c=P[0]?_getCache(P[0]).harness:0)&&f[c.prop],r=_copyExcluding(f,_reservedProps),L&&L.render(-1,!0).kill(),_){if(_removeFromParent(e._startAt=Tween.set(P,_setDefaults({data:"isStart",overwrite:!1,parent:R,immediateRender:!0,lazy:_isNotFalse(x),startAt:null,delay:0,onUpdate:b,onUpdateParams:w,callbackScope:M,stagger:0},_))),y)if(t>0)E||(e._startAt=0);else if(C&&!(t<0&&L))return void(t&&(e._zTime=t))}else if(S&&C)if(L)!E&&(e._startAt=0);else if(t&&(y=!1),i=_setDefaults({overwrite:!1,data:"isFromStart",lazy:y&&_isNotFalse(x),immediateRender:y,stagger:0,parent:R},r),p&&(i[c.prop]=p),_removeFromParent(e._startAt=Tween.set(P,i)),y){if(!t)return}else _initTween(e._startAt,_tinyNum);for(e._pt=0,x=C&&_isNotFalse(x)||x&&!C,n=0;n<P.length;n++){if(l=(a=P[n])._gsap||_harness(P)[n]._gsap,e._ptLookup[n]=h={},_lazyLookup[l.id]&&_lazyTweens.length&&_lazyRender(),d=B===P?n:B.indexOf(a),c&&!1!==(u=new c).init(a,p||r,e,d,B)&&(e._pt=o=new PropTween(e._pt,a,u.name,0,1,u.render,u,0,u.priority),u._props.forEach((function(e){h[e]=o})),u.priority&&(s=1)),!c||p)for(i in r)_plugins[i]&&(u=_checkPlugin(i,r,e,d,a,B))?u.priority&&(s=1):h[i]=o=_addPropTween.call(e,a,i,"get",r[i],d,B,0,f.stringFilter);e._op&&e._op[n]&&e.kill(a,e._op[n]),D&&e._pt&&(_overwritingTween=e,_globalTimeline.killTweensOf(a,h,e.globalTime(0)),m=!e.parent,_overwritingTween=0),e._pt&&x&&(_lazyLookup[l.id]=1)}s&&_sortPropTweensByPriority(e),e._onInit&&e._onInit(e)}e._from=!O&&!!f.runBackwards,e._onUpdate=b,e._initted=(!e._op||e._pt)&&!m},_addAliasesToVars=function _addAliasesToVars(e,t){var r,n,i,o,a=e[0]?_getCache(e[0]).harness:0,s=a&&a.aliases;if(!s)return t;for(n in r=_merge({},t),s)if(n in r)for(i=(o=s[n].split(",")).length;i--;)r[o[i]]=r[n];return r},_parseFuncOrString=function _parseFuncOrString(e,t,r,n,i){return _isFunction(e)?e.call(t,r,n,i):_isString(e)&&~e.indexOf("random(")?_replaceRandom(e):e},_staggerTweenProps=_callbackNames+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase",_staggerPropsToSkip=(_staggerTweenProps+",id,stagger,delay,duration,paused,scrollTrigger").split(","),Tween=function(e){function Tween(t,r,n,i){var o;"number"==typeof r&&(n.duration=r,r=n,n=null);var a,s,l,c,u,h,d,p,m=(o=e.call(this,i?r:_inheritDefaults(r),n)||this).vars,f=m.duration,g=m.delay,_=m.immediateRender,y=m.stagger,x=m.overwrite,b=m.keyframes,w=m.defaults,M=m.scrollTrigger,S=m.yoyoEase,T=o.parent,A=(_isArray(t)||_isTypedArray(t)?_isNumber(t[0]):"length"in r)?[t]:toArray(t);if(o._targets=A.length?_harness(A):_warn("GSAP target "+t+" not found. https://greensock.com",!_config.nullTargetWarn)||[],o._ptLookup=[],o._overwrite=x,b||y||_isFuncOrString(f)||_isFuncOrString(g)){if(r=o.vars,(a=o.timeline=new Timeline({data:"nested",defaults:w||{}})).kill(),a.parent=a._dp=_assertThisInitialized(o),a._start=0,b)_setDefaults(a.vars.defaults,{ease:"none"}),b.forEach((function(e){return a.to(A,e,">")}));else{if(c=A.length,d=y?distribute(y):_emptyFunc,_isObject(y))for(u in y)~_staggerTweenProps.indexOf(u)&&(p||(p={}),p[u]=y[u]);for(s=0;s<c;s++){for(u in l={},r)_staggerPropsToSkip.indexOf(u)<0&&(l[u]=r[u]);l.stagger=0,S&&(l.yoyoEase=S),p&&_merge(l,p),h=A[s],l.duration=+_parseFuncOrString(f,_assertThisInitialized(o),s,h,A),l.delay=(+_parseFuncOrString(g,_assertThisInitialized(o),s,h,A)||0)-o._delay,!y&&1===c&&l.delay&&(o._delay=g=l.delay,o._start+=g,l.delay=0),a.to(h,l,d(s,h,A))}a.duration()?f=g=0:o.timeline=0}f||o.duration(f=a.duration())}else o.timeline=0;return!0!==x||_suppressOverwrites||(_overwritingTween=_assertThisInitialized(o),_globalTimeline.killTweensOf(A),_overwritingTween=0),T&&_postAddChecks(T,_assertThisInitialized(o)),(_||!f&&!b&&o._start===_round(T._time)&&_isNotFalse(_)&&_hasNoPausedAncestors(_assertThisInitialized(o))&&"nested"!==T.data)&&(o._tTime=-_tinyNum,o.render(Math.max(0,-g))),M&&_scrollTrigger(_assertThisInitialized(o),M),o}_inheritsLoose(Tween,e);var t=Tween.prototype;return t.render=function render(e,t,r){var n,i,o,a,s,l,c,u,h,d=this._time,p=this._tDur,m=this._dur,f=e>p-_tinyNum&&e>=0?p:e<_tinyNum?0:e;if(m){if(f!==this._tTime||!e||r||!this._initted&&this._tTime||this._startAt&&this._zTime<0!=e<0){if(n=f,u=this.timeline,this._repeat){if(a=m+this._rDelay,this._repeat<-1&&e<0)return this.totalTime(100*a+e,t,r);if(n=_round(f%a),f===p?(o=this._repeat,n=m):((o=~~(f/a))&&o===f/a&&(n=m,o--),n>m&&(n=m)),(l=this._yoyo&&1&o)&&(h=this._yEase,n=m-n),s=_animationCycle(this._tTime,a),n===d&&!r&&this._initted)return this;o!==s&&(u&&this._yEase&&_propagateYoyoEase(u,l),!this.vars.repeatRefresh||l||this._lock||(this._lock=r=1,this.render(_round(a*o),!0).invalidate()._lock=0))}if(!this._initted){if(_attemptInitTween(this,e<0?e:n,r,t))return this._tTime=0,this;if(m!==this._dur)return this.render(e,t,r)}for(this._tTime=f,this._time=n,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=c=(h||this._ease)(n/m),this._from&&(this.ratio=c=1-c),n&&!d&&!t&&_callback(this,"onStart"),i=this._pt;i;)i.r(c,i.d),i=i._next;u&&u.render(e<0?e:!n&&l?-_tinyNum:u._dur*c,t,r)||this._startAt&&(this._zTime=e),this._onUpdate&&!t&&(e<0&&this._startAt&&this._startAt.render(e,!0,r),_callback(this,"onUpdate")),this._repeat&&o!==s&&this.vars.onRepeat&&!t&&this.parent&&_callback(this,"onRepeat"),f!==this._tDur&&f||this._tTime!==f||(e<0&&this._startAt&&!this._onUpdate&&this._startAt.render(e,!0,!0),(e||!m)&&(f===this._tDur&&this._ts>0||!f&&this._ts<0)&&_removeFromParent(this,1),t||e<0&&!d||!f&&!d||(_callback(this,f===p?"onComplete":"onReverseComplete",!0),this._prom&&!(f<p&&this.timeScale()>0)&&this._prom()))}}else _renderZeroDurationTween(this,e,t,r);return this},t.targets=function targets(){return this._targets},t.invalidate=function invalidate(){return this._pt=this._op=this._startAt=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(),e.prototype.invalidate.call(this)},t.kill=function kill(e,t){if(void 0===t&&(t="all"),!(e||t&&"all"!==t))return this._lazy=this._pt=0,this.parent?_interrupt(this):this;if(this.timeline){var r=this.timeline.totalDuration();return this.timeline.killTweensOf(e,t,_overwritingTween&&!0!==_overwritingTween.vars.overwrite)._first||_interrupt(this),this.parent&&r!==this.timeline.totalDuration()&&_setDuration(this,this._dur*this.timeline._tDur/r,0,1),this}var n,i,o,a,s,l,c,u=this._targets,h=e?toArray(e):u,d=this._ptLookup,p=this._pt;if((!t||"all"===t)&&_arraysMatch(u,h))return"all"===t&&(this._pt=0),_interrupt(this);for(n=this._op=this._op||[],"all"!==t&&(_isString(t)&&(s={},_forEachName(t,(function(e){return s[e]=1})),t=s),t=_addAliasesToVars(u,t)),c=u.length;c--;)if(~h.indexOf(u[c]))for(s in i=d[c],"all"===t?(n[c]=t,a=i,o={}):(o=n[c]=n[c]||{},a=t),a)(l=i&&i[s])&&("kill"in l.d&&!0!==l.d.kill(s)||_removeLinkedListItem(this,l,"_pt"),delete i[s]),"all"!==o&&(o[s]=1);return this._initted&&!this._pt&&p&&_interrupt(this),this},Tween.to=function to(e,t){return new Tween(e,t,arguments[2])},Tween.from=function from(e,t){return new Tween(e,_parseVars(arguments,1))},Tween.delayedCall=function delayedCall(e,t,r,n){return new Tween(t,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:e,onComplete:t,onReverseComplete:t,onCompleteParams:r,onReverseCompleteParams:r,callbackScope:n})},Tween.fromTo=function fromTo(e,t,r){return new Tween(e,_parseVars(arguments,2))},Tween.set=function set(e,t){return t.duration=0,t.repeatDelay||(t.repeat=0),new Tween(e,t)},Tween.killTweensOf=function killTweensOf(e,t,r){return _globalTimeline.killTweensOf(e,t,r)},Tween}(Animation);_setDefaults(Tween.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0}),_forEachName("staggerTo,staggerFrom,staggerFromTo",(function(e){Tween[e]=function(){var t=new Timeline,r=_slice.call(arguments,0);return r.splice("staggerFromTo"===e?5:4,0,0),t[e].apply(t,r)}}));var _setterPlain=function _setterPlain(e,t,r){return e[t]=r},_setterFunc=function _setterFunc(e,t,r){return e[t](r)},_setterFuncWithParam=function _setterFuncWithParam(e,t,r,n){return e[t](n.fp,r)},_setterAttribute=function _setterAttribute(e,t,r){return e.setAttribute(t,r)},_getSetter=function _getSetter(e,t){return _isFunction(e[t])?_setterFunc:_isUndefined(e[t])&&e.setAttribute?_setterAttribute:_setterPlain},_renderPlain=function _renderPlain(e,t){return t.set(t.t,t.p,Math.round(1e4*(t.s+t.c*e))/1e4,t)},_renderBoolean=function _renderBoolean(e,t){return t.set(t.t,t.p,!!(t.s+t.c*e),t)},_renderComplexString=function _renderComplexString(e,t){var r=t._pt,n="";if(!e&&t.b)n=t.b;else if(1===e&&t.e)n=t.e;else{for(;r;)n=r.p+(r.m?r.m(r.s+r.c*e):Math.round(1e4*(r.s+r.c*e))/1e4)+n,r=r._next;n+=t.c}t.set(t.t,t.p,n,t)},_renderPropTweens=function _renderPropTweens(e,t){for(var r=t._pt;r;)r.r(e,r.d),r=r._next},_addPluginModifier=function _addPluginModifier(e,t,r,n){for(var i,o=this._pt;o;)i=o._next,o.p===n&&o.modifier(e,t,r),o=i},_killPropTweensOf=function _killPropTweensOf(e){for(var t,r,n=this._pt;n;)r=n._next,n.p===e&&!n.op||n.op===e?_removeLinkedListItem(this,n,"_pt"):n.dep||(t=1),n=r;return!t},_setterWithModifier=function _setterWithModifier(e,t,r,n){n.mSet(e,t,n.m.call(n.tween,r,n.mt),n)},_sortPropTweensByPriority=function _sortPropTweensByPriority(e){for(var t,r,n,i,o=e._pt;o;){for(t=o._next,r=n;r&&r.pr>o.pr;)r=r._next;(o._prev=r?r._prev:i)?o._prev._next=o:n=o,(o._next=r)?r._prev=o:i=o,o=t}e._pt=n},PropTween=function(){function PropTween(e,t,r,n,i,o,a,s,l){this.t=t,this.s=n,this.c=i,this.p=r,this.r=o||_renderPlain,this.d=a||this,this.set=s||_setterPlain,this.pr=l||0,this._next=e,e&&(e._prev=this)}return PropTween.prototype.modifier=function modifier(e,t,r){this.mSet=this.mSet||this.set,this.set=_setterWithModifier,this.m=e,this.mt=r,this.tween=t},PropTween}();_forEachName(_callbackNames+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",(function(e){return _reservedProps[e]=1})),_globals.TweenMax=_globals.TweenLite=Tween,_globals.TimelineLite=_globals.TimelineMax=Timeline,_globalTimeline=new Timeline({sortChildren:!1,defaults:_defaults,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0}),_config.stringFilter=_colorStringFilter;var _gsap={registerPlugin:function registerPlugin(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];t.forEach((function(e){return _createPlugin(e)}))},timeline:function timeline(e){return new Timeline(e)},getTweensOf:function getTweensOf(e,t){return _globalTimeline.getTweensOf(e,t)},getProperty:function getProperty(e,t,r,n){_isString(e)&&(e=toArray(e)[0]);var i=_getCache(e||{}).get,o=r?_passThrough:_numericIfPossible;return"native"===r&&(r=""),e?t?o((_plugins[t]&&_plugins[t].get||i)(e,t,r,n)):function(t,r,n){return o((_plugins[t]&&_plugins[t].get||i)(e,t,r,n))}:e},quickSetter:function quickSetter(e,t,r){if((e=toArray(e)).length>1){var n=e.map((function(e){return gsap.quickSetter(e,t,r)})),i=n.length;return function(e){for(var t=i;t--;)n[t](e)}}e=e[0]||{};var o=_plugins[t],a=_getCache(e),s=a.harness&&(a.harness.aliases||{})[t]||t,l=o?function(t){var n=new o;_quickTween._pt=0,n.init(e,r?t+r:t,_quickTween,0,[e]),n.render(1,n),_quickTween._pt&&_renderPropTweens(1,_quickTween)}:a.set(e,s);return o?l:function(t){return l(e,s,r?t+r:t,a,1)}},isTweening:function isTweening(e){return _globalTimeline.getTweensOf(e,!0).length>0},defaults:function defaults(e){return e&&e.ease&&(e.ease=_parseEase(e.ease,_defaults.ease)),_mergeDeep(_defaults,e||{})},config:function config(e){return _mergeDeep(_config,e||{})},registerEffect:function registerEffect(e){var t=e.name,r=e.effect,n=e.plugins,i=e.defaults,o=e.extendTimeline;(n||"").split(",").forEach((function(e){return e&&!_plugins[e]&&!_globals[e]&&_warn(t+" effect requires "+e+" plugin.")})),_effects[t]=function(e,t,n){return r(toArray(e),_setDefaults(t||{},i),n)},o&&(Timeline.prototype[t]=function(e,r,n){return this.add(_effects[t](e,_isObject(r)?r:(n=r)&&{},this),n)})},registerEase:function registerEase(e,t){_easeMap[e]=_parseEase(t)},parseEase:function parseEase(e,t){return arguments.length?_parseEase(e,t):_easeMap},getById:function getById(e){return _globalTimeline.getById(e)},exportRoot:function exportRoot(e,t){void 0===e&&(e={});var r,n,i=new Timeline(e);for(i.smoothChildTiming=_isNotFalse(e.smoothChildTiming),_globalTimeline.remove(i),i._dp=0,i._time=i._tTime=_globalTimeline._time,r=_globalTimeline._first;r;)n=r._next,!t&&!r._dur&&r instanceof Tween&&r.vars.onComplete===r._targets[0]||_addToTimeline(i,r,r._start-r._delay),r=n;return _addToTimeline(_globalTimeline,i,0),i},utils:{wrap:wrap,wrapYoyo:wrapYoyo,distribute:distribute,random:random,snap:snap,normalize:normalize,getUnit:getUnit,clamp:clamp,splitColor:splitColor,toArray:toArray,mapRange:mapRange,pipe:pipe,unitize:unitize,interpolate:interpolate,shuffle:shuffle},install:_install,effects:_effects,ticker:_ticker,updateRoot:Timeline.updateRoot,plugins:_plugins,globalTimeline:_globalTimeline,core:{PropTween:PropTween,globals:_addGlobal,Tween:Tween,Timeline:Timeline,Animation:Animation,getCache:_getCache,_removeLinkedListItem:_removeLinkedListItem,suppressOverwrites:function suppressOverwrites(e){return _suppressOverwrites=e}}};_forEachName("to,from,fromTo,delayedCall,set,killTweensOf",(function(e){return _gsap[e]=Tween[e]})),_ticker.add(Timeline.updateRoot),_quickTween=_gsap.to({},{duration:0});var _getPluginPropTween=function _getPluginPropTween(e,t){for(var r=e._pt;r&&r.p!==t&&r.op!==t&&r.fp!==t;)r=r._next;return r},_addModifiers=function _addModifiers(e,t){var r,n,i,o=e._targets;for(r in t)for(n=o.length;n--;)(i=e._ptLookup[n][r])&&(i=i.d)&&(i._pt&&(i=_getPluginPropTween(i,r)),i&&i.modifier&&i.modifier(t[r],e,o[n],r))},_buildModifierPlugin=function _buildModifierPlugin(e,t){return{name:e,rawVars:1,init:function init(e,r,n){n._onInit=function(e){var n,i;if(_isString(r)&&(n={},_forEachName(r,(function(e){return n[e]=1})),r=n),t){for(i in n={},r)n[i]=t(r[i]);r=n}_addModifiers(e,r)}}}},gsap=_gsap.registerPlugin({name:"attr",init:function init(e,t,r,n,i){var o,a;for(o in t)(a=this.add(e,"setAttribute",(e.getAttribute(o)||0)+"",t[o],n,i,0,0,o))&&(a.op=o),this._props.push(o)}},{name:"endArray",init:function init(e,t){for(var r=t.length;r--;)this.add(e,r,e[r]||0,t[r])}},_buildModifierPlugin("roundProps",_roundModifier),_buildModifierPlugin("modifiers"),_buildModifierPlugin("snap",snap))||_gsap;Tween.version=Timeline.version=gsap.version="3.6.0",_coreReady=1,_windowExists()&&_wake();var _win$1,_doc$1,_docElement,_pluginInitted,_tempDiv,_tempDivStyler,_recentSetterPlugin,_supports3D,Power0=_easeMap.Power0,Power1=_easeMap.Power1,Power2=_easeMap.Power2,Power3=_easeMap.Power3,Power4=_easeMap.Power4,Linear=_easeMap.Linear,Quad=_easeMap.Quad,Cubic=_easeMap.Cubic,Quart=_easeMap.Quart,Quint=_easeMap.Quint,Strong=_easeMap.Strong,Elastic=_easeMap.Elastic,Back=_easeMap.Back,SteppedEase=_easeMap.SteppedEase,Bounce=_easeMap.Bounce,Sine=_easeMap.Sine,Expo=_easeMap.Expo,Circ=_easeMap.Circ,_windowExists$1=function _windowExists(){return"undefined"!=typeof window},_transformProps={},_RAD2DEG=180/Math.PI,_DEG2RAD=Math.PI/180,_atan2=Math.atan2,_bigNum$1=1e8,_capsExp=/([A-Z])/g,_horizontalExp=/(?:left|right|width|margin|padding|x)/i,_complexExp=/[\s,\(]\S/,_propertyAliases={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},_renderCSSProp=function _renderCSSProp(e,t){return t.set(t.t,t.p,Math.round(1e4*(t.s+t.c*e))/1e4+t.u,t)},_renderPropWithEnd=function _renderPropWithEnd(e,t){return t.set(t.t,t.p,1===e?t.e:Math.round(1e4*(t.s+t.c*e))/1e4+t.u,t)},_renderCSSPropWithBeginning=function _renderCSSPropWithBeginning(e,t){return t.set(t.t,t.p,e?Math.round(1e4*(t.s+t.c*e))/1e4+t.u:t.b,t)},_renderRoundedCSSProp=function _renderRoundedCSSProp(e,t){var r=t.s+t.c*e;t.set(t.t,t.p,~~(r+(r<0?-.5:.5))+t.u,t)},_renderNonTweeningValue=function _renderNonTweeningValue(e,t){return t.set(t.t,t.p,e?t.e:t.b,t)},_renderNonTweeningValueOnlyAtEnd=function _renderNonTweeningValueOnlyAtEnd(e,t){return t.set(t.t,t.p,1!==e?t.b:t.e,t)},_setterCSSStyle=function _setterCSSStyle(e,t,r){return e.style[t]=r},_setterCSSProp=function _setterCSSProp(e,t,r){return e.style.setProperty(t,r)},_setterTransform=function _setterTransform(e,t,r){return e._gsap[t]=r},_setterScale=function _setterScale(e,t,r){return e._gsap.scaleX=e._gsap.scaleY=r},_setterScaleWithRender=function _setterScaleWithRender(e,t,r,n,i){var o=e._gsap;o.scaleX=o.scaleY=r,o.renderTransform(i,o)},_setterTransformWithRender=function _setterTransformWithRender(e,t,r,n,i){var o=e._gsap;o[t]=r,o.renderTransform(i,o)},_transformProp="transform",_transformOriginProp=_transformProp+"Origin",_createElement=function _createElement(e,t){var r=_doc$1.createElementNS?_doc$1.createElementNS((t||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),e):_doc$1.createElement(e);return r.style?r:_doc$1.createElement(e)},_getComputedProperty=function _getComputedProperty(e,t,r){var n=getComputedStyle(e);return n[t]||n.getPropertyValue(t.replace(_capsExp,"-$1").toLowerCase())||n.getPropertyValue(t)||!r&&_getComputedProperty(e,_checkPropPrefix(t)||t,1)||""},_prefixes="O,Moz,ms,Ms,Webkit".split(","),_checkPropPrefix=function _checkPropPrefix(e,t,r){var n=(t||_tempDiv).style,i=5;if(e in n&&!r)return e;for(e=e.charAt(0).toUpperCase()+e.substr(1);i--&&!(_prefixes[i]+e in n););return i<0?null:(3===i?"ms":i>=0?_prefixes[i]:"")+e},_initCore=function _initCore(){_windowExists$1()&&window.document&&(_win$1=window,_doc$1=_win$1.document,_docElement=_doc$1.documentElement,_tempDiv=_createElement("div")||{style:{}},_tempDivStyler=_createElement("div"),_transformProp=_checkPropPrefix(_transformProp),_transformOriginProp=_transformProp+"Origin",_tempDiv.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",_supports3D=!!_checkPropPrefix("perspective"),_pluginInitted=1)},_getBBoxHack=function _getBBoxHack(e){var t,r=_createElement("svg",this.ownerSVGElement&&this.ownerSVGElement.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),n=this.parentNode,i=this.nextSibling,o=this.style.cssText;if(_docElement.appendChild(r),r.appendChild(this),this.style.display="block",e)try{t=this.getBBox(),this._gsapBBox=this.getBBox,this.getBBox=_getBBoxHack}catch(e){}else this._gsapBBox&&(t=this._gsapBBox());return n&&(i?n.insertBefore(this,i):n.appendChild(this)),_docElement.removeChild(r),this.style.cssText=o,t},_getAttributeFallbacks=function _getAttributeFallbacks(e,t){for(var r=t.length;r--;)if(e.hasAttribute(t[r]))return e.getAttribute(t[r])},_getBBox=function _getBBox(e){var t;try{t=e.getBBox()}catch(r){t=_getBBoxHack.call(e,!0)}return t&&(t.width||t.height)||e.getBBox===_getBBoxHack||(t=_getBBoxHack.call(e,!0)),!t||t.width||t.x||t.y?t:{x:+_getAttributeFallbacks(e,["x","cx","x1"])||0,y:+_getAttributeFallbacks(e,["y","cy","y1"])||0,width:0,height:0}},_isSVG=function _isSVG(e){return!(!e.getCTM||e.parentNode&&!e.ownerSVGElement||!_getBBox(e))},_removeProperty=function _removeProperty(e,t){if(t){var r=e.style;t in _transformProps&&t!==_transformOriginProp&&(t=_transformProp),r.removeProperty?("ms"!==t.substr(0,2)&&"webkit"!==t.substr(0,6)||(t="-"+t),r.removeProperty(t.replace(_capsExp,"-$1").toLowerCase())):r.removeAttribute(t)}},_addNonTweeningPT=function _addNonTweeningPT(e,t,r,n,i,o){var a=new PropTween(e._pt,t,r,0,1,o?_renderNonTweeningValueOnlyAtEnd:_renderNonTweeningValue);return e._pt=a,a.b=n,a.e=i,e._props.push(r),a},_nonConvertibleUnits={deg:1,rad:1,turn:1},_convertToUnit=function _convertToUnit(e,t,r,n){var i,o,a,s,l=parseFloat(r)||0,c=(r+"").trim().substr((l+"").length)||"px",u=_tempDiv.style,h=_horizontalExp.test(t),d="svg"===e.tagName.toLowerCase(),p=(d?"client":"offset")+(h?"Width":"Height"),m="px"===n,f="%"===n;return n===c||!l||_nonConvertibleUnits[n]||_nonConvertibleUnits[c]?l:("px"!==c&&!m&&(l=_convertToUnit(e,t,r,"px")),s=e.getCTM&&_isSVG(e),!f&&"%"!==c||!_transformProps[t]&&!~t.indexOf("adius")?(u[h?"width":"height"]=100+(m?c:n),o=~t.indexOf("adius")||"em"===n&&e.appendChild&&!d?e:e.parentNode,s&&(o=(e.ownerSVGElement||{}).parentNode),o&&o!==_doc$1&&o.appendChild||(o=_doc$1.body),(a=o._gsap)&&f&&a.width&&h&&a.time===_ticker.time?_round(l/a.width*100):((f||"%"===c)&&(u.position=_getComputedProperty(e,"position")),o===e&&(u.position="static"),o.appendChild(_tempDiv),i=_tempDiv[p],o.removeChild(_tempDiv),u.position="absolute",h&&f&&((a=_getCache(o)).time=_ticker.time,a.width=o[p]),_round(m?i*l/100:i&&l?100/i*l:0))):(i=s?e.getBBox()[h?"width":"height"]:e[p],_round(f?l/i*100:l/100*i)))},_get=function _get(e,t,r,n){var i;return _pluginInitted||_initCore(),t in _propertyAliases&&"transform"!==t&&~(t=_propertyAliases[t]).indexOf(",")&&(t=t.split(",")[0]),_transformProps[t]&&"transform"!==t?(i=_parseTransform(e,n),i="transformOrigin"!==t?i[t]:_firstTwoOnly(_getComputedProperty(e,_transformOriginProp))+" "+i.zOrigin+"px"):(!(i=e.style[t])||"auto"===i||n||~(i+"").indexOf("calc("))&&(i=_specialProps[t]&&_specialProps[t](e,t,r)||_getComputedProperty(e,t)||_getProperty(e,t)||("opacity"===t?1:0)),r&&!~(i+"").trim().indexOf(" ")?_convertToUnit(e,t,i,r)+r:i},_tweenComplexCSSString=function _tweenComplexCSSString(e,t,r,n){if(!r||"none"===r){var i=_checkPropPrefix(t,e,1),o=i&&_getComputedProperty(e,i,1);o&&o!==r?(t=i,r=o):"borderColor"===t&&(r=_getComputedProperty(e,"borderTopColor"))}var a,s,l,c,u,h,d,p,m,f,g,_,y=new PropTween(this._pt,e.style,t,0,1,_renderComplexString),x=0,b=0;if(y.b=r,y.e=n,r+="","auto"===(n+="")&&(e.style[t]=n,n=_getComputedProperty(e,t)||n,e.style[t]=r),_colorStringFilter(a=[r,n]),n=a[1],l=(r=a[0]).match(_numWithUnitExp)||[],(n.match(_numWithUnitExp)||[]).length){for(;s=_numWithUnitExp.exec(n);)d=s[0],m=n.substring(x,s.index),u?u=(u+1)%5:"rgba("!==m.substr(-5)&&"hsla("!==m.substr(-5)||(u=1),d!==(h=l[b++]||"")&&(c=parseFloat(h)||0,g=h.substr((c+"").length),(_="="===d.charAt(1)?+(d.charAt(0)+"1"):0)&&(d=d.substr(2)),p=parseFloat(d),f=d.substr((p+"").length),x=_numWithUnitExp.lastIndex-f.length,f||(f=f||_config.units[t]||g,x===n.length&&(n+=f,y.e+=f)),g!==f&&(c=_convertToUnit(e,t,h,f)||0),y._pt={_next:y._pt,p:m||1===b?m:",",s:c,c:_?_*p:p-c,m:u&&u<4||"zIndex"===t?Math.round:0});y.c=x<n.length?n.substring(x,n.length):""}else y.r="display"===t&&"none"===n?_renderNonTweeningValueOnlyAtEnd:_renderNonTweeningValue;return _relExp.test(n)&&(y.e=0),this._pt=y,y},_keywordToPercent={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},_convertKeywordsToPercentages=function _convertKeywordsToPercentages(e){var t=e.split(" "),r=t[0],n=t[1]||"50%";return"top"!==r&&"bottom"!==r&&"left"!==n&&"right"!==n||(e=r,r=n,n=e),t[0]=_keywordToPercent[r]||r,t[1]=_keywordToPercent[n]||n,t.join(" ")},_renderClearProps=function _renderClearProps(e,t){if(t.tween&&t.tween._time===t.tween._dur){var r,n,i,o=t.t,a=o.style,s=t.u,l=o._gsap;if("all"===s||!0===s)a.cssText="",n=1;else for(i=(s=s.split(",")).length;--i>-1;)r=s[i],_transformProps[r]&&(n=1,r="transformOrigin"===r?_transformOriginProp:_transformProp),_removeProperty(o,r);n&&(_removeProperty(o,_transformProp),l&&(l.svg&&o.removeAttribute("transform"),_parseTransform(o,1),l.uncache=1))}},_specialProps={clearProps:function clearProps(e,t,r,n,i){if("isFromStart"!==i.data){var o=e._pt=new PropTween(e._pt,t,r,0,0,_renderClearProps);return o.u=n,o.pr=-10,o.tween=i,e._props.push(r),1}}},_identity2DMatrix=[1,0,0,1,0,0],_rotationalProperties={},_isNullTransform=function _isNullTransform(e){return"matrix(1, 0, 0, 1, 0, 0)"===e||"none"===e||!e},_getComputedTransformMatrixAsArray=function _getComputedTransformMatrixAsArray(e){var t=_getComputedProperty(e,_transformProp);return _isNullTransform(t)?_identity2DMatrix:t.substr(7).match(_numExp).map(_round)},_getMatrix=function _getMatrix(e,t){var r,n,i,o,a=e._gsap||_getCache(e),s=e.style,l=_getComputedTransformMatrixAsArray(e);return a.svg&&e.getAttribute("transform")?"1,0,0,1,0,0"===(l=[(i=e.transform.baseVal.consolidate().matrix).a,i.b,i.c,i.d,i.e,i.f]).join(",")?_identity2DMatrix:l:(l!==_identity2DMatrix||e.offsetParent||e===_docElement||a.svg||(i=s.display,s.display="block",(r=e.parentNode)&&e.offsetParent||(o=1,n=e.nextSibling,_docElement.appendChild(e)),l=_getComputedTransformMatrixAsArray(e),i?s.display=i:_removeProperty(e,"display"),o&&(n?r.insertBefore(e,n):r?r.appendChild(e):_docElement.removeChild(e))),t&&l.length>6?[l[0],l[1],l[4],l[5],l[12],l[13]]:l)},_applySVGOrigin=function _applySVGOrigin(e,t,r,n,i,o){var a,s,l,c=e._gsap,u=i||_getMatrix(e,!0),h=c.xOrigin||0,d=c.yOrigin||0,p=c.xOffset||0,m=c.yOffset||0,f=u[0],g=u[1],_=u[2],y=u[3],x=u[4],b=u[5],w=t.split(" "),M=parseFloat(w[0])||0,S=parseFloat(w[1])||0;r?u!==_identity2DMatrix&&(s=f*y-g*_)&&(l=M*(-g/s)+S*(f/s)-(f*b-g*x)/s,M=M*(y/s)+S*(-_/s)+(_*b-y*x)/s,S=l):(M=(a=_getBBox(e)).x+(~w[0].indexOf("%")?M/100*a.width:M),S=a.y+(~(w[1]||w[0]).indexOf("%")?S/100*a.height:S)),n||!1!==n&&c.smooth?(x=M-h,b=S-d,c.xOffset=p+(x*f+b*_)-x,c.yOffset=m+(x*g+b*y)-b):c.xOffset=c.yOffset=0,c.xOrigin=M,c.yOrigin=S,c.smooth=!!n,c.origin=t,c.originIsAbsolute=!!r,e.style[_transformOriginProp]="0px 0px",o&&(_addNonTweeningPT(o,c,"xOrigin",h,M),_addNonTweeningPT(o,c,"yOrigin",d,S),_addNonTweeningPT(o,c,"xOffset",p,c.xOffset),_addNonTweeningPT(o,c,"yOffset",m,c.yOffset)),e.setAttribute("data-svg-origin",M+" "+S)},_parseTransform=function _parseTransform(e,t){var r=e._gsap||new GSCache(e);if("x"in r&&!t&&!r.uncache)return r;var n,i,o,a,s,l,c,u,h,d,p,m,f,g,_,y,x,b,w,M,S,T,A,E,C,L,P,R,B,D,O,I,U=e.style,N=r.scaleX<0,V=_getComputedProperty(e,_transformOriginProp)||"0";return n=i=o=l=c=u=h=d=p=0,a=s=1,r.svg=!(!e.getCTM||!_isSVG(e)),g=_getMatrix(e,r.svg),r.svg&&(E=!r.uncache&&e.getAttribute("data-svg-origin"),_applySVGOrigin(e,E||V,!!E||r.originIsAbsolute,!1!==r.smooth,g)),m=r.xOrigin||0,f=r.yOrigin||0,g!==_identity2DMatrix&&(b=g[0],w=g[1],M=g[2],S=g[3],n=T=g[4],i=A=g[5],6===g.length?(a=Math.sqrt(b*b+w*w),s=Math.sqrt(S*S+M*M),l=b||w?_atan2(w,b)*_RAD2DEG:0,(h=M||S?_atan2(M,S)*_RAD2DEG+l:0)&&(s*=Math.cos(h*_DEG2RAD)),r.svg&&(n-=m-(m*b+f*M),i-=f-(m*w+f*S))):(I=g[6],D=g[7],P=g[8],R=g[9],B=g[10],O=g[11],n=g[12],i=g[13],o=g[14],c=(_=_atan2(I,B))*_RAD2DEG,_&&(E=T*(y=Math.cos(-_))+P*(x=Math.sin(-_)),C=A*y+R*x,L=I*y+B*x,P=T*-x+P*y,R=A*-x+R*y,B=I*-x+B*y,O=D*-x+O*y,T=E,A=C,I=L),u=(_=_atan2(-M,B))*_RAD2DEG,_&&(y=Math.cos(-_),O=S*(x=Math.sin(-_))+O*y,b=E=b*y-P*x,w=C=w*y-R*x,M=L=M*y-B*x),l=(_=_atan2(w,b))*_RAD2DEG,_&&(E=b*(y=Math.cos(_))+w*(x=Math.sin(_)),C=T*y+A*x,w=w*y-b*x,A=A*y-T*x,b=E,T=C),c&&Math.abs(c)+Math.abs(l)>359.9&&(c=l=0,u=180-u),a=_round(Math.sqrt(b*b+w*w+M*M)),s=_round(Math.sqrt(A*A+I*I)),_=_atan2(T,A),h=Math.abs(_)>2e-4?_*_RAD2DEG:0,p=O?1/(O<0?-O:O):0),r.svg&&(E=e.getAttribute("transform"),r.forceCSS=e.setAttribute("transform","")||!_isNullTransform(_getComputedProperty(e,_transformProp)),E&&e.setAttribute("transform",E))),Math.abs(h)>90&&Math.abs(h)<270&&(N?(a*=-1,h+=l<=0?180:-180,l+=l<=0?180:-180):(s*=-1,h+=h<=0?180:-180)),r.x=n-((r.xPercent=n&&(r.xPercent||(Math.round(e.offsetWidth/2)===Math.round(-n)?-50:0)))?e.offsetWidth*r.xPercent/100:0)+"px",r.y=i-((r.yPercent=i&&(r.yPercent||(Math.round(e.offsetHeight/2)===Math.round(-i)?-50:0)))?e.offsetHeight*r.yPercent/100:0)+"px",r.z=o+"px",r.scaleX=_round(a),r.scaleY=_round(s),r.rotation=_round(l)+"deg",r.rotationX=_round(c)+"deg",r.rotationY=_round(u)+"deg",r.skewX=h+"deg",r.skewY=d+"deg",r.transformPerspective=p+"px",(r.zOrigin=parseFloat(V.split(" ")[2])||0)&&(U[_transformOriginProp]=_firstTwoOnly(V)),r.xOffset=r.yOffset=0,r.force3D=_config.force3D,r.renderTransform=r.svg?_renderSVGTransforms:_supports3D?_renderCSSTransforms:_renderNon3DTransforms,r.uncache=0,r},_firstTwoOnly=function _firstTwoOnly(e){return(e=e.split(" "))[0]+" "+e[1]},_addPxTranslate=function _addPxTranslate(e,t,r){var n=getUnit(t);return _round(parseFloat(t)+parseFloat(_convertToUnit(e,"x",r+"px",n)))+n},_renderNon3DTransforms=function _renderNon3DTransforms(e,t){t.z="0px",t.rotationY=t.rotationX="0deg",t.force3D=0,_renderCSSTransforms(e,t)},_zeroDeg="0deg",_zeroPx="0px",_endParenthesis=") ",_renderCSSTransforms=function _renderCSSTransforms(e,t){var r=t||this,n=r.xPercent,i=r.yPercent,o=r.x,a=r.y,s=r.z,l=r.rotation,c=r.rotationY,u=r.rotationX,h=r.skewX,d=r.skewY,p=r.scaleX,m=r.scaleY,f=r.transformPerspective,g=r.force3D,_=r.target,y=r.zOrigin,x="",b="auto"===g&&e&&1!==e||!0===g;if(y&&(u!==_zeroDeg||c!==_zeroDeg)){var w,M=parseFloat(c)*_DEG2RAD,S=Math.sin(M),T=Math.cos(M);M=parseFloat(u)*_DEG2RAD,w=Math.cos(M),o=_addPxTranslate(_,o,S*w*-y),a=_addPxTranslate(_,a,-Math.sin(M)*-y),s=_addPxTranslate(_,s,T*w*-y+y)}f!==_zeroPx&&(x+="perspective("+f+_endParenthesis),(n||i)&&(x+="translate("+n+"%, "+i+"%) "),(b||o!==_zeroPx||a!==_zeroPx||s!==_zeroPx)&&(x+=s!==_zeroPx||b?"translate3d("+o+", "+a+", "+s+") ":"translate("+o+", "+a+_endParenthesis),l!==_zeroDeg&&(x+="rotate("+l+_endParenthesis),c!==_zeroDeg&&(x+="rotateY("+c+_endParenthesis),u!==_zeroDeg&&(x+="rotateX("+u+_endParenthesis),h===_zeroDeg&&d===_zeroDeg||(x+="skew("+h+", "+d+_endParenthesis),1===p&&1===m||(x+="scale("+p+", "+m+_endParenthesis),_.style[_transformProp]=x||"translate(0, 0)"},_renderSVGTransforms=function _renderSVGTransforms(e,t){var r,n,i,o,a,s=t||this,l=s.xPercent,c=s.yPercent,u=s.x,h=s.y,d=s.rotation,p=s.skewX,m=s.skewY,f=s.scaleX,g=s.scaleY,_=s.target,y=s.xOrigin,x=s.yOrigin,b=s.xOffset,w=s.yOffset,M=s.forceCSS,S=parseFloat(u),T=parseFloat(h);d=parseFloat(d),p=parseFloat(p),(m=parseFloat(m))&&(p+=m=parseFloat(m),d+=m),d||p?(d*=_DEG2RAD,p*=_DEG2RAD,r=Math.cos(d)*f,n=Math.sin(d)*f,i=Math.sin(d-p)*-g,o=Math.cos(d-p)*g,p&&(m*=_DEG2RAD,a=Math.tan(p-m),i*=a=Math.sqrt(1+a*a),o*=a,m&&(a=Math.tan(m),r*=a=Math.sqrt(1+a*a),n*=a)),r=_round(r),n=_round(n),i=_round(i),o=_round(o)):(r=f,o=g,n=i=0),(S&&!~(u+"").indexOf("px")||T&&!~(h+"").indexOf("px"))&&(S=_convertToUnit(_,"x",u,"px"),T=_convertToUnit(_,"y",h,"px")),(y||x||b||w)&&(S=_round(S+y-(y*r+x*i)+b),T=_round(T+x-(y*n+x*o)+w)),(l||c)&&(a=_.getBBox(),S=_round(S+l/100*a.width),T=_round(T+c/100*a.height)),a="matrix("+r+","+n+","+i+","+o+","+S+","+T+")",_.setAttribute("transform",a),M&&(_.style[_transformProp]=a)},_addRotationalPropTween=function _addRotationalPropTween(e,t,r,n,i,o){var a,s,l=_isString(i),c=parseFloat(i)*(l&&~i.indexOf("rad")?_RAD2DEG:1),u=o?c*o:c-n,h=n+u+"deg";return l&&("short"===(a=i.split("_")[1])&&(u%=360)!==u%180&&(u+=u<0?360:-360),"cw"===a&&u<0?u=(u+360*_bigNum$1)%360-360*~~(u/360):"ccw"===a&&u>0&&(u=(u-360*_bigNum$1)%360-360*~~(u/360))),e._pt=s=new PropTween(e._pt,t,r,n,u,_renderPropWithEnd),s.e=h,s.u="deg",e._props.push(r),s},_addRawTransformPTs=function _addRawTransformPTs(e,t,r){var n,i,o,a,s,l,c,u=_tempDivStyler.style,h=r._gsap;for(i in u.cssText=getComputedStyle(r).cssText+";position:absolute;display:block;",u[_transformProp]=t,_doc$1.body.appendChild(_tempDivStyler),n=_parseTransform(_tempDivStyler,1),_transformProps)(o=h[i])!==(a=n[i])&&"perspective,force3D,transformOrigin,svgOrigin".indexOf(i)<0&&(s=getUnit(o)!==(c=getUnit(a))?_convertToUnit(r,i,o,c):parseFloat(o),l=parseFloat(a),e._pt=new PropTween(e._pt,h,i,s,l-s,_renderCSSProp),e._pt.u=c||0,e._props.push(i));_doc$1.body.removeChild(_tempDivStyler)};
/*!
 * CSSPlugin 3.6.0
 * https://greensock.com
 *
 * Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/_forEachName("padding,margin,Width,Radius",(function(e,t){var r="Top",n="Right",i="Bottom",o="Left",a=(t<3?[r,n,i,o]:[r+o,r+n,i+n,i+o]).map((function(r){return t<2?e+r:"border"+r+e}));_specialProps[t>1?"border"+e:e]=function(e,t,r,n,i){var o,s;if(arguments.length<4)return o=a.map((function(t){return _get(e,t,r)})),5===(s=o.join(" ")).split(o[0]).length?o[0]:s;o=(n+"").split(" "),s={},a.forEach((function(e,t){return s[e]=o[t]=o[t]||o[(t-1)/2|0]})),e.init(t,s,i)}}));var CSSPlugin={name:"css",register:_initCore,targetTest:function targetTest(e){return e.style&&e.nodeType},init:function init(e,t,r,n,i){var o,a,s,l,c,u,h,d,p,m,f,g,_,y,x,b=this._props,w=e.style,M=r.vars.startAt;for(h in _pluginInitted||_initCore(),t)if("autoRound"!==h&&(a=t[h],!_plugins[h]||!_checkPlugin(h,t,r,n,e,i)))if(c=typeof a,u=_specialProps[h],"function"===c&&(c=typeof(a=a.call(r,n,e,i))),"string"===c&&~a.indexOf("random(")&&(a=_replaceRandom(a)),u)u(this,e,h,a,r)&&(x=1);else if("--"===h.substr(0,2))o=(getComputedStyle(e).getPropertyValue(h)+"").trim(),a+="",d=getUnit(o),(p=getUnit(a))?d!==p&&(o=_convertToUnit(e,h,o,p)+p):d&&(a+=d),this.add(w,"setProperty",o,a,n,i,0,0,h);else if("undefined"!==c){if(M&&h in M?(o="function"==typeof M[h]?M[h].call(r,n,e,i):M[h],h in _config.units&&!getUnit(o)&&(o+=_config.units[h]),"="===(o+"").charAt(1)&&(o=_get(e,h))):o=_get(e,h),l=parseFloat(o),(m="string"===c&&"="===a.charAt(1)?+(a.charAt(0)+"1"):0)&&(a=a.substr(2)),s=parseFloat(a),h in _propertyAliases&&("autoAlpha"===h&&(1===l&&"hidden"===_get(e,"visibility")&&s&&(l=0),_addNonTweeningPT(this,w,"visibility",l?"inherit":"hidden",s?"inherit":"hidden",!s)),"scale"!==h&&"transform"!==h&&~(h=_propertyAliases[h]).indexOf(",")&&(h=h.split(",")[0])),f=h in _transformProps)if(g||((_=e._gsap).renderTransform&&!t.parseTransform||_parseTransform(e,t.parseTransform),y=!1!==t.smoothOrigin&&_.smooth,(g=this._pt=new PropTween(this._pt,w,_transformProp,0,1,_.renderTransform,_,0,-1)).dep=1),"scale"===h)this._pt=new PropTween(this._pt,_,"scaleY",_.scaleY,m?m*s:s-_.scaleY),b.push("scaleY",h),h+="X";else{if("transformOrigin"===h){a=_convertKeywordsToPercentages(a),_.svg?_applySVGOrigin(e,a,0,y,0,this):((p=parseFloat(a.split(" ")[2])||0)!==_.zOrigin&&_addNonTweeningPT(this,_,"zOrigin",_.zOrigin,p),_addNonTweeningPT(this,w,h,_firstTwoOnly(o),_firstTwoOnly(a)));continue}if("svgOrigin"===h){_applySVGOrigin(e,a,1,y,0,this);continue}if(h in _rotationalProperties){_addRotationalPropTween(this,_,h,l,a,m);continue}if("smoothOrigin"===h){_addNonTweeningPT(this,_,"smooth",_.smooth,a);continue}if("force3D"===h){_[h]=a;continue}if("transform"===h){_addRawTransformPTs(this,a,e);continue}}else h in w||(h=_checkPropPrefix(h)||h);if(f||(s||0===s)&&(l||0===l)&&!_complexExp.test(a)&&h in w)s||(s=0),(d=(o+"").substr((l+"").length))!==(p=getUnit(a)||(h in _config.units?_config.units[h]:d))&&(l=_convertToUnit(e,h,o,p)),this._pt=new PropTween(this._pt,f?_:w,h,l,m?m*s:s-l,f||"px"!==p&&"zIndex"!==h||!1===t.autoRound?_renderCSSProp:_renderRoundedCSSProp),this._pt.u=p||0,d!==p&&(this._pt.b=o,this._pt.r=_renderCSSPropWithBeginning);else if(h in w)_tweenComplexCSSString.call(this,e,h,o,a);else{if(!(h in e)){_missingPlugin(h,a);continue}this.add(e,h,e[h],a,n,i)}b.push(h)}x&&_sortPropTweensByPriority(this)},get:_get,aliases:_propertyAliases,getSetter:function getSetter(e,t,r){var n=_propertyAliases[t];return n&&n.indexOf(",")<0&&(t=n),t in _transformProps&&t!==_transformOriginProp&&(e._gsap.x||_get(e,"x"))?r&&_recentSetterPlugin===r?"scale"===t?_setterScale:_setterTransform:(_recentSetterPlugin=r||{})&&("scale"===t?_setterScaleWithRender:_setterTransformWithRender):e.style&&!_isUndefined(e.style[t])?_setterCSSStyle:~t.indexOf("-")?_setterCSSProp:_getSetter(e,t)},core:{_removeProperty:_removeProperty,_getMatrix:_getMatrix}};gsap.utils.checkPrefix=_checkPropPrefix,function(e,t,r,n){var i=_forEachName("x,y,z,scale,scaleX,scaleY,xPercent,yPercent,"+t+",transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective",(function(e){_transformProps[e]=1}));_forEachName(t,(function(e){_config.units[e]="deg",_rotationalProperties[e]=1})),_propertyAliases[i[13]]="x,y,z,scale,scaleX,scaleY,xPercent,yPercent,"+t,_forEachName("0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY",(function(e){var t=e.split(":");_propertyAliases[t[1]]=i[t[0]]}))}(0,"rotation,rotationX,rotationY,skewX,skewY"),_forEachName("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",(function(e){_config.units[e]="px"})),gsap.registerPlugin(CSSPlugin);var gsapWithCSS=gsap.registerPlugin(CSSPlugin)||gsap,TweenMaxWithCSS=gsapWithCSS.core.Tween;gsapWithCSS.config({units:{x:"px",y:"px",z:"px",top:"px",right:"px",bottom:"px",left:"px",width:"px",minWidth:"px",maxWidth:"px",height:"px",minHeight:"px",maxHeight:"px",fontSize:"px",lineHeight:"px",letterSpacing:"px",padding:"px",paddingTop:"px",paddingRight:"px",paddingBottom:"px",paddingLeft:"px",margin:"px",marginTop:"px",marginRight:"px",marginBottom:"px",marginLeft:"px",borderWidth:"px",borderTopWidth:"px",borderRightWidth:"px",borderBottomWidth:"px",borderLeftWidth:"px",borderRadius:"px",borderTopLeftRadius:"px",borderTopRightRadius:"px",borderBottomRightRadius:"px",borderBottomLeftRadius:"px",perspective:"px"}});const ticker=gsapWithCSS.ticker;function updateRoot(e){gsapWithCSS.updateRoot(.001*e)}function getEase(e,{spring:t=1,damping:r=.3,amount:n=1.7}={}){switch(e){case"easeInQuad":return"power1.in";case"easeInCubic":return"power2.in";case"easeInQuart":return"power3.in";case"easeInQuint":return"power4.in";case"easeInSine":return"sine.in";case"easeInExpo":return"expo.in";case"easeInCirc":return"circ.in";case"easeInElastic":return`elastic.in(${t}, ${r})`;case"easeInBack":return`back.in(${n})`;case"easeInBounce":return"bounce.in";case"easeOutQuad":return"power1.out";case"easeOutCubic":return"power2.out";case"easeOutQuart":return"power3.out";case"easeOutQuint":return"power4.out";case"easeOutSine":return"sine.out";case"easeOutExpo":return"expo.out";case"easeOutCirc":return"circ.out";case"easeOutElastic":return`elastic.out(${t}, ${r})`;case"easeOutBack":return`back.out(${n})`;case"easeOutBounce":return"bounce.out";case"easeInOutQuad":return"power1.inOut";case"easeInOutCubic":return"power2.inOut";case"easeInOutQuart":return"power3.inOut";case"easeInOutQuint":return"power4.inOut";case"easeInOutSine":return"sine.inOut";case"easeInOutExpo":return"expo.inOut";case"easeInOutCirc":return"circ.inOut";case"easeInOutElastic":return`elastic.inOut(${t}, ${r})`;case"easeInOutBack":return`back.inOut(${n})`;case"easeInOutBounce":return"bounce.inOut";case"linear":return"none";default:return e}}function delayedCall(e,t,...r){return gsapWithCSS.delayedCall(.001*e,t,r),t}function wait(e=0){return new Promise(t=>delayedCall(e,t))}function defer(e){const t=new Promise(e=>delayedCall(0,e));return e&&t.then(e),t}const set=gsapWithCSS.set,quickSetter=gsapWithCSS.quickSetter,getProperty=gsapWithCSS.getProperty;function tween(e,t,r,n,i=0,o,a){"number"!=typeof i&&(a=o,o=i,i=0);const s=new Promise(o=>{t.ease="function"==typeof n?n:getEase(n,t),delete t.spring,delete t.damping,delete t.amount,t.duration=.001*r,t.delay=.001*i,t.onComplete=o,t.onUpdate=a,gsapWithCSS.to(e,t)});return o&&s.then(o),s}const clearTween=gsapWithCSS.killTweensOf;class Interface{constructor(e,t="div"){this.events=new EventEmitter,this.children=[],this.timeouts=[],"object"==typeof e&&null!==e?this.element=e:(this.name=e,this.type=t,this.element=document.createElement(t),"string"==typeof e&&("."===e.charAt(0)?this.element.className=e.substr(1):this.element.id=e)),this.element.object=this,this.setStyle=quickSetter(this.element,"css"),this.setAttribute=quickSetter(this.element,"attr")}get(e,t){return getProperty(this.element,e,t)}bounds(){if(this.element)return this.element.getBoundingClientRect()}add(e){if(this.children)return e.destroy&&(this.children.push(e),e.parent=this),e.element?this.element.appendChild(e.element):e.nodeName&&this.element.appendChild(e),e}remove(e){if(!this.children)return;e.element?e.element.parentNode.removeChild(e.element):e.nodeName&&e.parentNode.removeChild(e);const t=this.children.indexOf(e);~t&&this.children.splice(t,1)}clone(){if(this.element)return new Interface(this.element.cloneNode(!0))}empty(){if(this.element){for(let e=this.children.length-1;e>=0;e--)this.children[e]&&this.children[e].destroy&&this.children[e].destroy();return this.children.length=0,this.element.innerHTML="",this}}css(e){if(this.element)return this.setStyle(e),this}attr(e){if(this.element)return this.setAttribute(e),this}tween(e,t,r,n,i,o){return tween(this.element,e,t,r,n,i,o)}clearTween(){return clearTween(this.element),this}delayedCall(e,t,...r){if(!this.timeouts)return;const n=delayedCall(e,()=>{this.clearTimeout(n),t(...r)});return this.timeouts.push(n),n}clearTimeout(e){if(!this.timeouts)return;clearTween(e);const t=this.timeouts.indexOf(e);~t&&this.timeouts.splice(t,1)}clearTimeouts(){if(this.timeouts){for(let e=this.timeouts.length-1;e>=0;e--)this.clearTimeout(this.timeouts[e]);this.timeouts.length=0}}text(e){if(this.element)return void 0===e?this.element.textContent:(this.element.textContent=e,this)}html(e){if(this.element)return void 0===e?this.element.innerHTML:(this.element.innerHTML=e,this)}hide(){return this.css({display:"none"})}show(){return this.css({clearProps:"display"})}invisible(){return this.css({visibility:"hidden"})}visible(){return this.css({clearProps:"visibility"})}bg(e,t="contain",r="center",n="no-repeat"){const i={backgroundImage:"url("+(e=Assets.getPath(e))+")",backgroundSize:t,backgroundPosition:r,backgroundRepeat:n};return this.css(i)}destroy(){if(this.children){this.parent&&this.parent.remove&&this.parent.remove(this),this.clearTimeouts(),this.clearTween(),this.events.destroy();for(let e=this.children.length-1;e>=0;e--)this.children[e]&&this.children[e].destroy&&this.children[e].destroy();this.element.object=null;for(const e in this)this[e]=null;return null}}}var Stage;if("undefined"!=typeof window){function onPopState(e){Stage.path=location.pathname,Stage.events.emit(Events.STATE_CHANGE,e)}function onKeyDown(e){Stage.events.emit(Events.KEY_DOWN,e)}function onKeyUp(e){Stage.events.emit(Events.KEY_UP,e)}function onKeyPress(e){Stage.events.emit(Events.KEY_PRESS,e)}function onResize(e){Stage.width=window.innerWidth,Stage.height=window.innerHeight,Stage.dpr=window.devicePixelRatio,Stage.aspect=Stage.width/Stage.height,Stage.events.emit(Events.RESIZE,e)}function onVisibility(e){Stage.events.emit(Events.VISIBILITY,e)}Stage=new Interface(document.getElementById("root")),window.addEventListener("popstate",onPopState),window.addEventListener("keydown",onKeyDown),window.addEventListener("keyup",onKeyUp),window.addEventListener("keypress",onKeyPress),window.addEventListener("resize",onResize),document.addEventListener("visibilitychange",onVisibility),onResize(),Stage.setPath=e=>{history.pushState(null,null,e),onPopState()}}class Loader{constructor(e=[],t){this.events=new EventEmitter,this.total=0,this.loaded=0,this.progress=0,this.promise=new Promise(e=>this.resolve=e),this.assets=e,this.callback=t,e.forEach(e=>this.load(e))}load(){}loadAsync(e){return new Promise(t=>this.load(e,t))}increment(){this.progress=++this.loaded/this.total,this.events.emit(Events.PROGRESS,{progress:this.progress}),this.loaded===this.total&&this.complete()}complete(){this.resolve(),this.events.emit(Events.COMPLETE),this.callback&&this.callback()}add(e=1){this.total+=e}trigger(e=1){for(let t=0;t<e;t++)this.increment()}ready(){return this.promise}destroy(){this.events.destroy();for(const e in this)this[e]=null;return null}}class AssetLoader extends Loader{static loadAssets(e,t){const r=new Promise(t=>new AssetLoader(e,t));return t&&r.then(t),r}load(e,t){e=Assets.getPath(e);const r=Assets.get(e);let n;n=r?Promise.resolve(r):/\.(jpe?g|png|gif|svg)$/.test(e)?Assets.loadImage(e):fetch(e,Assets.options).then(t=>/\.(mp3|m4a|ogg|wav|aiff?)$/.test(e)?t.arrayBuffer():/\.json$/.test(e)?t.json():t.text()),n.then(r=>{Assets.add(e,r),this.increment(),t&&t(r)}).catch(e=>{this.increment(),t&&t(e)}),this.total++}}class FontLoader extends Loader{static loadFonts(e,t){const r=new Promise(t=>new FontLoader(e,t));return t&&r.then(t),r}load(e,t){"object"!=typeof e&&(e={style:"normal",variant:"normal",weight:"normal",family:e.replace(/"/g,"'")});const r=(({style:e="normal",variant:t="normal",weight:r="normal",family:n})=>`${e} ${t} ${r} 12px "${n}"`)(e);let n=document.createElement("canvas"),i=n.getContext("2d");document.fonts.load(r).then(e=>(i.font=r,i.fillText("LOAD",0,0),e)).then(e=>{this.increment(),t&&t(e)}).catch(e=>{this.increment(),t&&t(e)}).finally(()=>{i=null,n=null}),this.total++}}class MultiLoader extends Loader{constructor(){super(),this.onProgress=()=>{let e=this.loaded;for(let t=0,r=this.loaders.length;t<r;t++)e+=this.weights[t]*this.loaders[t].progress;const t=e/this.total;t<1&&this.events.emit(Events.PROGRESS,{progress:t})},this.onComplete=()=>{this.increment()},this.destroy=()=>{for(let e=this.loaders.length-1;e>=0;e--)this.loaders[e]&&this.loaders[e].destroy&&this.loaders[e].destroy();return super.destroy()},this.loaders=[],this.weights=[]}load(e,t=1){e.events.on(Events.PROGRESS,this.onProgress),e.events.on(Events.COMPLETE,this.onComplete),this.loaders.push(e),this.weights.push(t),this.total+=t}}class Cluster{constructor(e,t=10){if(this.type=e,this.array=[],this.index=0,e)for(let r=0;r<t;r++)this.array.push(new e)}get(){const e=this.array[this.index];return this.index++,this.index===this.array.length&&(this.index=0),e}empty(){this.array.length=0}push(e){this.array.push(e)}insert(e){Array.isArray(e)||(e=[e]),this.array.push(...e)}length(){return this.array.length}destroy(){for(let e=this.array.length-1;e>=0;e--)this.array[e]&&this.array[e].destroy&&this.array[e].destroy();for(const e in this)this[e]=null;return null}}function degrees(e){return 180*e/Math.PI}function radians(e){return e*Math.PI/180}function clamp$1(e,t,r){return Math.max(t,Math.min(r,e))}function range(e,t,r,n,i,o){const a=(e-t)*(i-n)/(r-t)+n;return o?clamp$1(a,Math.min(n,i),Math.max(n,i)):a}function mix(e,t,r){return e*(1-r)+t*r}function step(e,t){return t<e?0:1}function smoothStep(e,t,r){const n=Math.max(0,Math.min(1,(r-e)/(t-e)));return n*n*(3-2*n)}function fract(e){return e-Math.floor(e)}function lerp(e,t,r){return t+(e-t)*r}function mod(e,t){return(e%t+t)%t}function shuffle$1(e){return e.sort(()=>Math.random()-.5)}function random$1(e,t,r=0){const n=Math.pow(10,r);return Math.round((Math.random()*(t-e)+e)*n)/n}function headsTails(e,t){return random$1(0,1)?t:e}function guid(){return(Date.now()+random$1(0,99999)).toString()}function basename(e,t){const r=e.split("/").pop().split("?")[0];return t?r:r.split(".")[0]}function extension(e){return e.split(".").pop().split("?")[0].toLowerCase()}function absolute(e){if(e.includes("//"))return e;const t=Number(location.port)>1e3?":"+location.port:"";return location.protocol+"//"+location.hostname+t+location.pathname.replace(/\/[^/]*$/,"/")+e}function queryString(e){const t=decodeURI(location.search.replace(new RegExp("^(?:.*[&\\?]"+encodeURI(e).replace(/[.+*]/g,"\\$&")+"(?:\\=([^&]*))?)?.*$","i"),"$1"));return!(!t.length||"0"===t||"false"===t)&&t}function getConstructorName(e){return("function"!=typeof e?e.constructor.toString():e.toString()).match(/(?:class|function)\s([^\s{(]+)/)[1]}function createElementFromHTML(e){const t=document.createElement("div");return t.innerHTML=e.trim(),t.firstChild}class Thread extends EventEmitter{static upload(...e){this.chunks||(this.chunks=[]),e.forEach(e=>this.chunks.push(e))}static shared(e){return this.threads||(this.params=e||{},this.params.chunks=this.chunks,this.threads=new Cluster(Thread,this.count)),e?this.threads:this.threads.get()}constructor({imports:e=[],classes:t=[],controller:r=[],chunks:n=[]}=Thread.params){super(),this.onMessage=({data:e})=>{e.event?this.emit(e.event,e.message):e.id&&(this.emit(e.id,e.message),this.off(e.id))};const i=[];if(e.forEach(e=>{const[t,...r]=e;i.push(`import { ${r.join(", ")} } from '${absolute(Assets.getPath(t))}';`)}),t.length&&i.push(t.map(e=>e.toString()).join("\n\n")),r.length){const[e,...t]=r;t.forEach(e=>this.createMethod(e)),i.push(`${e.toString()}\n\nnew ${getConstructorName(e)}();`)}else i.push("addEventListener('message', ({ data }) => self[data.message.fn].call(self, data.message));");n.forEach(e=>{const t=getConstructorName(e);this.createMethod(t),i.push(`self.${t}=${e.toString()};`)}),this.worker=new Worker(URL.createObjectURL(new Blob([i.join("\n\n")],{type:"text/javascript"})),{type:"module"}),this.addListeners()}addListeners(){this.worker.addEventListener("message",this.onMessage)}removeListeners(){this.worker.removeEventListener("message",this.onMessage)}createMethod(e){this[e]=(t={},r)=>{const n=new Promise(r=>this.send(e,t,r));return r&&n.then(r),n}}send(e,t={},r){if(t.fn=e,r){const e=guid();t.id=e,this.on(e,r)}this.worker.postMessage({message:t},t.buffer)}destroy(){return this.removeListeners(),this.worker.terminate(),super.destroy()}}Thread.count=navigator.hardwareConcurrency||4,Thread.params={};class ImageBitmapLoaderThread{static init(){Thread.upload((function loadImage({path:e,init:t,params:r,id:n}){fetch(e,t).then(e=>e.blob()).then(e=>createImageBitmap(e,r)).then(e=>{postMessage({id:n,message:e},[e])}).catch(e=>{e instanceof Error&&(e=e.name+": "+e.message),postMessage({id:n,message:{error:e}})})}))}static load(e,t,r){return e=absolute(Assets.getPath(e)),Thread.shared().loadImage({path:e,init:t,params:r})}}class ImageBitmapLoader extends Loader{constructor(e,t){super(e,t),this.defaultOptions={imageOrientation:"none"},this.options=this.defaultOptions}load(e,t){e=Assets.getPath(e);const r=Assets.get(e);let n;n=r?Promise.resolve(r):Thread.threads?ImageBitmapLoaderThread.load(e,Assets.options,this.options):fetch(e,Assets.options).then(e=>e.blob()).then(e=>createImageBitmap(e,this.options)),n.then(r=>{if(r.error)throw new Error(r.error);Assets.add(e,r),this.increment(),t&&t(r)}).catch(e=>{this.increment(),t&&t(e)}),this.total++}setOptions(e){return this.options=Object.assign(this.defaultOptions,e),this}}const REVISION="124",MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},CullFaceNone=0,CullFaceBack=1,CullFaceFront=2,CullFaceFrontBack=3,BasicShadowMap=0,PCFShadowMap=1,PCFSoftShadowMap=2,VSMShadowMap=3,FrontSide=0,BackSide=1,DoubleSide=2,FlatShading=1,SmoothShading=2,NoBlending=0,NormalBlending=1,AdditiveBlending=2,SubtractiveBlending=3,MultiplyBlending=4,CustomBlending=5,AddEquation=100,SubtractEquation=101,ReverseSubtractEquation=102,MinEquation=103,MaxEquation=104,ZeroFactor=200,OneFactor=201,SrcColorFactor=202,OneMinusSrcColorFactor=203,SrcAlphaFactor=204,OneMinusSrcAlphaFactor=205,DstAlphaFactor=206,OneMinusDstAlphaFactor=207,DstColorFactor=208,OneMinusDstColorFactor=209,SrcAlphaSaturateFactor=210,NeverDepth=0,AlwaysDepth=1,LessDepth=2,LessEqualDepth=3,EqualDepth=4,GreaterEqualDepth=5,GreaterDepth=6,NotEqualDepth=7,MultiplyOperation=0,MixOperation=1,AddOperation=2,NoToneMapping=0,LinearToneMapping=1,ReinhardToneMapping=2,CineonToneMapping=3,ACESFilmicToneMapping=4,CustomToneMapping=5,UVMapping=300,CubeReflectionMapping=301,CubeRefractionMapping=302,EquirectangularReflectionMapping=303,EquirectangularRefractionMapping=304,CubeUVReflectionMapping=306,CubeUVRefractionMapping=307,RepeatWrapping=1e3,ClampToEdgeWrapping=1001,MirroredRepeatWrapping=1002,NearestFilter=1003,NearestMipmapNearestFilter=1004,NearestMipMapNearestFilter=1004,NearestMipmapLinearFilter=1005,NearestMipMapLinearFilter=1005,LinearFilter=1006,LinearMipmapNearestFilter=1007,LinearMipMapNearestFilter=1007,LinearMipmapLinearFilter=1008,LinearMipMapLinearFilter=1008,UnsignedByteType=1009,ByteType=1010,ShortType=1011,UnsignedShortType=1012,IntType=1013,UnsignedIntType=1014,FloatType=1015,HalfFloatType=1016,UnsignedShort4444Type=1017,UnsignedShort5551Type=1018,UnsignedShort565Type=1019,UnsignedInt248Type=1020,AlphaFormat=1021,RGBFormat=1022,RGBAFormat=1023,LuminanceFormat=1024,LuminanceAlphaFormat=1025,RGBEFormat=1023,DepthFormat=1026,DepthStencilFormat=1027,RedFormat=1028,RedIntegerFormat=1029,RGFormat=1030,RGIntegerFormat=1031,RGBIntegerFormat=1032,RGBAIntegerFormat=1033,RGB_S3TC_DXT1_Format=33776,RGBA_S3TC_DXT1_Format=33777,RGBA_S3TC_DXT3_Format=33778,RGBA_S3TC_DXT5_Format=33779,RGB_PVRTC_4BPPV1_Format=35840,RGB_PVRTC_2BPPV1_Format=35841,RGBA_PVRTC_4BPPV1_Format=35842,RGBA_PVRTC_2BPPV1_Format=35843,RGB_ETC1_Format=36196,RGB_ETC2_Format=37492,RGBA_ETC2_EAC_Format=37496,RGBA_ASTC_4x4_Format=37808,RGBA_ASTC_5x4_Format=37809,RGBA_ASTC_5x5_Format=37810,RGBA_ASTC_6x5_Format=37811,RGBA_ASTC_6x6_Format=37812,RGBA_ASTC_8x5_Format=37813,RGBA_ASTC_8x6_Format=37814,RGBA_ASTC_8x8_Format=37815,RGBA_ASTC_10x5_Format=37816,RGBA_ASTC_10x6_Format=37817,RGBA_ASTC_10x8_Format=37818,RGBA_ASTC_10x10_Format=37819,RGBA_ASTC_12x10_Format=37820,RGBA_ASTC_12x12_Format=37821,RGBA_BPTC_Format=36492,SRGB8_ALPHA8_ASTC_4x4_Format=37840,SRGB8_ALPHA8_ASTC_5x4_Format=37841,SRGB8_ALPHA8_ASTC_5x5_Format=37842,SRGB8_ALPHA8_ASTC_6x5_Format=37843,SRGB8_ALPHA8_ASTC_6x6_Format=37844,SRGB8_ALPHA8_ASTC_8x5_Format=37845,SRGB8_ALPHA8_ASTC_8x6_Format=37846,SRGB8_ALPHA8_ASTC_8x8_Format=37847,SRGB8_ALPHA8_ASTC_10x5_Format=37848,SRGB8_ALPHA8_ASTC_10x6_Format=37849,SRGB8_ALPHA8_ASTC_10x8_Format=37850,SRGB8_ALPHA8_ASTC_10x10_Format=37851,SRGB8_ALPHA8_ASTC_12x10_Format=37852,SRGB8_ALPHA8_ASTC_12x12_Format=37853,LoopOnce=2200,LoopRepeat=2201,LoopPingPong=2202,InterpolateDiscrete=2300,InterpolateLinear=2301,InterpolateSmooth=2302,ZeroCurvatureEnding=2400,ZeroSlopeEnding=2401,WrapAroundEnding=2402,NormalAnimationBlendMode=2500,AdditiveAnimationBlendMode=2501,TrianglesDrawMode=0,TriangleStripDrawMode=1,TriangleFanDrawMode=2,LinearEncoding=3e3,sRGBEncoding=3001,GammaEncoding=3007,RGBEEncoding=3002,LogLuvEncoding=3003,RGBM7Encoding=3004,RGBM16Encoding=3005,RGBDEncoding=3006,BasicDepthPacking=3200,RGBADepthPacking=3201,TangentSpaceNormalMap=0,ObjectSpaceNormalMap=1,ZeroStencilOp=0,KeepStencilOp=7680,ReplaceStencilOp=7681,IncrementStencilOp=7682,DecrementStencilOp=7683,IncrementWrapStencilOp=34055,DecrementWrapStencilOp=34056,InvertStencilOp=5386,NeverStencilFunc=512,LessStencilFunc=513,EqualStencilFunc=514,LessEqualStencilFunc=515,GreaterStencilFunc=516,NotEqualStencilFunc=517,GreaterEqualStencilFunc=518,AlwaysStencilFunc=519,StaticDrawUsage=35044,DynamicDrawUsage=35048,StreamDrawUsage=35040,StaticReadUsage=35045,DynamicReadUsage=35049,StreamReadUsage=35041,StaticCopyUsage=35046,DynamicCopyUsage=35050,StreamCopyUsage=35042,GLSL1="100",GLSL3="300 es";function EventDispatcher(){}Object.assign(EventDispatcher.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});const r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;const r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)},removeEventListener:function(e,t){if(void 0===this._listeners)return;const r=this._listeners[e];if(void 0!==r){const e=r.indexOf(t);-1!==e&&r.splice(e,1)}},dispatchEvent:function(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const r=t.slice(0);for(let t=0,n=r.length;t<n;t++)r[t].call(this,e)}}});const _lut=[];for(let e=0;e<256;e++)_lut[e]=(e<16?"0":"")+e.toString(16);let _seed=1234567;const MathUtils={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,r=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(_lut[255&e]+_lut[e>>8&255]+_lut[e>>16&255]+_lut[e>>24&255]+"-"+_lut[255&t]+_lut[t>>8&255]+"-"+_lut[t>>16&15|64]+_lut[t>>24&255]+"-"+_lut[63&r|128]+_lut[r>>8&255]+"-"+_lut[r>>16&255]+_lut[r>>24&255]+_lut[255&n]+_lut[n>>8&255]+_lut[n>>16&255]+_lut[n>>24&255]).toUpperCase()},clamp:function(e,t,r){return Math.max(t,Math.min(r,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,r,n,i){return n+(e-t)*(i-n)/(r-t)},lerp:function(e,t,r){return(1-r)*e+r*t},smoothstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*(3-2*e)},smootherstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(_seed=e%2147483647),_seed=16807*_seed%2147483647,(_seed-1)/2147483646},degToRad:function(e){return e*MathUtils.DEG2RAD},radToDeg:function(e){return e*MathUtils.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,r,n,i){const o=Math.cos,a=Math.sin,s=o(r/2),l=a(r/2),c=o((t+n)/2),u=a((t+n)/2),h=o((t-n)/2),d=a((t-n)/2),p=o((n-t)/2),m=a((n-t)/2);switch(i){case"XYX":e.set(s*u,l*h,l*d,s*c);break;case"YZY":e.set(l*d,s*u,l*h,s*c);break;case"ZXZ":e.set(l*h,l*d,s*u,s*c);break;case"XZX":e.set(s*u,l*m,l*p,s*c);break;case"YXY":e.set(l*p,s*u,l*m,s*c);break;case"ZYZ":e.set(l*m,l*p,s*u,s*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}};class Vector2{constructor(e=0,t=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,r=this.y,n=e.elements;return this.x=n[0]*t+n[3]*r+n[6],this.y=n[1]*t+n[4]*r+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,r=this.y-e.y;return t*t+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const r=Math.cos(t),n=Math.sin(t),i=this.x-e.x,o=this.y-e.y;return this.x=i*r-o*n+e.x,this.y=i*n+o*r+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class Matrix3{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,r,n,i,o,a,s,l){const c=this.elements;return c[0]=e,c[1]=n,c[2]=a,c[3]=t,c[4]=i,c[5]=s,c[6]=r,c[7]=o,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return(new this.constructor).fromArray(this.elements)}copy(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this}extractBasis(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const r=e.elements,n=t.elements,i=this.elements,o=r[0],a=r[3],s=r[6],l=r[1],c=r[4],u=r[7],h=r[2],d=r[5],p=r[8],m=n[0],f=n[3],g=n[6],_=n[1],y=n[4],x=n[7],b=n[2],w=n[5],M=n[8];return i[0]=o*m+a*_+s*b,i[3]=o*f+a*y+s*w,i[6]=o*g+a*x+s*M,i[1]=l*m+c*_+u*b,i[4]=l*f+c*y+u*w,i[7]=l*g+c*x+u*M,i[2]=h*m+d*_+p*b,i[5]=h*f+d*y+p*w,i[8]=h*g+d*x+p*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],o=e[4],a=e[5],s=e[6],l=e[7],c=e[8];return t*o*c-t*a*l-r*i*c+r*a*s+n*i*l-n*o*s}invert(){const e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],o=e[4],a=e[5],s=e[6],l=e[7],c=e[8],u=c*o-a*l,h=a*s-c*i,d=l*i-o*s,p=t*u+r*h+n*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=u*m,e[1]=(n*l-c*r)*m,e[2]=(a*r-n*o)*m,e[3]=h*m,e[4]=(c*t-n*s)*m,e[5]=(n*i-a*t)*m,e[6]=d*m,e[7]=(r*s-l*t)*m,e[8]=(o*t-r*i)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).copy(this).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,r,n,i,o,a){const s=Math.cos(i),l=Math.sin(i);return this.set(r*s,r*l,-r*(s*o+l*a)+o+e,-n*l,n*s,-n*(-l*o+s*a)+a+t,0,0,1),this}scale(e,t){const r=this.elements;return r[0]*=e,r[3]*=e,r[6]*=e,r[1]*=t,r[4]*=t,r[7]*=t,this}rotate(e){const t=Math.cos(e),r=Math.sin(e),n=this.elements,i=n[0],o=n[3],a=n[6],s=n[1],l=n[4],c=n[7];return n[0]=t*i+r*s,n[3]=t*o+r*l,n[6]=t*a+r*c,n[1]=-r*i+t*s,n[4]=-r*o+t*l,n[7]=-r*a+t*c,this}translate(e,t){const r=this.elements;return r[0]+=e*r[2],r[3]+=e*r[5],r[6]+=e*r[8],r[1]+=t*r[2],r[4]+=t*r[5],r[7]+=t*r[8],this}equals(e){const t=this.elements,r=e.elements;for(let e=0;e<9;e++)if(t[e]!==r[e])return!1;return!0}fromArray(e,t=0){for(let r=0;r<9;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}}let _canvas;const ImageUtils={getDataURL:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===_canvas&&(_canvas=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),_canvas.width=e.width,_canvas.height=e.height;const r=_canvas.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),t=_canvas}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}};let textureId=0;function Texture(e=Texture.DEFAULT_IMAGE,t=Texture.DEFAULT_MAPPING,r=1001,n=1001,i=1006,o=1008,a=1023,s=1009,l=1,c=3e3){Object.defineProperty(this,"id",{value:textureId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=r,this.wrapT=n,this.magFilter=i,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=s,this.offset=new Vector2(0,0),this.repeat=new Vector2(1,1),this.center=new Vector2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Matrix3,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}function serializeImage(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?ImageUtils.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Texture.DEFAULT_IMAGE=void 0,Texture.DEFAULT_MAPPING=300,Texture.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Texture,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const n=this.image;if(void 0===n.uuid&&(n.uuid=MathUtils.generateUUID()),!t&&void 0===e.images[n.uuid]){let t;if(Array.isArray(n)){t=[];for(let e=0,r=n.length;e<r;e++)n[e].isDataTexture?t.push(serializeImage(n[e].image)):t.push(serializeImage(n[e]))}else t=serializeImage(n);e.images[n.uuid]={uuid:n.uuid,url:t}}r.image=n.uuid}return t||(e.textures[this.uuid]=r),r},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}}),Object.defineProperty(Texture.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}});class Vector4{constructor(e=0,t=0,r=0,n=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=e,this.y=t,this.z=r,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,r=this.y,n=this.z,i=this.w,o=e.elements;return this.x=o[0]*t+o[4]*r+o[8]*n+o[12]*i,this.y=o[1]*t+o[5]*r+o[9]*n+o[13]*i,this.z=o[2]*t+o[6]*r+o[10]*n+o[14]*i,this.w=o[3]*t+o[7]*r+o[11]*n+o[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,r,n,i;const o=e.elements,a=o[0],s=o[4],l=o[8],c=o[1],u=o[5],h=o[9],d=o[2],p=o[6],m=o[10];if(Math.abs(s-c)<.01&&Math.abs(l-d)<.01&&Math.abs(h-p)<.01){if(Math.abs(s+c)<.1&&Math.abs(l+d)<.1&&Math.abs(h+p)<.1&&Math.abs(a+u+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const e=(a+1)/2,o=(u+1)/2,f=(m+1)/2,g=(s+c)/4,_=(l+d)/4,y=(h+p)/4;return e>o&&e>f?e<.01?(r=0,n=.707106781,i=.707106781):(r=Math.sqrt(e),n=g/r,i=_/r):o>f?o<.01?(r=.707106781,n=0,i=.707106781):(n=Math.sqrt(o),r=g/n,i=y/n):f<.01?(r=.707106781,n=.707106781,i=0):(i=Math.sqrt(f),r=_/i,n=y/i),this.set(r,n,i,t),this}let f=Math.sqrt((p-h)*(p-h)+(l-d)*(l-d)+(c-s)*(c-s));return Math.abs(f)<.001&&(f=1),this.x=(p-h)/f,this.y=(l-d)/f,this.z=(c-s)/f,this.w=Math.acos((a+u+m-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function WebGLRenderTarget(e,t,r){this.width=e,this.height=t,this.scissor=new Vector4(0,0,e,t),this.scissorTest=!1,this.viewport=new Vector4(0,0,e,t),r=r||{},this.texture=new Texture(void 0,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=void 0!==r.generateMipmaps&&r.generateMipmaps,this.texture.minFilter=void 0!==r.minFilter?r.minFilter:1006,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0!==r.stencilBuffer&&r.stencilBuffer,this.depthTexture=void 0!==r.depthTexture?r.depthTexture:null}function WebGLMultisampleRenderTarget(e,t,r){WebGLRenderTarget.call(this,e,t,r),this.samples=4}WebGLRenderTarget.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:WebGLRenderTarget,isWebGLRenderTarget:!0,setSize:function(e,t){this.width===e&&this.height===t||(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),WebGLMultisampleRenderTarget.prototype=Object.assign(Object.create(WebGLRenderTarget.prototype),{constructor:WebGLMultisampleRenderTarget,isWebGLMultisampleRenderTarget:!0,copy:function(e){return WebGLRenderTarget.prototype.copy.call(this,e),this.samples=e.samples,this}});class Quaternion{constructor(e=0,t=0,r=0,n=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=e,this._y=t,this._z=r,this._w=n}static slerp(e,t,r,n){return r.copy(e).slerp(t,n)}static slerpFlat(e,t,r,n,i,o,a){let s=r[n+0],l=r[n+1],c=r[n+2],u=r[n+3];const h=i[o+0],d=i[o+1],p=i[o+2],m=i[o+3];if(u!==m||s!==h||l!==d||c!==p){let e=1-a;const t=s*h+l*d+c*p+u*m,r=t>=0?1:-1,n=1-t*t;if(n>Number.EPSILON){const i=Math.sqrt(n),o=Math.atan2(i,t*r);e=Math.sin(e*o)/i,a=Math.sin(a*o)/i}const i=a*r;if(s=s*e+h*i,l=l*e+d*i,c=c*e+p*i,u=u*e+m*i,e===1-a){const e=1/Math.sqrt(s*s+l*l+c*c+u*u);s*=e,l*=e,c*=e,u*=e}}e[t]=s,e[t+1]=l,e[t+2]=c,e[t+3]=u}static multiplyQuaternionsFlat(e,t,r,n,i,o){const a=r[n],s=r[n+1],l=r[n+2],c=r[n+3],u=i[o],h=i[o+1],d=i[o+2],p=i[o+3];return e[t]=a*p+c*u+s*d-l*h,e[t+1]=s*p+c*h+l*u-a*d,e[t+2]=l*p+c*d+a*h-s*u,e[t+3]=c*p-a*u-s*h-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const r=e._x,n=e._y,i=e._z,o=e._order,a=Math.cos,s=Math.sin,l=a(r/2),c=a(n/2),u=a(i/2),h=s(r/2),d=s(n/2),p=s(i/2);switch(o){case"XYZ":this._x=h*c*u+l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u-h*d*p;break;case"YXZ":this._x=h*c*u+l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u+h*d*p;break;case"ZXY":this._x=h*c*u-l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u-h*d*p;break;case"ZYX":this._x=h*c*u-l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u+h*d*p;break;case"YZX":this._x=h*c*u+l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u-h*d*p;break;case"XZY":this._x=h*c*u-l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const r=t/2,n=Math.sin(r);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(r),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,r=t[0],n=t[4],i=t[8],o=t[1],a=t[5],s=t[9],l=t[2],c=t[6],u=t[10],h=r+a+u;if(h>0){const e=.5/Math.sqrt(h+1);this._w=.25/e,this._x=(c-s)*e,this._y=(i-l)*e,this._z=(o-n)*e}else if(r>a&&r>u){const e=2*Math.sqrt(1+r-a-u);this._w=(c-s)/e,this._x=.25*e,this._y=(n+o)/e,this._z=(i+l)/e}else if(a>u){const e=2*Math.sqrt(1+a-r-u);this._w=(i-l)/e,this._x=(n+o)/e,this._y=.25*e,this._z=(s+c)/e}else{const e=2*Math.sqrt(1+u-r-a);this._w=(o-n)/e,this._x=(i+l)/e,this._y=(s+c)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<1e-6?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=r),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(MathUtils.clamp(this.dot(e),-1,1)))}rotateTowards(e,t){const r=this.angleTo(e);if(0===r)return this;const n=Math.min(1,t/r);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const r=e._x,n=e._y,i=e._z,o=e._w,a=t._x,s=t._y,l=t._z,c=t._w;return this._x=r*c+o*a+n*l-i*s,this._y=n*c+o*s+i*a-r*l,this._z=i*c+o*l+r*s-n*a,this._w=o*c-r*a-n*s-i*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const r=this._x,n=this._y,i=this._z,o=this._w;let a=o*e._w+r*e._x+n*e._y+i*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=r,this._y=n,this._z=i,this;const s=1-a*a;if(s<=Number.EPSILON){const e=1-t;return this._w=e*o+t*this._w,this._x=e*r+t*this._x,this._y=e*n+t*this._y,this._z=e*i+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(s),c=Math.atan2(l,a),u=Math.sin((1-t)*c)/l,h=Math.sin(t*c)/l;return this._w=o*u+this._w*h,this._x=r*u+this._x*h,this._y=n*u+this._y*h,this._z=i*u+this._z*h,this._onChangeCallback(),this}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}class Vector3{constructor(e=0,t=0,r=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=e,this.y=t,this.z=r}set(e,t,r){return void 0===r&&(r=this.z),this.x=e,this.y=t,this.z=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(_quaternion.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(_quaternion.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[3]*r+i[6]*n,this.y=i[1]*t+i[4]*r+i[7]*n,this.z=i[2]*t+i[5]*r+i[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,r=this.y,n=this.z,i=e.elements,o=1/(i[3]*t+i[7]*r+i[11]*n+i[15]);return this.x=(i[0]*t+i[4]*r+i[8]*n+i[12])*o,this.y=(i[1]*t+i[5]*r+i[9]*n+i[13])*o,this.z=(i[2]*t+i[6]*r+i[10]*n+i[14])*o,this}applyQuaternion(e){const t=this.x,r=this.y,n=this.z,i=e.x,o=e.y,a=e.z,s=e.w,l=s*t+o*n-a*r,c=s*r+a*t-i*n,u=s*n+i*r-o*t,h=-i*t-o*r-a*n;return this.x=l*s+h*-i+c*-a-u*-o,this.y=c*s+h*-o+u*-i-l*-a,this.z=u*s+h*-a+l*-o-c*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*n,this.y=i[1]*t+i[5]*r+i[9]*n,this.z=i[2]*t+i[6]*r+i[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const r=e.x,n=e.y,i=e.z,o=t.x,a=t.y,s=t.z;return this.x=n*s-i*a,this.y=i*o-r*s,this.z=r*a-n*o,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)}projectOnPlane(e){return _vector.copy(this).projectOnVector(e),this.sub(_vector)}reflect(e){return this.sub(_vector.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const r=this.dot(e)/t;return Math.acos(MathUtils.clamp(r,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,r=this.y-e.y,n=this.z-e.z;return t*t+r*r+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,r){const n=Math.sin(t)*e;return this.x=n*Math.sin(r),this.y=Math.cos(t)*e,this.z=n*Math.cos(r),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const _vector=new Vector3,_quaternion=new Quaternion;class Box3{constructor(e,t){Object.defineProperty(this,"isBox3",{value:!0}),this.min=void 0!==e?e:new Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new Vector3(-1/0,-1/0,-1/0)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,r=1/0,n=1/0,i=-1/0,o=-1/0,a=-1/0;for(let s=0,l=e.length;s<l;s+=3){const l=e[s],c=e[s+1],u=e[s+2];l<t&&(t=l),c<r&&(r=c),u<n&&(n=u),l>i&&(i=l),c>o&&(o=c),u>a&&(a=u)}return this.min.set(t,r,n),this.max.set(i,o,a),this}setFromBufferAttribute(e){let t=1/0,r=1/0,n=1/0,i=-1/0,o=-1/0,a=-1/0;for(let s=0,l=e.count;s<l;s++){const l=e.getX(s),c=e.getY(s),u=e.getZ(s);l<t&&(t=l),c<r&&(r=c),u<n&&(n=u),l>i&&(i=l),c>o&&(o=c),u>a&&(a=u)}return this.min.set(t,r,n),this.max.set(i,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const r=_vector$1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new Vector3),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new Vector3),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),_box.copy(t.boundingBox),_box.applyMatrix4(e.matrixWorld),this.union(_box));const r=e.children;for(let e=0,t=r.length;e<t;e++)this.expandByObject(r[e]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new Vector3),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,_vector$1),_vector$1.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,r;return e.normal.x>0?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(_center),_extents.subVectors(this.max,_center),_v0.subVectors(e.a,_center),_v1.subVectors(e.b,_center),_v2.subVectors(e.c,_center),_f0.subVectors(_v1,_v0),_f1.subVectors(_v2,_v1),_f2.subVectors(_v0,_v2);let t=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];return!!satForAxes(t,_v0,_v1,_v2,_extents)&&(t=[1,0,0,0,1,0,0,0,1],!!satForAxes(t,_v0,_v1,_v2,_extents)&&(_triangleNormal.crossVectors(_f0,_f1),t=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z],satForAxes(t,_v0,_v1,_v2,_extents)))}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new Vector3),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return _vector$1.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(_vector$1).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(_points)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function satForAxes(e,t,r,n,i){for(let o=0,a=e.length-3;o<=a;o+=3){_testAxis.fromArray(e,o);const a=i.x*Math.abs(_testAxis.x)+i.y*Math.abs(_testAxis.y)+i.z*Math.abs(_testAxis.z),s=t.dot(_testAxis),l=r.dot(_testAxis),c=n.dot(_testAxis);if(Math.max(-Math.max(s,l,c),Math.min(s,l,c))>a)return!1}return!0}const _points=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3],_vector$1=new Vector3,_box=new Box3,_v0=new Vector3,_v1=new Vector3,_v2=new Vector3,_f0=new Vector3,_f1=new Vector3,_f2=new Vector3,_center=new Vector3,_extents=new Vector3,_triangleNormal=new Vector3,_testAxis=new Vector3,_box$1=new Box3;class Sphere{constructor(e,t){this.center=void 0!==e?e:new Vector3,this.radius=void 0!==t?t:-1}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const r=this.center;void 0!==t?r.copy(t):_box$1.setFromPoints(e).getCenter(r);let n=0;for(let t=0,i=e.length;t<i;t++)n=Math.max(n,r.distanceToSquared(e[t]));return this.radius=Math.sqrt(n),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const r=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new Vector3),t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new Box3),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}const _vector$2=new Vector3,_segCenter=new Vector3,_segDir=new Vector3,_diff=new Vector3,_edge1=new Vector3,_edge2=new Vector3,_normal=new Vector3;class Ray{constructor(e,t){this.origin=void 0!==e?e:new Vector3,this.direction=void 0!==t?t:new Vector3(0,0,-1)}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new Vector3),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,_vector$2)),this}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new Vector3),t.subVectors(e,this.origin);const r=t.dot(this.direction);return r<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(r).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=_vector$2.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(_vector$2.copy(this.direction).multiplyScalar(t).add(this.origin),_vector$2.distanceToSquared(e))}distanceSqToSegment(e,t,r,n){_segCenter.copy(e).add(t).multiplyScalar(.5),_segDir.copy(t).sub(e).normalize(),_diff.copy(this.origin).sub(_segCenter);const i=.5*e.distanceTo(t),o=-this.direction.dot(_segDir),a=_diff.dot(this.direction),s=-_diff.dot(_segDir),l=_diff.lengthSq(),c=Math.abs(1-o*o);let u,h,d,p;if(c>0)if(u=o*s-a,h=o*a-s,p=i*c,u>=0)if(h>=-p)if(h<=p){const e=1/c;u*=e,h*=e,d=u*(u+o*h+2*a)+h*(o*u+h+2*s)+l}else h=i,u=Math.max(0,-(o*h+a)),d=-u*u+h*(h+2*s)+l;else h=-i,u=Math.max(0,-(o*h+a)),d=-u*u+h*(h+2*s)+l;else h<=-p?(u=Math.max(0,-(-o*i+a)),h=u>0?-i:Math.min(Math.max(-i,-s),i),d=-u*u+h*(h+2*s)+l):h<=p?(u=0,h=Math.min(Math.max(-i,-s),i),d=h*(h+2*s)+l):(u=Math.max(0,-(o*i+a)),h=u>0?i:Math.min(Math.max(-i,-s),i),d=-u*u+h*(h+2*s)+l);else h=o>0?-i:i,u=Math.max(0,-(o*h+a)),d=-u*u+h*(h+2*s)+l;return r&&r.copy(this.direction).multiplyScalar(u).add(this.origin),n&&n.copy(_segDir).multiplyScalar(h).add(_segCenter),d}intersectSphere(e,t){_vector$2.subVectors(e.center,this.origin);const r=_vector$2.dot(this.direction),n=_vector$2.dot(_vector$2)-r*r,i=e.radius*e.radius;if(n>i)return null;const o=Math.sqrt(i-n),a=r-o,s=r+o;return a<0&&s<0?null:a<0?this.at(s,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null}intersectPlane(e,t){const r=this.distanceToPlane(e);return null===r?null:this.at(r,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(0===t)return!0;return e.normal.dot(this.direction)*t<0}intersectBox(e,t){let r,n,i,o,a,s;const l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,h=this.origin;return l>=0?(r=(e.min.x-h.x)*l,n=(e.max.x-h.x)*l):(r=(e.max.x-h.x)*l,n=(e.min.x-h.x)*l),c>=0?(i=(e.min.y-h.y)*c,o=(e.max.y-h.y)*c):(i=(e.max.y-h.y)*c,o=(e.min.y-h.y)*c),r>o||i>n?null:((i>r||r!=r)&&(r=i),(o<n||n!=n)&&(n=o),u>=0?(a=(e.min.z-h.z)*u,s=(e.max.z-h.z)*u):(a=(e.max.z-h.z)*u,s=(e.min.z-h.z)*u),r>s||a>n?null:((a>r||r!=r)&&(r=a),(s<n||n!=n)&&(n=s),n<0?null:this.at(r>=0?r:n,t)))}intersectsBox(e){return null!==this.intersectBox(e,_vector$2)}intersectTriangle(e,t,r,n,i){_edge1.subVectors(t,e),_edge2.subVectors(r,e),_normal.crossVectors(_edge1,_edge2);let o,a=this.direction.dot(_normal);if(a>0){if(n)return null;o=1}else{if(!(a<0))return null;o=-1,a=-a}_diff.subVectors(this.origin,e);const s=o*this.direction.dot(_edge2.crossVectors(_diff,_edge2));if(s<0)return null;const l=o*this.direction.dot(_edge1.cross(_diff));if(l<0)return null;if(s+l>a)return null;const c=-o*_diff.dot(_normal);return c<0?null:this.at(c/a,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}class Matrix4{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,r,n,i,o,a,s,l,c,u,h,d,p,m,f){const g=this.elements;return g[0]=e,g[4]=t,g[8]=r,g[12]=n,g[1]=i,g[5]=o,g[9]=a,g[13]=s,g[2]=l,g[6]=c,g[10]=u,g[14]=h,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Matrix4).fromArray(this.elements)}copy(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this}copyPosition(e){const t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this}extractBasis(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,r=e.elements,n=1/_v1$1.setFromMatrixColumn(e,0).length(),i=1/_v1$1.setFromMatrixColumn(e,1).length(),o=1/_v1$1.setFromMatrixColumn(e,2).length();return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[3]=0,t[4]=r[4]*i,t[5]=r[5]*i,t[6]=r[6]*i,t[7]=0,t[8]=r[8]*o,t[9]=r[9]*o,t[10]=r[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,r=e.x,n=e.y,i=e.z,o=Math.cos(r),a=Math.sin(r),s=Math.cos(n),l=Math.sin(n),c=Math.cos(i),u=Math.sin(i);if("XYZ"===e.order){const e=o*c,r=o*u,n=a*c,i=a*u;t[0]=s*c,t[4]=-s*u,t[8]=l,t[1]=r+n*l,t[5]=e-i*l,t[9]=-a*s,t[2]=i-e*l,t[6]=n+r*l,t[10]=o*s}else if("YXZ"===e.order){const e=s*c,r=s*u,n=l*c,i=l*u;t[0]=e+i*a,t[4]=n*a-r,t[8]=o*l,t[1]=o*u,t[5]=o*c,t[9]=-a,t[2]=r*a-n,t[6]=i+e*a,t[10]=o*s}else if("ZXY"===e.order){const e=s*c,r=s*u,n=l*c,i=l*u;t[0]=e-i*a,t[4]=-o*u,t[8]=n+r*a,t[1]=r+n*a,t[5]=o*c,t[9]=i-e*a,t[2]=-o*l,t[6]=a,t[10]=o*s}else if("ZYX"===e.order){const e=o*c,r=o*u,n=a*c,i=a*u;t[0]=s*c,t[4]=n*l-r,t[8]=e*l+i,t[1]=s*u,t[5]=i*l+e,t[9]=r*l-n,t[2]=-l,t[6]=a*s,t[10]=o*s}else if("YZX"===e.order){const e=o*s,r=o*l,n=a*s,i=a*l;t[0]=s*c,t[4]=i-e*u,t[8]=n*u+r,t[1]=u,t[5]=o*c,t[9]=-a*c,t[2]=-l*c,t[6]=r*u+n,t[10]=e-i*u}else if("XZY"===e.order){const e=o*s,r=o*l,n=a*s,i=a*l;t[0]=s*c,t[4]=-u,t[8]=l*c,t[1]=e*u+i,t[5]=o*c,t[9]=r*u-n,t[2]=n*u-r,t[6]=a*c,t[10]=i*u+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(_zero,e,_one)}lookAt(e,t,r){const n=this.elements;return _z.subVectors(e,t),0===_z.lengthSq()&&(_z.z=1),_z.normalize(),_x.crossVectors(r,_z),0===_x.lengthSq()&&(1===Math.abs(r.z)?_z.x+=1e-4:_z.z+=1e-4,_z.normalize(),_x.crossVectors(r,_z)),_x.normalize(),_y.crossVectors(_z,_x),n[0]=_x.x,n[4]=_y.x,n[8]=_z.x,n[1]=_x.y,n[5]=_y.y,n[9]=_z.y,n[2]=_x.z,n[6]=_y.z,n[10]=_z.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const r=e.elements,n=t.elements,i=this.elements,o=r[0],a=r[4],s=r[8],l=r[12],c=r[1],u=r[5],h=r[9],d=r[13],p=r[2],m=r[6],f=r[10],g=r[14],_=r[3],y=r[7],x=r[11],b=r[15],w=n[0],M=n[4],S=n[8],T=n[12],A=n[1],E=n[5],C=n[9],L=n[13],P=n[2],R=n[6],B=n[10],D=n[14],O=n[3],I=n[7],U=n[11],N=n[15];return i[0]=o*w+a*A+s*P+l*O,i[4]=o*M+a*E+s*R+l*I,i[8]=o*S+a*C+s*B+l*U,i[12]=o*T+a*L+s*D+l*N,i[1]=c*w+u*A+h*P+d*O,i[5]=c*M+u*E+h*R+d*I,i[9]=c*S+u*C+h*B+d*U,i[13]=c*T+u*L+h*D+d*N,i[2]=p*w+m*A+f*P+g*O,i[6]=p*M+m*E+f*R+g*I,i[10]=p*S+m*C+f*B+g*U,i[14]=p*T+m*L+f*D+g*N,i[3]=_*w+y*A+x*P+b*O,i[7]=_*M+y*E+x*R+b*I,i[11]=_*S+y*C+x*B+b*U,i[15]=_*T+y*L+x*D+b*N,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],r=e[4],n=e[8],i=e[12],o=e[1],a=e[5],s=e[9],l=e[13],c=e[2],u=e[6],h=e[10],d=e[14];return e[3]*(+i*s*u-n*l*u-i*a*h+r*l*h+n*a*d-r*s*d)+e[7]*(+t*s*d-t*l*h+i*o*h-n*o*d+n*l*c-i*s*c)+e[11]*(+t*l*u-t*a*d-i*o*u+r*o*d+i*a*c-r*l*c)+e[15]*(-n*a*c-t*s*u+t*a*h+n*o*u-r*o*h+r*s*c)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,r){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=r),this}invert(){const e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],o=e[4],a=e[5],s=e[6],l=e[7],c=e[8],u=e[9],h=e[10],d=e[11],p=e[12],m=e[13],f=e[14],g=e[15],_=u*f*l-m*h*l+m*s*d-a*f*d-u*s*g+a*h*g,y=p*h*l-c*f*l-p*s*d+o*f*d+c*s*g-o*h*g,x=c*m*l-p*u*l+p*a*d-o*m*d-c*a*g+o*u*g,b=p*u*s-c*m*s-p*a*h+o*m*h+c*a*f-o*u*f,w=t*_+r*y+n*x+i*b;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/w;return e[0]=_*M,e[1]=(m*h*i-u*f*i-m*n*d+r*f*d+u*n*g-r*h*g)*M,e[2]=(a*f*i-m*s*i+m*n*l-r*f*l-a*n*g+r*s*g)*M,e[3]=(u*s*i-a*h*i-u*n*l+r*h*l+a*n*d-r*s*d)*M,e[4]=y*M,e[5]=(c*f*i-p*h*i+p*n*d-t*f*d-c*n*g+t*h*g)*M,e[6]=(p*s*i-o*f*i-p*n*l+t*f*l+o*n*g-t*s*g)*M,e[7]=(o*h*i-c*s*i+c*n*l-t*h*l-o*n*d+t*s*d)*M,e[8]=x*M,e[9]=(p*u*i-c*m*i-p*r*d+t*m*d+c*r*g-t*u*g)*M,e[10]=(o*m*i-p*a*i+p*r*l-t*m*l-o*r*g+t*a*g)*M,e[11]=(c*a*i-o*u*i-c*r*l+t*u*l+o*r*d-t*a*d)*M,e[12]=b*M,e[13]=(c*m*n-p*u*n+p*r*h-t*m*h-c*r*f+t*u*f)*M,e[14]=(p*a*n-o*m*n-p*r*s+t*m*s+o*r*f-t*a*f)*M,e[15]=(o*u*n-c*a*n+c*r*s-t*u*s-o*r*h+t*a*h)*M,this}scale(e){const t=this.elements,r=e.x,n=e.y,i=e.z;return t[0]*=r,t[4]*=n,t[8]*=i,t[1]*=r,t[5]*=n,t[9]*=i,t[2]*=r,t[6]*=n,t[10]*=i,t[3]*=r,t[7]*=n,t[11]*=i,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,n))}makeTranslation(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const r=Math.cos(t),n=Math.sin(t),i=1-r,o=e.x,a=e.y,s=e.z,l=i*o,c=i*a;return this.set(l*o+r,l*a-n*s,l*s+n*a,0,l*a+n*s,c*a+r,c*s-n*o,0,l*s-n*a,c*s+n*o,i*s*s+r,0,0,0,0,1),this}makeScale(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this}makeShear(e,t,r){return this.set(1,t,r,0,e,1,r,0,e,t,1,0,0,0,0,1),this}compose(e,t,r){const n=this.elements,i=t._x,o=t._y,a=t._z,s=t._w,l=i+i,c=o+o,u=a+a,h=i*l,d=i*c,p=i*u,m=o*c,f=o*u,g=a*u,_=s*l,y=s*c,x=s*u,b=r.x,w=r.y,M=r.z;return n[0]=(1-(m+g))*b,n[1]=(d+x)*b,n[2]=(p-y)*b,n[3]=0,n[4]=(d-x)*w,n[5]=(1-(h+g))*w,n[6]=(f+_)*w,n[7]=0,n[8]=(p+y)*M,n[9]=(f-_)*M,n[10]=(1-(h+m))*M,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,r){const n=this.elements;let i=_v1$1.set(n[0],n[1],n[2]).length();const o=_v1$1.set(n[4],n[5],n[6]).length(),a=_v1$1.set(n[8],n[9],n[10]).length();this.determinant()<0&&(i=-i),e.x=n[12],e.y=n[13],e.z=n[14],_m1.copy(this);const s=1/i,l=1/o,c=1/a;return _m1.elements[0]*=s,_m1.elements[1]*=s,_m1.elements[2]*=s,_m1.elements[4]*=l,_m1.elements[5]*=l,_m1.elements[6]*=l,_m1.elements[8]*=c,_m1.elements[9]*=c,_m1.elements[10]*=c,t.setFromRotationMatrix(_m1),r.x=i,r.y=o,r.z=a,this}makePerspective(e,t,r,n,i,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,s=2*i/(t-e),l=2*i/(r-n),c=(t+e)/(t-e),u=(r+n)/(r-n),h=-(o+i)/(o-i),d=-2*o*i/(o-i);return a[0]=s,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=l,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,r,n,i,o){const a=this.elements,s=1/(t-e),l=1/(r-n),c=1/(o-i),u=(t+e)*s,h=(r+n)*l,d=(o+i)*c;return a[0]=2*s,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2*c,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,r=e.elements;for(let e=0;e<16;e++)if(t[e]!==r[e])return!1;return!0}fromArray(e,t=0){for(let r=0;r<16;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}const _v1$1=new Vector3,_m1=new Matrix4,_zero=new Vector3(0,0,0),_one=new Vector3(1,1,1),_x=new Vector3,_y=new Vector3,_z=new Vector3;class Euler{constructor(e=0,t=0,r=0,n=Euler.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=e,this._y=t,this._z=r,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._order=n||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,r){const n=MathUtils.clamp,i=e.elements,o=i[0],a=i[4],s=i[8],l=i[1],c=i[5],u=i[9],h=i[2],d=i[6],p=i[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(n(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-n(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(s,p),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,o),this._z=0);break;case"ZXY":this._x=Math.asin(n(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,p),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,o));break;case"ZYX":this._y=Math.asin(-n(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(l,o)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(n(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,o)):(this._x=0,this._y=Math.atan2(s,p));break;case"XZY":this._z=Math.asin(-n(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(s,o)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==r&&this._onChangeCallback(),this}setFromQuaternion(e,t,r){return _matrix.makeRotationFromQuaternion(e),this.setFromRotationMatrix(_matrix,t,r)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return _quaternion$1.setFromEuler(this),this.setFromQuaternion(_quaternion$1,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new Vector3(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Euler.DefaultOrder="XYZ",Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const _matrix=new Matrix4,_quaternion$1=new Quaternion;class Layers{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let _object3DId=0;const _v1$2=new Vector3,_q1=new Quaternion,_m1$1=new Matrix4,_target=new Vector3,_position=new Vector3,_scale=new Vector3,_quaternion$2=new Quaternion,_xAxis=new Vector3(1,0,0),_yAxis=new Vector3(0,1,0),_zAxis=new Vector3(0,0,1),_addedEvent={type:"added"},_removedEvent={type:"removed"};function Object3D(){Object.defineProperty(this,"id",{value:_object3DId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Object3D.DefaultUp.clone();const e=new Vector3,t=new Euler,r=new Quaternion,n=new Vector3(1,1,1);t._onChange((function onRotationChange(){r.setFromEuler(t,!1)})),r._onChange((function onQuaternionChange(){t.setFromQuaternion(r,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Matrix4},normalMatrix:{value:new Matrix3}}),this.matrix=new Matrix4,this.matrixWorld=new Matrix4,this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}Object3D.DefaultUp=new Vector3(0,1,0),Object3D.DefaultMatrixAutoUpdate=!0,Object3D.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Object3D,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.multiply(_q1),this},rotateOnWorldAxis:function(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.premultiply(_q1),this},rotateX:function(e){return this.rotateOnAxis(_xAxis,e)},rotateY:function(e){return this.rotateOnAxis(_yAxis,e)},rotateZ:function(e){return this.rotateOnAxis(_zAxis,e)},translateOnAxis:function(e,t){return _v1$2.copy(e).applyQuaternion(this.quaternion),this.position.add(_v1$2.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(_xAxis,e)},translateY:function(e){return this.translateOnAxis(_yAxis,e)},translateZ:function(e){return this.translateOnAxis(_zAxis,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(_m1$1.copy(this.matrixWorld).invert())},lookAt:function(e,t,r){e.isVector3?_target.copy(e):_target.set(e,t,r);const n=this.parent;this.updateWorldMatrix(!0,!1),_position.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_m1$1.lookAt(_position,_target,this.up):_m1$1.lookAt(_target,_position,this.up),this.quaternion.setFromRotationMatrix(_m1$1),n&&(_m1$1.extractRotation(n.matrixWorld),_q1.setFromRotationMatrix(_m1$1),this.quaternion.premultiply(_q1.invert()))},add:function(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(_addedEvent)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(_removedEvent)),this},clear:function(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(_removedEvent)}return this.children.length=0,this},attach:function(e){return this.updateWorldMatrix(!0,!1),_m1$1.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),_m1$1.multiply(e.parent.matrixWorld)),e.applyMatrix4(_m1$1),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(let r=0,n=this.children.length;r<n;r++){const n=this.children[r].getObjectByProperty(e,t);if(void 0!==n)return n}},getWorldPosition:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new Vector3),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new Quaternion),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_position,e,_scale),e},getWorldScale:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new Vector3),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_position,_quaternion$2,e),e},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new Vector3),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);const t=this.children;for(let r=0,n=t.length;r<n;r++)t[r].traverse(e)},traverseVisible:function(e){if(!1===this.visible)return;e(this);const t=this.children;for(let r=0,n=t.length;r<n;r++)t[r].traverseVisible(e)},traverseAncestors:function(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let r=0,n=t.length;r<n;r++)t[r].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){const r=this.parent;if(!0===e&&null!==r&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,r=e.length;t<r;t++)e[t].updateWorldMatrix(!1,!0)}},toJSON:function(e){const t=void 0===e||"string"==typeof e,r={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const n={};function serialize(t,r){return void 0===t[r.uuid]&&(t[r.uuid]=r.toJSON(e)),r.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){n.geometry=serialize(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const r=t.shapes;if(Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const n=r[t];serialize(e.shapes,n)}else serialize(e.shapes,r)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(serialize(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let r=0,n=this.material.length;r<n;r++)t.push(serialize(e.materials,this.material[r]));n.material=t}else n.material=serialize(e.materials,this.material);if(this.children.length>0){n.children=[];for(let t=0;t<this.children.length;t++)n.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let t=0;t<this.animations.length;t++){const r=this.animations[t];n.animations.push(serialize(e.animations,r))}}if(t){const t=extractFromCache(e.geometries),n=extractFromCache(e.materials),i=extractFromCache(e.textures),o=extractFromCache(e.images),a=extractFromCache(e.shapes),s=extractFromCache(e.skeletons),l=extractFromCache(e.animations);t.length>0&&(r.geometries=t),n.length>0&&(r.materials=n),i.length>0&&(r.textures=i),o.length>0&&(r.images=o),a.length>0&&(r.shapes=a),s.length>0&&(r.skeletons=s),l.length>0&&(r.animations=l)}return r.object=n,r;function extractFromCache(e){const t=[];for(const r in e){const n=e[r];delete n.metadata,t.push(n)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const r=e.children[t];this.add(r.clone())}return this}});const _vector1=new Vector3,_vector2=new Vector3,_normalMatrix=new Matrix3;class Plane{constructor(e,t){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=void 0!==e?e:new Vector3(1,0,0),this.constant=void 0!==t?t:0}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,r,n){return this.normal.set(e,t,r),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,r){const n=_vector1.subVectors(r,t).cross(_vector2.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new Vector3),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new Vector3);const r=e.delta(_vector1),n=this.normal.dot(r);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):void 0;const i=-(e.start.dot(this.normal)+this.constant)/n;return i<0||i>1?void 0:t.copy(r).multiplyScalar(i).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new Vector3),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const r=t||_normalMatrix.getNormalMatrix(e),n=this.coplanarPoint(_vector1).applyMatrix4(e),i=this.normal.applyMatrix3(r).normalize();return this.constant=-n.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}const _v0$1=new Vector3,_v1$3=new Vector3,_v2$1=new Vector3,_v3=new Vector3,_vab=new Vector3,_vac=new Vector3,_vbc=new Vector3,_vap=new Vector3,_vbp=new Vector3,_vcp=new Vector3;class Triangle{constructor(e,t,r){this.a=void 0!==e?e:new Vector3,this.b=void 0!==t?t:new Vector3,this.c=void 0!==r?r:new Vector3}static getNormal(e,t,r,n){void 0===n&&(console.warn("THREE.Triangle: .getNormal() target is now required"),n=new Vector3),n.subVectors(r,t),_v0$1.subVectors(e,t),n.cross(_v0$1);const i=n.lengthSq();return i>0?n.multiplyScalar(1/Math.sqrt(i)):n.set(0,0,0)}static getBarycoord(e,t,r,n,i){_v0$1.subVectors(n,t),_v1$3.subVectors(r,t),_v2$1.subVectors(e,t);const o=_v0$1.dot(_v0$1),a=_v0$1.dot(_v1$3),s=_v0$1.dot(_v2$1),l=_v1$3.dot(_v1$3),c=_v1$3.dot(_v2$1),u=o*l-a*a;if(void 0===i&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new Vector3),0===u)return i.set(-2,-1,-1);const h=1/u,d=(l*s-a*c)*h,p=(o*c-a*s)*h;return i.set(1-d-p,p,d)}static containsPoint(e,t,r,n){return this.getBarycoord(e,t,r,n,_v3),_v3.x>=0&&_v3.y>=0&&_v3.x+_v3.y<=1}static getUV(e,t,r,n,i,o,a,s){return this.getBarycoord(e,t,r,n,_v3),s.set(0,0),s.addScaledVector(i,_v3.x),s.addScaledVector(o,_v3.y),s.addScaledVector(a,_v3.z),s}static isFrontFacing(e,t,r,n){return _v0$1.subVectors(r,t),_v1$3.subVectors(e,t),_v0$1.cross(_v1$3).dot(n)<0}set(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}setFromPointsAndIndices(e,t,r,n){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[n]),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return _v0$1.subVectors(this.c,this.b),_v1$3.subVectors(this.a,this.b),.5*_v0$1.cross(_v1$3).length()}getMidpoint(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new Vector3),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Triangle.getNormal(this.a,this.b,this.c,e)}getPlane(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new Plane),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Triangle.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,r,n,i){return Triangle.getUV(e,this.a,this.b,this.c,t,r,n,i)}containsPoint(e){return Triangle.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Triangle.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new Vector3);const r=this.a,n=this.b,i=this.c;let o,a;_vab.subVectors(n,r),_vac.subVectors(i,r),_vap.subVectors(e,r);const s=_vab.dot(_vap),l=_vac.dot(_vap);if(s<=0&&l<=0)return t.copy(r);_vbp.subVectors(e,n);const c=_vab.dot(_vbp),u=_vac.dot(_vbp);if(c>=0&&u<=c)return t.copy(n);const h=s*u-c*l;if(h<=0&&s>=0&&c<=0)return o=s/(s-c),t.copy(r).addScaledVector(_vab,o);_vcp.subVectors(e,i);const d=_vab.dot(_vcp),p=_vac.dot(_vcp);if(p>=0&&d<=p)return t.copy(i);const m=d*l-s*p;if(m<=0&&l>=0&&p<=0)return a=l/(l-p),t.copy(r).addScaledVector(_vac,a);const f=c*p-d*u;if(f<=0&&u-c>=0&&d-p>=0)return _vbc.subVectors(i,n),a=(u-c)/(u-c+(d-p)),t.copy(n).addScaledVector(_vbc,a);const g=1/(f+m+h);return o=m*g,a=h*g,t.copy(r).addScaledVector(_vab,o).addScaledVector(_vac,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const _colorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_hslA={h:0,s:0,l:0},_hslB={h:0,s:0,l:0};function hue2rgb(e,t,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+6*(t-e)*(2/3-r):e}function SRGBToLinear(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function LinearToSRGB(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class Color{constructor(e,t,r){return Object.defineProperty(this,"isColor",{value:!0}),void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,r){return this.r=e,this.g=t,this.b=r,this}setHSL(e,t,r){if(e=MathUtils.euclideanModulo(e,1),t=MathUtils.clamp(t,0,1),r=MathUtils.clamp(r,0,1),0===t)this.r=this.g=this.b=r;else{const n=r<=.5?r*(1+t):r+t-r*t,i=2*r-n;this.r=hue2rgb(i,n,e+1/3),this.g=hue2rgb(i,n,e),this.b=hue2rgb(i,n,e-1/3)}return this}setStyle(e){function handleAlpha(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let t;if(t=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){let e;const r=t[1],n=t[2];switch(r){case"rgb":case"rgba":if(e=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,handleAlpha(e[4]),this;if(e=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,handleAlpha(e[4]),this;break;case"hsl":case"hsla":if(e=/^(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n)){const t=parseFloat(e[1])/360,r=parseInt(e[2],10)/100,n=parseInt(e[3],10)/100;return handleAlpha(e[4]),this.setHSL(t,r,n)}}}else if(t=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=t[1],r=e.length;if(3===r)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===r)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=_colorKeywords[e];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){const r=t>0?1/t:1;return this.r=Math.pow(e.r,r),this.g=Math.pow(e.g,r),this.b=Math.pow(e.b,r),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=SRGBToLinear(e.r),this.g=SRGBToLinear(e.g),this.b=SRGBToLinear(e.b),this}copyLinearToSRGB(e){return this.r=LinearToSRGB(e.r),this.g=LinearToSRGB(e.g),this.b=LinearToSRGB(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,r=this.g,n=this.b,i=Math.max(t,r,n),o=Math.min(t,r,n);let a,s;const l=(o+i)/2;if(o===i)a=0,s=0;else{const e=i-o;switch(s=l<=.5?e/(i+o):e/(2-i-o),i){case t:a=(r-n)/e+(r<n?6:0);break;case r:a=(n-t)/e+2;break;case n:a=(t-r)/e+4}a/=6}return e.h=a,e.s=s,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,r){return this.getHSL(_hslA),_hslA.h+=e,_hslA.s+=t,_hslA.l+=r,this.setHSL(_hslA.h,_hslA.s,_hslA.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpHSL(e,t){this.getHSL(_hslA),e.getHSL(_hslB);const r=MathUtils.lerp(_hslA.h,_hslB.h,t),n=MathUtils.lerp(_hslA.s,_hslB.s,t),i=MathUtils.lerp(_hslA.l,_hslB.l,t);return this.setHSL(r,n,i),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Color.NAMES=_colorKeywords,Color.prototype.r=1,Color.prototype.g=1,Color.prototype.b=1;class Face3{constructor(e,t,r,n,i,o=0){this.a=e,this.b=t,this.c=r,this.normal=n&&n.isVector3?n:new Vector3,this.vertexNormals=Array.isArray(n)?n:[],this.color=i&&i.isColor?i:new Color,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=o}clone(){return(new this.constructor).copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,r=e.vertexNormals.length;t<r;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,r=e.vertexColors.length;t<r;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}}let materialId=0;function Material(){Object.defineProperty(this,"id",{value:materialId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function MeshBasicMaterial(e){Material.call(this),this.type="MeshBasicMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}Material.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Material,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(void 0!==e)for(const t in e){const r=e[t];if(void 0===r){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===r;continue}const n=this[t];void 0!==n?n&&n.isColor?n.set(r):n&&n.isVector3&&r&&r.isVector3?n.copy(r):this[t]=r:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}},toJSON:function(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const r={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function extractFromCache(e){const t=[];for(const r in e){const n=e[r];delete n.metadata,t.push(n)}return t}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(r.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearcoat&&(r.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(e).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,r.reflectivity=this.reflectivity,r.refractionRatio=this.refractionRatio,void 0!==this.combine&&(r.combine=this.combine),void 0!==this.envMapIntensity&&(r.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(r.size=this.size),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(r.blending=this.blending),!0===this.flatShading&&(r.flatShading=this.flatShading),0!==this.side&&(r.side=this.side),this.vertexColors&&(r.vertexColors=!0),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,r.stencilWrite=this.stencilWrite,r.stencilWriteMask=this.stencilWriteMask,r.stencilFunc=this.stencilFunc,r.stencilRef=this.stencilRef,r.stencilFuncMask=this.stencilFuncMask,r.stencilFail=this.stencilFail,r.stencilZFail=this.stencilZFail,r.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(r.rotation=this.rotation),!0===this.polygonOffset&&(r.polygonOffset=!0),0!==this.polygonOffsetFactor&&(r.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(r.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(r.linewidth=this.linewidth),void 0!==this.dashSize&&(r.dashSize=this.dashSize),void 0!==this.gapSize&&(r.gapSize=this.gapSize),void 0!==this.scale&&(r.scale=this.scale),!0===this.dithering&&(r.dithering=!0),this.alphaTest>0&&(r.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(r.morphTargets=!0),!0===this.morphNormals&&(r.morphNormals=!0),!0===this.skinning&&(r.skinning=!0),!1===this.visible&&(r.visible=!1),!1===this.toneMapped&&(r.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),t){const t=extractFromCache(e.textures),n=extractFromCache(e.images);t.length>0&&(r.textures=t),n.length>0&&(r.images=n)}return r},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let r=null;if(null!==t){const e=t.length;r=new Array(e);for(let n=0;n!==e;++n)r[n]=t[n].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Material.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),MeshBasicMaterial.prototype=Object.create(Material.prototype),MeshBasicMaterial.prototype.constructor=MeshBasicMaterial,MeshBasicMaterial.prototype.isMeshBasicMaterial=!0,MeshBasicMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};const _vector$3=new Vector3,_vector2$1=new Vector2;function BufferAttribute(e,t,r){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===r,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}function Int8BufferAttribute(e,t,r){BufferAttribute.call(this,new Int8Array(e),t,r)}function Uint8BufferAttribute(e,t,r){BufferAttribute.call(this,new Uint8Array(e),t,r)}function Uint8ClampedBufferAttribute(e,t,r){BufferAttribute.call(this,new Uint8ClampedArray(e),t,r)}function Int16BufferAttribute(e,t,r){BufferAttribute.call(this,new Int16Array(e),t,r)}function Uint16BufferAttribute(e,t,r){BufferAttribute.call(this,new Uint16Array(e),t,r)}function Int32BufferAttribute(e,t,r){BufferAttribute.call(this,new Int32Array(e),t,r)}function Uint32BufferAttribute(e,t,r){BufferAttribute.call(this,new Uint32Array(e),t,r)}function Float16BufferAttribute(e,t,r){BufferAttribute.call(this,new Uint16Array(e),t,r)}function Float32BufferAttribute(e,t,r){BufferAttribute.call(this,new Float32Array(e),t,r)}function Float64BufferAttribute(e,t,r){BufferAttribute.call(this,new Float64Array(e),t,r)}Object.defineProperty(BufferAttribute.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(BufferAttribute.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,r){e*=this.itemSize,r*=t.itemSize;for(let n=0,i=this.itemSize;n<i;n++)this.array[e+n]=t.array[r+n];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){const t=this.array;let r=0;for(let n=0,i=e.length;n<i;n++){let i=e[n];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),i=new Color),t[r++]=i.r,t[r++]=i.g,t[r++]=i.b}return this},copyVector2sArray:function(e){const t=this.array;let r=0;for(let n=0,i=e.length;n<i;n++){let i=e[n];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),i=new Vector2),t[r++]=i.x,t[r++]=i.y}return this},copyVector3sArray:function(e){const t=this.array;let r=0;for(let n=0,i=e.length;n<i;n++){let i=e[n];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),i=new Vector3),t[r++]=i.x,t[r++]=i.y,t[r++]=i.z}return this},copyVector4sArray:function(e){const t=this.array;let r=0;for(let n=0,i=e.length;n<i;n++){let i=e[n];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),i=new Vector4),t[r++]=i.x,t[r++]=i.y,t[r++]=i.z,t[r++]=i.w}return this},applyMatrix3:function(e){if(2===this.itemSize)for(let t=0,r=this.count;t<r;t++)_vector2$1.fromBufferAttribute(this,t),_vector2$1.applyMatrix3(e),this.setXY(t,_vector2$1.x,_vector2$1.y);else if(3===this.itemSize)for(let t=0,r=this.count;t<r;t++)_vector$3.fromBufferAttribute(this,t),_vector$3.applyMatrix3(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},applyMatrix4:function(e){for(let t=0,r=this.count;t<r;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.applyMatrix4(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},applyNormalMatrix:function(e){for(let t=0,r=this.count;t<r;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.applyNormalMatrix(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},transformDirection:function(e){for(let t=0,r=this.count;t<r;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.transformDirection(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},set:function(e,t=0){return this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this},setXYZ:function(e,t,r,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this},setXYZW:function(e,t,r,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this.array[e+3]=i,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),Int8BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int8BufferAttribute.prototype.constructor=Int8BufferAttribute,Uint8BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint8BufferAttribute.prototype.constructor=Uint8BufferAttribute,Uint8ClampedBufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint8ClampedBufferAttribute.prototype.constructor=Uint8ClampedBufferAttribute,Int16BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int16BufferAttribute.prototype.constructor=Int16BufferAttribute,Uint16BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint16BufferAttribute.prototype.constructor=Uint16BufferAttribute,Int32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int32BufferAttribute.prototype.constructor=Int32BufferAttribute,Uint32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint32BufferAttribute.prototype.constructor=Uint32BufferAttribute,Float16BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Float16BufferAttribute.prototype.constructor=Float16BufferAttribute,Float16BufferAttribute.prototype.isFloat16BufferAttribute=!0,Float32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Float32BufferAttribute.prototype.constructor=Float32BufferAttribute,Float64BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Float64BufferAttribute.prototype.constructor=Float64BufferAttribute;class DirectGeometry{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(e){const t=[];let r,n,i=void 0;const o=e.faces;for(n=0;n<o.length;n++){const e=o[n];e.materialIndex!==i&&(i=e.materialIndex,void 0!==r&&(r.count=3*n-r.start,t.push(r)),r={start:3*n,materialIndex:i})}void 0!==r&&(r.count=3*n-r.start,t.push(r)),this.groups=t}fromGeometry(e){const t=e.faces,r=e.vertices,n=e.faceVertexUvs,i=n[0]&&n[0].length>0,o=n[1]&&n[1].length>0,a=e.morphTargets,s=a.length;let l;if(s>0){l=[];for(let e=0;e<s;e++)l[e]={name:a[e].name,data:[]};this.morphTargets.position=l}const c=e.morphNormals,u=c.length;let h;if(u>0){h=[];for(let e=0;e<u;e++)h[e]={name:c[e].name,data:[]};this.morphTargets.normal=h}const d=e.skinIndices,p=e.skinWeights,m=d.length===r.length,f=p.length===r.length;r.length>0&&0===t.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let e=0;e<t.length;e++){const g=t[e];this.vertices.push(r[g.a],r[g.b],r[g.c]);const _=g.vertexNormals;if(3===_.length)this.normals.push(_[0],_[1],_[2]);else{const e=g.normal;this.normals.push(e,e,e)}const y=g.vertexColors;if(3===y.length)this.colors.push(y[0],y[1],y[2]);else{const e=g.color;this.colors.push(e,e,e)}if(!0===i){const t=n[0][e];void 0!==t?this.uvs.push(t[0],t[1],t[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",e),this.uvs.push(new Vector2,new Vector2,new Vector2))}if(!0===o){const t=n[1][e];void 0!==t?this.uvs2.push(t[0],t[1],t[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",e),this.uvs2.push(new Vector2,new Vector2,new Vector2))}for(let e=0;e<s;e++){const t=a[e].vertices;l[e].data.push(t[g.a],t[g.b],t[g.c])}for(let t=0;t<u;t++){const r=c[t].vertexNormals[e];h[t].data.push(r.a,r.b,r.c)}m&&this.skinIndices.push(d[g.a],d[g.b],d[g.c]),f&&this.skinWeights.push(p[g.a],p[g.b],p[g.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this}}function arrayMax(e){if(0===e.length)return-1/0;let t=e[0];for(let r=1,n=e.length;r<n;++r)e[r]>t&&(t=e[r]);return t}const TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function getTypedArray(e,t){return new TYPED_ARRAYS[e](t)}let _bufferGeometryId=1;const _m1$2=new Matrix4,_obj=new Object3D,_offset=new Vector3,_box$2=new Box3,_boxMorphTargets=new Box3,_vector$4=new Vector3;function BufferGeometry(){Object.defineProperty(this,"id",{value:_bufferGeometryId+=2}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}BufferGeometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:BufferGeometry,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){return Array.isArray(e)?this.index=new(arrayMax(e)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(e,1):this.index=e,this},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},hasAttribute:function(e){return void 0!==this.attributes[e]},addGroup:function(e,t,r=0){this.groups.push({start:e,count:t,materialIndex:r})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const r=this.attributes.normal;if(void 0!==r){const t=(new Matrix3).getNormalMatrix(e);r.applyNormalMatrix(t),r.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(e),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(e){return _m1$2.makeRotationX(e),this.applyMatrix4(_m1$2),this},rotateY:function(e){return _m1$2.makeRotationY(e),this.applyMatrix4(_m1$2),this},rotateZ:function(e){return _m1$2.makeRotationZ(e),this.applyMatrix4(_m1$2),this},translate:function(e,t,r){return _m1$2.makeTranslation(e,t,r),this.applyMatrix4(_m1$2),this},scale:function(e,t,r){return _m1$2.makeScale(e,t,r),this.applyMatrix4(_m1$2),this},lookAt:function(e){return _obj.lookAt(e),_obj.updateMatrix(),this.applyMatrix4(_obj.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset).negate(),this.translate(_offset.x,_offset.y,_offset.z),this},setFromObject:function(e){const t=e.geometry;if(e.isPoints||e.isLine){const e=new Float32BufferAttribute(3*t.vertices.length,3),r=new Float32BufferAttribute(3*t.colors.length,3);if(this.setAttribute("position",e.copyVector3sArray(t.vertices)),this.setAttribute("color",r.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){const e=new Float32BufferAttribute(t.lineDistances.length,1);this.setAttribute("lineDistance",e.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){const t=[];for(let r=0,n=e.length;r<n;r++){const n=e[r];t.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new Float32BufferAttribute(t,3)),this},updateFromObject:function(e){let t=e.geometry;if(e.isMesh){let e=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(e=void 0,t.elementsNeedUpdate=!1),void 0===e)return this.fromGeometry(t);e.verticesNeedUpdate=t.verticesNeedUpdate,e.normalsNeedUpdate=t.normalsNeedUpdate,e.colorsNeedUpdate=t.colorsNeedUpdate,e.uvsNeedUpdate=t.uvsNeedUpdate,e.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=e}if(!0===t.verticesNeedUpdate){const e=this.attributes.position;void 0!==e&&(e.copyVector3sArray(t.vertices),e.needsUpdate=!0),t.verticesNeedUpdate=!1}if(!0===t.normalsNeedUpdate){const e=this.attributes.normal;void 0!==e&&(e.copyVector3sArray(t.normals),e.needsUpdate=!0),t.normalsNeedUpdate=!1}if(!0===t.colorsNeedUpdate){const e=this.attributes.color;void 0!==e&&(e.copyColorsArray(t.colors),e.needsUpdate=!0),t.colorsNeedUpdate=!1}if(t.uvsNeedUpdate){const e=this.attributes.uv;void 0!==e&&(e.copyVector2sArray(t.uvs),e.needsUpdate=!0),t.uvsNeedUpdate=!1}if(t.lineDistancesNeedUpdate){const e=this.attributes.lineDistance;void 0!==e&&(e.copyArray(t.lineDistances),e.needsUpdate=!0),t.lineDistancesNeedUpdate=!1}return t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new DirectGeometry).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){const t=new Float32Array(3*e.vertices.length);if(this.setAttribute("position",new BufferAttribute(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){const t=new Float32Array(3*e.normals.length);this.setAttribute("normal",new BufferAttribute(t,3).copyVector3sArray(e.normals))}if(e.colors.length>0){const t=new Float32Array(3*e.colors.length);this.setAttribute("color",new BufferAttribute(t,3).copyColorsArray(e.colors))}if(e.uvs.length>0){const t=new Float32Array(2*e.uvs.length);this.setAttribute("uv",new BufferAttribute(t,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){const t=new Float32Array(2*e.uvs2.length);this.setAttribute("uv2",new BufferAttribute(t,2).copyVector2sArray(e.uvs2))}this.groups=e.groups;for(const t in e.morphTargets){const r=[],n=e.morphTargets[t];for(let e=0,t=n.length;e<t;e++){const t=n[e],i=new Float32BufferAttribute(3*t.data.length,3);i.name=t.name,r.push(i.copyVector3sArray(t.data))}this.morphAttributes[t]=r}if(e.skinIndices.length>0){const t=new Float32BufferAttribute(4*e.skinIndices.length,4);this.setAttribute("skinIndex",t.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){const t=new Float32BufferAttribute(4*e.skinWeights.length,4);this.setAttribute("skinWeight",t.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Vector3(-1/0,-1/0,-1/0),new Vector3(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){const r=t[e];_box$2.setFromBufferAttribute(r),this.morphTargetsRelative?(_vector$4.addVectors(this.boundingBox.min,_box$2.min),this.boundingBox.expandByPoint(_vector$4),_vector$4.addVectors(this.boundingBox.max,_box$2.max),this.boundingBox.expandByPoint(_vector$4)):(this.boundingBox.expandByPoint(_box$2.min),this.boundingBox.expandByPoint(_box$2.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Vector3,1/0);if(e){const r=this.boundingSphere.center;if(_box$2.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){const r=t[e];_boxMorphTargets.setFromBufferAttribute(r),this.morphTargetsRelative?(_vector$4.addVectors(_box$2.min,_boxMorphTargets.min),_box$2.expandByPoint(_vector$4),_vector$4.addVectors(_box$2.max,_boxMorphTargets.max),_box$2.expandByPoint(_vector$4)):(_box$2.expandByPoint(_boxMorphTargets.min),_box$2.expandByPoint(_boxMorphTargets.max))}_box$2.getCenter(r);let n=0;for(let t=0,i=e.count;t<i;t++)_vector$4.fromBufferAttribute(e,t),n=Math.max(n,r.distanceToSquared(_vector$4));if(t)for(let i=0,o=t.length;i<o;i++){const o=t[i],a=this.morphTargetsRelative;for(let t=0,i=o.count;t<i;t++)_vector$4.fromBufferAttribute(o,t),a&&(_offset.fromBufferAttribute(e,t),_vector$4.add(_offset)),n=Math.max(n,r.distanceToSquared(_vector$4))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let r=this.getAttribute("normal");if(void 0===r)r=new BufferAttribute(new Float32Array(3*t.count),3),this.setAttribute("normal",r);else for(let e=0,t=r.count;e<t;e++)r.setXYZ(e,0,0,0);const n=new Vector3,i=new Vector3,o=new Vector3,a=new Vector3,s=new Vector3,l=new Vector3,c=new Vector3,u=new Vector3;if(e)for(let h=0,d=e.count;h<d;h+=3){const d=e.getX(h+0),p=e.getX(h+1),m=e.getX(h+2);n.fromBufferAttribute(t,d),i.fromBufferAttribute(t,p),o.fromBufferAttribute(t,m),c.subVectors(o,i),u.subVectors(n,i),c.cross(u),a.fromBufferAttribute(r,d),s.fromBufferAttribute(r,p),l.fromBufferAttribute(r,m),a.add(c),s.add(c),l.add(c),r.setXYZ(d,a.x,a.y,a.z),r.setXYZ(p,s.x,s.y,s.z),r.setXYZ(m,l.x,l.y,l.z)}else for(let e=0,a=t.count;e<a;e+=3)n.fromBufferAttribute(t,e+0),i.fromBufferAttribute(t,e+1),o.fromBufferAttribute(t,e+2),c.subVectors(o,i),u.subVectors(n,i),c.cross(u),r.setXYZ(e+0,c.x,c.y,c.z),r.setXYZ(e+1,c.x,c.y,c.z),r.setXYZ(e+2,c.x,c.y,c.z);this.normalizeNormals(),r.needsUpdate=!0}},merge:function(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const r=this.attributes;for(const n in r){if(void 0===e.attributes[n])continue;const i=r[n].array,o=e.attributes[n],a=o.array,s=o.itemSize*t,l=Math.min(a.length,i.length-s);for(let e=0,t=s;e<l;e++,t++)i[t]=a[e]}return this},normalizeNormals:function(){const e=this.attributes.normal;for(let t=0,r=e.count;t<r;t++)_vector$4.fromBufferAttribute(e,t),_vector$4.normalize(),e.setXYZ(t,_vector$4.x,_vector$4.y,_vector$4.z)},toNonIndexed:function(){function convertBufferAttribute(e,t){const r=e.array,n=e.itemSize,i=e.normalized,o=new r.constructor(t.length*n);let a=0,s=0;for(let e=0,i=t.length;e<i;e++){a=t[e]*n;for(let e=0;e<n;e++)o[s++]=r[a++]}return new BufferAttribute(o,n,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const e=new BufferGeometry,t=this.index.array,r=this.attributes;for(const n in r){const i=convertBufferAttribute(r[n],t);e.setAttribute(n,i)}const n=this.morphAttributes;for(const r in n){const i=[],o=n[r];for(let e=0,r=o.length;e<r;e++){const r=convertBufferAttribute(o[e],t);i.push(r)}e.morphAttributes[r]=i}e.morphTargetsRelative=this.morphTargetsRelative;const i=this.groups;for(let t=0,r=i.length;t<r;t++){const r=i[t];e.addGroup(r.start,r.count,r.materialIndex)}return e},toJSON:function(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const r in t)void 0!==t[r]&&(e[r]=t[r]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const r=this.attributes;for(const t in r){const n=r[t],i=n.toJSON(e.data);""!==n.name&&(i.name=n.name),e.data.attributes[t]=i}const n={};let i=!1;for(const t in this.morphAttributes){const r=this.morphAttributes[t],o=[];for(let t=0,n=r.length;t<n;t++){const n=r[t],i=n.toJSON(e.data);""!==n.name&&(i.name=n.name),o.push(i)}o.length>0&&(n[t]=o,i=!0)}i&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return null!==a&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e},clone:function(){return(new BufferGeometry).copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const r=e.index;null!==r&&this.setIndex(r.clone(t));const n=e.attributes;for(const e in n){const r=n[e];this.setAttribute(e,r.clone(t))}const i=e.morphAttributes;for(const e in i){const r=[],n=i[e];for(let e=0,i=n.length;e<i;e++)r.push(n[e].clone(t));this.morphAttributes[e]=r}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let e=0,t=o.length;e<t;e++){const t=o[e];this.addGroup(t.start,t.count,t.materialIndex)}const a=e.boundingBox;null!==a&&(this.boundingBox=a.clone());const s=e.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const _inverseMatrix=new Matrix4,_ray=new Ray,_sphere=new Sphere,_vA=new Vector3,_vB=new Vector3,_vC=new Vector3,_tempA=new Vector3,_tempB=new Vector3,_tempC=new Vector3,_morphA=new Vector3,_morphB=new Vector3,_morphC=new Vector3,_uvA=new Vector2,_uvB=new Vector2,_uvC=new Vector2,_intersectionPoint=new Vector3,_intersectionPointWorld=new Vector3;function Mesh(e=new BufferGeometry,t=new MeshBasicMaterial){Object3D.call(this),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}function checkIntersection(e,t,r,n,i,o,a,s){let l;if(l=1===t.side?n.intersectTriangle(a,o,i,!0,s):n.intersectTriangle(i,o,a,2!==t.side,s),null===l)return null;_intersectionPointWorld.copy(s),_intersectionPointWorld.applyMatrix4(e.matrixWorld);const c=r.ray.origin.distanceTo(_intersectionPointWorld);return c<r.near||c>r.far?null:{distance:c,point:_intersectionPointWorld.clone(),object:e}}function checkBufferGeometryIntersection(e,t,r,n,i,o,a,s,l,c,u,h){_vA.fromBufferAttribute(i,c),_vB.fromBufferAttribute(i,u),_vC.fromBufferAttribute(i,h);const d=e.morphTargetInfluences;if(t.morphTargets&&o&&d){_morphA.set(0,0,0),_morphB.set(0,0,0),_morphC.set(0,0,0);for(let e=0,t=o.length;e<t;e++){const t=d[e],r=o[e];0!==t&&(_tempA.fromBufferAttribute(r,c),_tempB.fromBufferAttribute(r,u),_tempC.fromBufferAttribute(r,h),a?(_morphA.addScaledVector(_tempA,t),_morphB.addScaledVector(_tempB,t),_morphC.addScaledVector(_tempC,t)):(_morphA.addScaledVector(_tempA.sub(_vA),t),_morphB.addScaledVector(_tempB.sub(_vB),t),_morphC.addScaledVector(_tempC.sub(_vC),t)))}_vA.add(_morphA),_vB.add(_morphB),_vC.add(_morphC)}e.isSkinnedMesh&&(e.boneTransform(c,_vA),e.boneTransform(u,_vB),e.boneTransform(h,_vC));const p=checkIntersection(e,t,r,n,_vA,_vB,_vC,_intersectionPoint);if(p){s&&(_uvA.fromBufferAttribute(s,c),_uvB.fromBufferAttribute(s,u),_uvC.fromBufferAttribute(s,h),p.uv=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2)),l&&(_uvA.fromBufferAttribute(l,c),_uvB.fromBufferAttribute(l,u),_uvC.fromBufferAttribute(l,h),p.uv2=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2));const e=new Face3(c,u,h);Triangle.getNormal(_vA,_vB,_vC,e.normal),p.face=e}return p}Mesh.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Mesh,isMesh:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(r.length>0){const e=t[r[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){const r=this.geometry,n=this.material,i=this.matrixWorld;if(void 0===n)return;if(null===r.boundingSphere&&r.computeBoundingSphere(),_sphere.copy(r.boundingSphere),_sphere.applyMatrix4(i),!1===e.ray.intersectsSphere(_sphere))return;if(_inverseMatrix.copy(i).invert(),_ray.copy(e.ray).applyMatrix4(_inverseMatrix),null!==r.boundingBox&&!1===_ray.intersectsBox(r.boundingBox))return;let o;if(r.isBufferGeometry){const i=r.index,a=r.attributes.position,s=r.morphAttributes.position,l=r.morphTargetsRelative,c=r.attributes.uv,u=r.attributes.uv2,h=r.groups,d=r.drawRange;if(null!==i)if(Array.isArray(n))for(let r=0,p=h.length;r<p;r++){const p=h[r],m=n[p.materialIndex];for(let r=Math.max(p.start,d.start),n=Math.min(p.start+p.count,d.start+d.count);r<n;r+=3){const n=i.getX(r),h=i.getX(r+1),d=i.getX(r+2);o=checkBufferGeometryIntersection(this,m,e,_ray,a,s,l,c,u,n,h,d),o&&(o.faceIndex=Math.floor(r/3),o.face.materialIndex=p.materialIndex,t.push(o))}}else{for(let r=Math.max(0,d.start),h=Math.min(i.count,d.start+d.count);r<h;r+=3){const h=i.getX(r),d=i.getX(r+1),p=i.getX(r+2);o=checkBufferGeometryIntersection(this,n,e,_ray,a,s,l,c,u,h,d,p),o&&(o.faceIndex=Math.floor(r/3),t.push(o))}}else if(void 0!==a)if(Array.isArray(n))for(let r=0,i=h.length;r<i;r++){const i=h[r],p=n[i.materialIndex];for(let r=Math.max(i.start,d.start),n=Math.min(i.start+i.count,d.start+d.count);r<n;r+=3){o=checkBufferGeometryIntersection(this,p,e,_ray,a,s,l,c,u,r,r+1,r+2),o&&(o.faceIndex=Math.floor(r/3),o.face.materialIndex=i.materialIndex,t.push(o))}}else{for(let r=Math.max(0,d.start),i=Math.min(a.count,d.start+d.count);r<i;r+=3){o=checkBufferGeometryIntersection(this,n,e,_ray,a,s,l,c,u,r,r+1,r+2),o&&(o.faceIndex=Math.floor(r/3),t.push(o))}}}else if(r.isGeometry){const i=Array.isArray(n),a=r.vertices,s=r.faces;let l;const c=r.faceVertexUvs[0];c.length>0&&(l=c);for(let r=0,c=s.length;r<c;r++){const c=s[r],u=i?n[c.materialIndex]:n;if(void 0===u)continue;const h=a[c.a],d=a[c.b],p=a[c.c];if(o=checkIntersection(this,u,e,_ray,h,d,p,_intersectionPoint),o){if(l&&l[r]){const e=l[r];_uvA.copy(e[0]),_uvB.copy(e[1]),_uvC.copy(e[2]),o.uv=Triangle.getUV(_intersectionPoint,h,d,p,_uvA,_uvB,_uvC,new Vector2)}o.face=c,o.faceIndex=r,t.push(o)}}}}});class BoxBufferGeometry extends BufferGeometry{constructor(e=1,t=1,r=1,n=1,i=1,o=1){super(),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:o};const a=this;n=Math.floor(n),i=Math.floor(i),o=Math.floor(o);const s=[],l=[],c=[],u=[];let h=0,d=0;function buildPlane(e,t,r,n,i,o,p,m,f,g,_){const y=o/f,x=p/g,b=o/2,w=p/2,M=m/2,S=f+1,T=g+1;let A=0,E=0;const C=new Vector3;for(let o=0;o<T;o++){const a=o*x-w;for(let s=0;s<S;s++){const h=s*y-b;C[e]=h*n,C[t]=a*i,C[r]=M,l.push(C.x,C.y,C.z),C[e]=0,C[t]=0,C[r]=m>0?1:-1,c.push(C.x,C.y,C.z),u.push(s/f),u.push(1-o/g),A+=1}}for(let e=0;e<g;e++)for(let t=0;t<f;t++){const r=h+t+S*e,n=h+t+S*(e+1),i=h+(t+1)+S*(e+1),o=h+(t+1)+S*e;s.push(r,n,o),s.push(n,i,o),E+=6}a.addGroup(d,E,_),d+=E,h+=A}buildPlane("z","y","x",-1,-1,r,t,e,o,i,0),buildPlane("z","y","x",1,-1,r,t,-e,o,i,1),buildPlane("x","z","y",1,1,e,r,t,n,o,2),buildPlane("x","z","y",1,-1,e,r,-t,n,o,3),buildPlane("x","y","z",1,-1,e,t,r,n,i,4),buildPlane("x","y","z",-1,-1,e,t,-r,n,i,5),this.setIndex(s),this.setAttribute("position",new Float32BufferAttribute(l,3)),this.setAttribute("normal",new Float32BufferAttribute(c,3)),this.setAttribute("uv",new Float32BufferAttribute(u,2))}}function cloneUniforms(e){const t={};for(const r in e){t[r]={};for(const n in e[r]){const i=e[r][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?t[r][n]=i.clone():Array.isArray(i)?t[r][n]=i.slice():t[r][n]=i}}return t}function mergeUniforms(e){const t={};for(let r=0;r<e.length;r++){const n=cloneUniforms(e[r]);for(const e in n)t[e]=n[e]}return t}const UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};var default_vertex="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",default_fragment="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";function ShaderMaterial(e){Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=default_vertex,this.fragmentShader=default_fragment,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}function Camera(){Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new Matrix4,this.projectionMatrix=new Matrix4,this.projectionMatrixInverse=new Matrix4}function PerspectiveCamera(e=50,t=1,r=.1,n=2e3){Camera.call(this),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=r,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}ShaderMaterial.prototype=Object.create(Material.prototype),ShaderMaterial.prototype.constructor=ShaderMaterial,ShaderMaterial.prototype.isShaderMaterial=!0,ShaderMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=cloneUniforms(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this},ShaderMaterial.prototype.toJSON=function(e){const t=Material.prototype.toJSON.call(this,e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const n=this.uniforms[r].value;n&&n.isTexture?t.uniforms[r]={type:"t",value:n.toJSON(e).uuid}:n&&n.isColor?t.uniforms[r]={type:"c",value:n.getHex()}:n&&n.isVector2?t.uniforms[r]={type:"v2",value:n.toArray()}:n&&n.isVector3?t.uniforms[r]={type:"v3",value:n.toArray()}:n&&n.isVector4?t.uniforms[r]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?t.uniforms[r]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?t.uniforms[r]={type:"m4",value:n.toArray()}:t.uniforms[r]={value:n}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const r={};for(const e in this.extensions)!0===this.extensions[e]&&(r[e]=!0);return Object.keys(r).length>0&&(t.extensions=r),t},Camera.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Camera,isCamera:!0,copy:function(e,t){return Object3D.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new Vector3),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){Object3D.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(e,t){Object3D.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),PerspectiveCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:PerspectiveCamera,isPerspectiveCamera:!0,copy:function(e,t){return Camera.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){const t=.5*this.getFilmHeight()/e;this.fov=2*MathUtils.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){const e=Math.tan(.5*MathUtils.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*MathUtils.RAD2DEG*Math.atan(Math.tan(.5*MathUtils.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,r,n,i,o){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=this.near;let t=e*Math.tan(.5*MathUtils.DEG2RAD*this.fov)/this.zoom,r=2*t,n=this.aspect*r,i=-.5*n;const o=this.view;if(null!==this.view&&this.view.enabled){const e=o.fullWidth,a=o.fullHeight;i+=o.offsetX*n/e,t-=o.offsetY*r/a,n*=o.width/e,r*=o.height/a}const a=this.filmOffset;0!==a&&(i+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+n,t,t-r,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){const t=Object3D.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});const fov=90,aspect=1;function CubeCamera(e,t,r){if(Object3D.call(this),this.type="CubeCamera",!0!==r.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=r;const n=new PerspectiveCamera(90,1,e,t);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new Vector3(1,0,0)),this.add(n);const i=new PerspectiveCamera(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new Vector3(-1,0,0)),this.add(i);const o=new PerspectiveCamera(90,1,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new Vector3(0,1,0)),this.add(o);const a=new PerspectiveCamera(90,1,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new Vector3(0,-1,0)),this.add(a);const s=new PerspectiveCamera(90,1,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new Vector3(0,0,1)),this.add(s);const l=new PerspectiveCamera(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new Vector3(0,0,-1)),this.add(l),this.update=function(e,t){null===this.parent&&this.updateMatrixWorld();const c=e.xr.enabled,u=e.getRenderTarget();e.xr.enabled=!1;const h=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,e.setRenderTarget(r,0),e.render(t,n),e.setRenderTarget(r,1),e.render(t,i),e.setRenderTarget(r,2),e.render(t,o),e.setRenderTarget(r,3),e.render(t,a),e.setRenderTarget(r,4),e.render(t,s),r.texture.generateMipmaps=h,e.setRenderTarget(r,5),e.render(t,l),e.setRenderTarget(u),e.xr.enabled=c}}function CubeTexture(e,t,r,n,i,o,a,s,l,c){e=void 0!==e?e:[],t=void 0!==t?t:301,a=void 0!==a?a:1022,Texture.call(this,e,t,r,n,i,o,a,s,l,c),this.flipY=!1,this._needsFlipEnvMap=!0}function WebGLCubeRenderTarget(e,t,r){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=r),WebGLRenderTarget.call(this,e,e,t),t=t||{},this.texture=new CubeTexture(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture._needsFlipEnvMap=!1}function DataTexture(e,t,r,n,i,o,a,s,l,c,u,h){Texture.call(this,null,o,a,s,l,c,n,i,u,h),this.image={data:e||null,width:t||1,height:r||1},this.magFilter=void 0!==l?l:1003,this.minFilter=void 0!==c?c:1003,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}CubeCamera.prototype=Object.create(Object3D.prototype),CubeCamera.prototype.constructor=CubeCamera,CubeTexture.prototype=Object.create(Texture.prototype),CubeTexture.prototype.constructor=CubeTexture,CubeTexture.prototype.isCubeTexture=!0,Object.defineProperty(CubeTexture.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}}),WebGLCubeRenderTarget.prototype=Object.create(WebGLRenderTarget.prototype),WebGLCubeRenderTarget.prototype.constructor=WebGLCubeRenderTarget,WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget=!0,WebGLCubeRenderTarget.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=1023,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t",fragmentShader:"\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t"},n=new BoxBufferGeometry(5,5,5),i=new ShaderMaterial({name:"CubemapFromEquirect",uniforms:cloneUniforms(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:1,blending:0});i.uniforms.tEquirect.value=t;const o=new Mesh(n,i),a=t.minFilter;1008===t.minFilter&&(t.minFilter=1006);return new CubeCamera(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this},WebGLCubeRenderTarget.prototype.clear=function(e,t,r,n){const i=e.getRenderTarget();for(let i=0;i<6;i++)e.setRenderTarget(this,i),e.clear(t,r,n);e.setRenderTarget(i)},DataTexture.prototype=Object.create(Texture.prototype),DataTexture.prototype.constructor=DataTexture,DataTexture.prototype.isDataTexture=!0;const _sphere$1=new Sphere,_vector$5=new Vector3;class Frustum{constructor(e,t,r,n,i,o){this.planes=[void 0!==e?e:new Plane,void 0!==t?t:new Plane,void 0!==r?r:new Plane,void 0!==n?n:new Plane,void 0!==i?i:new Plane,void 0!==o?o:new Plane]}set(e,t,r,n,i,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(r),a[3].copy(n),a[4].copy(i),a[5].copy(o),this}clone(){return(new this.constructor).copy(this)}copy(e){const t=this.planes;for(let r=0;r<6;r++)t[r].copy(e.planes[r]);return this}setFromProjectionMatrix(e){const t=this.planes,r=e.elements,n=r[0],i=r[1],o=r[2],a=r[3],s=r[4],l=r[5],c=r[6],u=r[7],h=r[8],d=r[9],p=r[10],m=r[11],f=r[12],g=r[13],_=r[14],y=r[15];return t[0].setComponents(a-n,u-s,m-h,y-f).normalize(),t[1].setComponents(a+n,u+s,m+h,y+f).normalize(),t[2].setComponents(a+i,u+l,m+d,y+g).normalize(),t[3].setComponents(a-i,u-l,m-d,y-g).normalize(),t[4].setComponents(a-o,u-c,m-p,y-_).normalize(),t[5].setComponents(a+o,u+c,m+p,y+_).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),_sphere$1.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$1)}intersectsSprite(e){return _sphere$1.center.set(0,0,0),_sphere$1.radius=.7071067811865476,_sphere$1.applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$1)}intersectsSphere(e){const t=this.planes,r=e.center,n=-e.radius;for(let e=0;e<6;e++){if(t[e].distanceToPoint(r)<n)return!1}return!0}intersectsBox(e){const t=this.planes;for(let r=0;r<6;r++){const n=t[r];if(_vector$5.x=n.normal.x>0?e.max.x:e.min.x,_vector$5.y=n.normal.y>0?e.max.y:e.min.y,_vector$5.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(_vector$5)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let r=0;r<6;r++)if(t[r].distanceToPoint(e)<0)return!1;return!0}}function WebGLAnimation(){let e=null,t=!1,r=null,n=null;function onAnimationFrame(t,i){r(t,i),n=e.requestAnimationFrame(onAnimationFrame)}return{start:function(){!0!==t&&null!==r&&(n=e.requestAnimationFrame(onAnimationFrame),t=!0)},stop:function(){e.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(e){r=e},setContext:function(t){e=t}}}function WebGLAttributes(e,t){const r=t.isWebGL2,n=new WeakMap;return{get:function get(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function remove(t){t.isInterleavedBufferAttribute&&(t=t.data);const r=n.get(t);r&&(e.deleteBuffer(r.buffer),n.delete(t))},update:function update(t,i){if(t.isGLBufferAttribute){const e=n.get(t);return void((!e||e.version<t.version)&&n.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const o=n.get(t);void 0===o?n.set(t,function createBuffer(t,n){const i=t.array,o=t.usage,a=e.createBuffer();e.bindBuffer(n,a),e.bufferData(n,i,o),t.onUploadCallback();let s=5126;return i instanceof Float32Array?s=5126:i instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):i instanceof Uint16Array?t.isFloat16BufferAttribute?r?s=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):s=5123:i instanceof Int16Array?s=5122:i instanceof Uint32Array?s=5125:i instanceof Int32Array?s=5124:i instanceof Int8Array?s=5120:i instanceof Uint8Array&&(s=5121),{buffer:a,type:s,bytesPerElement:i.BYTES_PER_ELEMENT,version:t.version}}(t,i)):o.version<t.version&&(!function updateBuffer(t,n,i){const o=n.array,a=n.updateRange;e.bindBuffer(i,t),-1===a.count?e.bufferSubData(i,0,o):(r?e.bufferSubData(i,a.offset*o.BYTES_PER_ELEMENT,o,a.offset,a.count):e.bufferSubData(i,a.offset*o.BYTES_PER_ELEMENT,o.subarray(a.offset,a.offset+a.count)),a.count=-1)}(o.buffer,t,i),o.version=t.version)}}}class PlaneBufferGeometry extends BufferGeometry{constructor(e=1,t=1,r=1,n=1){super(),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n};const i=e/2,o=t/2,a=Math.floor(r),s=Math.floor(n),l=a+1,c=s+1,u=e/a,h=t/s,d=[],p=[],m=[],f=[];for(let e=0;e<c;e++){const t=e*h-o;for(let r=0;r<l;r++){const n=r*u-i;p.push(n,-t,0),m.push(0,0,1),f.push(r/a),f.push(1-e/s)}}for(let e=0;e<s;e++)for(let t=0;t<a;t++){const r=t+l*e,n=t+l*(e+1),i=t+1+l*(e+1),o=t+1+l*e;d.push(r,n,o),d.push(n,i,o)}this.setIndex(d),this.setAttribute("position",new Float32BufferAttribute(p,3)),this.setAttribute("normal",new Float32BufferAttribute(m,3)),this.setAttribute("uv",new Float32BufferAttribute(f,2))}}var alphamap_fragment="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex="vec3 transformed = vec3( position );",beginnormal_vertex="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs="vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment="#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex="#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex="#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment="gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment="\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_vertex="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex="#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex="#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",envmap_physical_pars_fragment="#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",lights_toon_fragment="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment="struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin="#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin="#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment="#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment="#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment="#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert="#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert="#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag="#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert="#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert="#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";const ShaderChunk={alphamap_fragment:alphamap_fragment,alphamap_pars_fragment:alphamap_pars_fragment,alphatest_fragment:alphatest_fragment,aomap_fragment:aomap_fragment,aomap_pars_fragment:aomap_pars_fragment,begin_vertex:begin_vertex,beginnormal_vertex:beginnormal_vertex,bsdfs:bsdfs,bumpmap_pars_fragment:bumpmap_pars_fragment,clipping_planes_fragment:clipping_planes_fragment,clipping_planes_pars_fragment:clipping_planes_pars_fragment,clipping_planes_pars_vertex:clipping_planes_pars_vertex,clipping_planes_vertex:clipping_planes_vertex,color_fragment:color_fragment,color_pars_fragment:color_pars_fragment,color_pars_vertex:color_pars_vertex,color_vertex:color_vertex,common:common,cube_uv_reflection_fragment:cube_uv_reflection_fragment,defaultnormal_vertex:defaultnormal_vertex,displacementmap_pars_vertex:displacementmap_pars_vertex,displacementmap_vertex:displacementmap_vertex,emissivemap_fragment:emissivemap_fragment,emissivemap_pars_fragment:emissivemap_pars_fragment,encodings_fragment:encodings_fragment,encodings_pars_fragment:encodings_pars_fragment,envmap_fragment:envmap_fragment,envmap_common_pars_fragment:envmap_common_pars_fragment,envmap_pars_fragment:envmap_pars_fragment,envmap_pars_vertex:envmap_pars_vertex,envmap_physical_pars_fragment:envmap_physical_pars_fragment,envmap_vertex:envmap_vertex,fog_vertex:fog_vertex,fog_pars_vertex:fog_pars_vertex,fog_fragment:fog_fragment,fog_pars_fragment:fog_pars_fragment,gradientmap_pars_fragment:gradientmap_pars_fragment,lightmap_fragment:lightmap_fragment,lightmap_pars_fragment:lightmap_pars_fragment,lights_lambert_vertex:lights_lambert_vertex,lights_pars_begin:lights_pars_begin,lights_toon_fragment:lights_toon_fragment,lights_toon_pars_fragment:lights_toon_pars_fragment,lights_phong_fragment:lights_phong_fragment,lights_phong_pars_fragment:lights_phong_pars_fragment,lights_physical_fragment:lights_physical_fragment,lights_physical_pars_fragment:lights_physical_pars_fragment,lights_fragment_begin:lights_fragment_begin,lights_fragment_maps:lights_fragment_maps,lights_fragment_end:lights_fragment_end,logdepthbuf_fragment:logdepthbuf_fragment,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex,logdepthbuf_vertex:logdepthbuf_vertex,map_fragment:map_fragment,map_pars_fragment:map_pars_fragment,map_particle_fragment:map_particle_fragment,map_particle_pars_fragment:map_particle_pars_fragment,metalnessmap_fragment:metalnessmap_fragment,metalnessmap_pars_fragment:metalnessmap_pars_fragment,morphnormal_vertex:morphnormal_vertex,morphtarget_pars_vertex:morphtarget_pars_vertex,morphtarget_vertex:morphtarget_vertex,normal_fragment_begin:normal_fragment_begin,normal_fragment_maps:normal_fragment_maps,normalmap_pars_fragment:normalmap_pars_fragment,clearcoat_normal_fragment_begin:clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps:clearcoat_normal_fragment_maps,clearcoat_pars_fragment:clearcoat_pars_fragment,packing:packing,premultiplied_alpha_fragment:premultiplied_alpha_fragment,project_vertex:project_vertex,dithering_fragment:dithering_fragment,dithering_pars_fragment:dithering_pars_fragment,roughnessmap_fragment:roughnessmap_fragment,roughnessmap_pars_fragment:roughnessmap_pars_fragment,shadowmap_pars_fragment:shadowmap_pars_fragment,shadowmap_pars_vertex:shadowmap_pars_vertex,shadowmap_vertex:shadowmap_vertex,shadowmask_pars_fragment:shadowmask_pars_fragment,skinbase_vertex:skinbase_vertex,skinning_pars_vertex:skinning_pars_vertex,skinning_vertex:skinning_vertex,skinnormal_vertex:skinnormal_vertex,specularmap_fragment:specularmap_fragment,specularmap_pars_fragment:specularmap_pars_fragment,tonemapping_fragment:tonemapping_fragment,tonemapping_pars_fragment:tonemapping_pars_fragment,transmissionmap_fragment:transmissionmap_fragment,transmissionmap_pars_fragment:transmissionmap_pars_fragment,uv_pars_fragment:uv_pars_fragment,uv_pars_vertex:uv_pars_vertex,uv_vertex:uv_vertex,uv2_pars_fragment:uv2_pars_fragment,uv2_pars_vertex:uv2_pars_vertex,uv2_vertex:uv2_vertex,worldpos_vertex:worldpos_vertex,background_frag:background_frag,background_vert:background_vert,cube_frag:cube_frag,cube_vert:cube_vert,depth_frag:depth_frag,depth_vert:depth_vert,distanceRGBA_frag:distanceRGBA_frag,distanceRGBA_vert:distanceRGBA_vert,equirect_frag:equirect_frag,equirect_vert:equirect_vert,linedashed_frag:linedashed_frag,linedashed_vert:linedashed_vert,meshbasic_frag:meshbasic_frag,meshbasic_vert:meshbasic_vert,meshlambert_frag:meshlambert_frag,meshlambert_vert:meshlambert_vert,meshmatcap_frag:meshmatcap_frag,meshmatcap_vert:meshmatcap_vert,meshtoon_frag:meshtoon_frag,meshtoon_vert:meshtoon_vert,meshphong_frag:meshphong_frag,meshphong_vert:meshphong_vert,meshphysical_frag:meshphysical_frag,meshphysical_vert:meshphysical_vert,normal_frag:normal_frag,normal_vert:normal_vert,points_frag:points_frag,points_vert:points_vert,shadow_frag:shadow_frag,shadow_vert:shadow_vert,sprite_frag:sprite_frag,sprite_vert:sprite_vert},UniformsLib={common:{diffuse:{value:new Color(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Matrix3},uv2Transform:{value:new Matrix3},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3}},sprite:{diffuse:{value:new Color(15658734)},opacity:{value:1},center:{value:new Vector2(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3}}},ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.normal_vert,fragmentShader:ShaderChunk.normal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},cube:{uniforms:mergeUniforms([UniformsLib.envmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};function WebGLBackground(e,t,r,n,i){const o=new Color(0);let a,s,l=0,c=null,u=0,h=null;function setClear(e,t){r.buffers.color.setClear(e.r,e.g,e.b,t,i)}return{getClearColor:function(){return o},setClearColor:function(e,t=1){o.set(e),l=t,setClear(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(e){l=e,setClear(o,l)},render:function render(r,i,d,p){let m=!0===i.isScene?i.background:null;m&&m.isTexture&&(m=t.get(m));const f=e.xr,g=f.getSession&&f.getSession();g&&"additive"===g.environmentBlendMode&&(m=null),null===m?setClear(o,l):m&&m.isColor&&(setClear(m,1),p=!0),(e.autoClear||p)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLCubeRenderTarget||306===m.mapping)?(void 0===s&&(s=new Mesh(new BoxBufferGeometry(1,1,1),new ShaderMaterial({name:"BackgroundCubeMaterial",uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),s.geometry.deleteAttribute("uv"),s.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(s.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(s)),m.isWebGLCubeRenderTarget&&(m=m.texture),s.material.uniforms.envMap.value=m,s.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,c===m&&u===m.version&&h===e.toneMapping||(s.material.needsUpdate=!0,c=m,u=m.version,h=e.toneMapping),r.unshift(s,s.geometry,s.material,0,0,null)):m&&m.isTexture&&(void 0===a&&(a=new Mesh(new PlaneBufferGeometry(2,2),new ShaderMaterial({name:"BackgroundMaterial",uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(a)),a.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),a.material.uniforms.uvTransform.value.copy(m.matrix),c===m&&u===m.version&&h===e.toneMapping||(a.material.needsUpdate=!0,c=m,u=m.version,h=e.toneMapping),r.unshift(a,a.geometry,a.material,0,0,null))}}}function WebGLBindingStates(e,t,r,n){const i=e.getParameter(34921),o=n.isWebGL2?null:t.get("OES_vertex_array_object"),a=n.isWebGL2||null!==o,s={},l=createBindingState(null);let c=l;function bindVertexArrayObject(t){return n.isWebGL2?e.bindVertexArray(t):o.bindVertexArrayOES(t)}function deleteVertexArrayObject(t){return n.isWebGL2?e.deleteVertexArray(t):o.deleteVertexArrayOES(t)}function createBindingState(e){const t=[],r=[],n=[];for(let e=0;e<i;e++)t[e]=0,r[e]=0,n[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:r,attributeDivisors:n,object:e,attributes:{},index:null}}function initAttributes(){const e=c.newAttributes;for(let t=0,r=e.length;t<r;t++)e[t]=0}function enableAttribute(e){enableAttributeAndDivisor(e,0)}function enableAttributeAndDivisor(r,i){const o=c.newAttributes,a=c.enabledAttributes,s=c.attributeDivisors;if(o[r]=1,0===a[r]&&(e.enableVertexAttribArray(r),a[r]=1),s[r]!==i){(n.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](r,i),s[r]=i}}function disableUnusedAttributes(){const t=c.newAttributes,r=c.enabledAttributes;for(let n=0,i=r.length;n<i;n++)r[n]!==t[n]&&(e.disableVertexAttribArray(n),r[n]=0)}function vertexAttribPointer(t,r,i,o,a,s){!0!==n.isWebGL2||5124!==i&&5125!==i?e.vertexAttribPointer(t,r,i,o,a,s):e.vertexAttribIPointer(t,r,i,a,s)}function reset(){resetDefaultState(),c!==l&&(c=l,bindVertexArrayObject(c.object))}function resetDefaultState(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function setup(i,l,u,h,d){let p=!1;if(a){const t=function getBindingState(t,r,i){const a=!0===i.wireframe;let l=s[t.id];void 0===l&&(l={},s[t.id]=l);let c=l[r.id];void 0===c&&(c={},l[r.id]=c);let u=c[a];void 0===u&&(u=createBindingState(function createVertexArrayObject(){return n.isWebGL2?e.createVertexArray():o.createVertexArrayOES()}()),c[a]=u);return u}(h,u,l);c!==t&&(c=t,bindVertexArrayObject(c.object)),p=function needsUpdate(e,t){const r=c.attributes,n=e.attributes;let i=0;for(const e in n){const t=r[e],o=n[e];if(void 0===t)return!0;if(t.attribute!==o)return!0;if(t.data!==o.data)return!0;i++}return c.attributesNum!==i||c.index!==t}(h,d),p&&function saveCache(e,t){const r={},n=e.attributes;let i=0;for(const e in n){const t=n[e],o={};o.attribute=t,t.data&&(o.data=t.data),r[e]=o,i++}c.attributes=r,c.attributesNum=i,c.index=t}(h,d)}else{const e=!0===l.wireframe;c.geometry===h.id&&c.program===u.id&&c.wireframe===e||(c.geometry=h.id,c.program=u.id,c.wireframe=e,p=!0)}!0===i.isInstancedMesh&&(p=!0),null!==d&&r.update(d,34963),p&&(!function setupVertexAttributes(i,o,a,s){if(!1===n.isWebGL2&&(i.isInstancedMesh||s.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;initAttributes();const l=s.attributes,c=a.getAttributes(),u=o.defaultAttributeValues;for(const t in c){const n=c[t];if(n>=0){const o=l[t];if(void 0!==o){const t=o.normalized,i=o.itemSize,a=r.get(o);if(void 0===a)continue;const l=a.buffer,c=a.type,u=a.bytesPerElement;if(o.isInterleavedBufferAttribute){const r=o.data,a=r.stride,h=o.offset;r&&r.isInstancedInterleavedBuffer?(enableAttributeAndDivisor(n,r.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=r.meshPerAttribute*r.count)):enableAttribute(n),e.bindBuffer(34962,l),vertexAttribPointer(n,i,c,t,a*u,h*u)}else o.isInstancedBufferAttribute?(enableAttributeAndDivisor(n,o.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=o.meshPerAttribute*o.count)):enableAttribute(n),e.bindBuffer(34962,l),vertexAttribPointer(n,i,c,t,0,0)}else if("instanceMatrix"===t){const t=r.get(i.instanceMatrix);if(void 0===t)continue;const o=t.buffer,a=t.type;enableAttributeAndDivisor(n+0,1),enableAttributeAndDivisor(n+1,1),enableAttributeAndDivisor(n+2,1),enableAttributeAndDivisor(n+3,1),e.bindBuffer(34962,o),e.vertexAttribPointer(n+0,4,a,!1,64,0),e.vertexAttribPointer(n+1,4,a,!1,64,16),e.vertexAttribPointer(n+2,4,a,!1,64,32),e.vertexAttribPointer(n+3,4,a,!1,64,48)}else if("instanceColor"===t){const t=r.get(i.instanceColor);if(void 0===t)continue;const o=t.buffer,a=t.type;enableAttributeAndDivisor(n,1),e.bindBuffer(34962,o),e.vertexAttribPointer(n,3,a,!1,12,0)}else if(void 0!==u){const r=u[t];if(void 0!==r)switch(r.length){case 2:e.vertexAttrib2fv(n,r);break;case 3:e.vertexAttrib3fv(n,r);break;case 4:e.vertexAttrib4fv(n,r);break;default:e.vertexAttrib1fv(n,r)}}}}disableUnusedAttributes()}(i,l,u,h),null!==d&&e.bindBuffer(34963,r.get(d).buffer))},reset:reset,resetDefaultState:resetDefaultState,dispose:function dispose(){reset();for(const e in s){const t=s[e];for(const e in t){const r=t[e];for(const e in r)deleteVertexArrayObject(r[e].object),delete r[e];delete t[e]}delete s[e]}},releaseStatesOfGeometry:function releaseStatesOfGeometry(e){if(void 0===s[e.id])return;const t=s[e.id];for(const e in t){const r=t[e];for(const e in r)deleteVertexArrayObject(r[e].object),delete r[e];delete t[e]}delete s[e.id]},releaseStatesOfProgram:function releaseStatesOfProgram(e){for(const t in s){const r=s[t];if(void 0===r[e.id])continue;const n=r[e.id];for(const e in n)deleteVertexArrayObject(n[e].object),delete n[e];delete r[e.id]}},initAttributes:initAttributes,enableAttribute:enableAttribute,disableUnusedAttributes:disableUnusedAttributes}}function WebGLBufferRenderer(e,t,r,n){const i=n.isWebGL2;let o;this.setMode=function setMode(e){o=e},this.render=function render(t,n){e.drawArrays(o,t,n),r.update(n,o,1)},this.renderInstances=function renderInstances(n,a,s){if(0===s)return;let l,c;if(i)l=e,c="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[c](o,n,a,s),r.update(a,o,s)}}function WebGLCapabilities(e,t,r){let n;function getMaxPrecision(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const i="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let o=void 0!==r.precision?r.precision:"highp";const a=getMaxPrecision(o);a!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",a,"instead."),o=a);const s=!0===r.logarithmicDepthBuffer,l=e.getParameter(34930),c=e.getParameter(35660),u=e.getParameter(3379),h=e.getParameter(34076),d=e.getParameter(34921),p=e.getParameter(36347),m=e.getParameter(36348),f=e.getParameter(36349),g=c>0,_=i||!!t.get("OES_texture_float");return{isWebGL2:i,getMaxAnisotropy:function getMaxAnisotropy(){if(void 0!==n)return n;const r=t.get("EXT_texture_filter_anisotropic");return n=null!==r?e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,n},getMaxPrecision:getMaxPrecision,precision:o,logarithmicDepthBuffer:s,maxTextures:l,maxVertexTextures:c,maxTextureSize:u,maxCubemapSize:h,maxAttributes:d,maxVertexUniforms:p,maxVaryings:m,maxFragmentUniforms:f,vertexTextures:g,floatFragmentTextures:_,floatVertexTextures:g&&_,maxSamples:i?e.getParameter(36183):0}}function WebGLClipping(e){const t=this;let r=null,n=0,i=!1,o=!1;const a=new Plane,s=new Matrix3,l={value:null,needsUpdate:!1};function resetGlobalState(){l.value!==r&&(l.value=r,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function projectPlanes(e,r,n,i){const o=null!==e?e.length:0;let c=null;if(0!==o){if(c=l.value,!0!==i||null===c){const t=n+4*o,i=r.matrixWorldInverse;s.getNormalMatrix(i),(null===c||c.length<t)&&(c=new Float32Array(t));for(let t=0,r=n;t!==o;++t,r+=4)a.copy(e[t]).applyMatrix4(i,s),a.normal.toArray(c,r),c[r+3]=a.constant}l.value=c,l.needsUpdate=!0}return t.numPlanes=o,t.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,o){const a=0!==e.length||t||0!==n||i;return i=t,r=projectPlanes(e,o,0),n=e.length,a},this.beginShadows=function(){o=!0,projectPlanes(null)},this.endShadows=function(){o=!1,resetGlobalState()},this.setState=function(t,a,s){const c=t.clippingPlanes,u=t.clipIntersection,h=t.clipShadows,d=e.get(t);if(!i||null===c||0===c.length||o&&!h)o?projectPlanes(null):resetGlobalState();else{const e=o?0:n,t=4*e;let i=d.clippingState||null;l.value=i,i=projectPlanes(c,a,t,s);for(let e=0;e!==t;++e)i[e]=r[e];d.clippingState=i,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=e}}}function WebGLCubeMaps(e){let t=new WeakMap;function mapTextureMapping(e,t){return 303===t?e.mapping=301:304===t&&(e.mapping=302),e}function onTextureDispose(e){const r=e.target;r.removeEventListener("dispose",onTextureDispose);const n=t.get(r);void 0!==n&&(t.delete(r),n.dispose())}return{get:function get(r){if(r&&r.isTexture){const n=r.mapping;if(303===n||304===n){if(t.has(r)){return mapTextureMapping(t.get(r).texture,r.mapping)}{const n=r.image;if(n&&n.height>0){const i=e.getRenderList(),o=e.getRenderTarget(),a=new WebGLCubeRenderTarget(n.height/2);return a.fromEquirectangularTexture(e,r),t.set(r,a),e.setRenderTarget(o),e.setRenderList(i),r.addEventListener("dispose",onTextureDispose),mapTextureMapping(a.texture,r.mapping)}return null}}}return r},dispose:function dispose(){t=new WeakMap}}}function WebGLExtensions(e){const t={};return{has:function(r){if(void 0!==t[r])return null!==t[r];let n;switch(r){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(r)}return t[r]=n,null!==n},get:function(e){return this.has(e)||console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t[e]}}}function WebGLGeometries(e,t,r,n){const i=new WeakMap,o=new WeakMap;function onGeometryDispose(e){const a=e.target,s=i.get(a);null!==s.index&&t.remove(s.index);for(const e in s.attributes)t.remove(s.attributes[e]);a.removeEventListener("dispose",onGeometryDispose),i.delete(a);const l=o.get(s);l&&(t.remove(l),o.delete(s)),n.releaseStatesOfGeometry(s),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,r.memory.geometries--}function updateWireframeAttribute(e){const r=[],n=e.index,i=e.attributes.position;let a=0;if(null!==n){const e=n.array;a=n.version;for(let t=0,n=e.length;t<n;t+=3){const n=e[t+0],i=e[t+1],o=e[t+2];r.push(n,i,i,o,o,n)}}else{const e=i.array;a=i.version;for(let t=0,n=e.length/3-1;t<n;t+=3){const e=t+0,n=t+1,i=t+2;r.push(e,n,n,i,i,e)}}const s=new(arrayMax(r)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(r,1);s.version=a;const l=o.get(e);l&&t.remove(l),o.set(e,s)}return{get:function get(e,t){let n=i.get(t);return n||(t.addEventListener("dispose",onGeometryDispose),t.isBufferGeometry?n=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=(new BufferGeometry).setFromObject(e)),n=t._bufferGeometry),i.set(t,n),r.memory.geometries++,n)},update:function update(e){const r=e.attributes;for(const e in r)t.update(r[e],34962);const n=e.morphAttributes;for(const e in n){const r=n[e];for(let e=0,n=r.length;e<n;e++)t.update(r[e],34962)}},getWireframeAttribute:function getWireframeAttribute(e){const t=o.get(e);if(t){const r=e.index;null!==r&&t.version<r.version&&updateWireframeAttribute(e)}else updateWireframeAttribute(e);return o.get(e)}}}function WebGLIndexedBufferRenderer(e,t,r,n){const i=n.isWebGL2;let o,a,s;this.setMode=function setMode(e){o=e},this.setIndex=function setIndex(e){a=e.type,s=e.bytesPerElement},this.render=function render(t,n){e.drawElements(o,n,a,t*s),r.update(n,o,1)},this.renderInstances=function renderInstances(n,l,c){if(0===c)return;let u,h;if(i)u=e,h="drawElementsInstanced";else if(u=t.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===u)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[h](o,l,a,n*s,c),r.update(l,o,c)}}function WebGLInfo(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function reset(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function update(e,r,n){switch(t.calls++,r){case 4:t.triangles+=n*(e/3);break;case 1:t.lines+=n*(e/2);break;case 3:t.lines+=n*(e-1);break;case 2:t.lines+=n*e;break;case 0:t.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}}}function numericalSort(e,t){return e[0]-t[0]}function absNumericalSort(e,t){return Math.abs(t[1])-Math.abs(e[1])}function WebGLMorphtargets(e){const t={},r=new Float32Array(8),n=[];for(let e=0;e<8;e++)n[e]=[e,0];return{update:function update(i,o,a,s){const l=i.morphTargetInfluences,c=void 0===l?0:l.length;let u=t[o.id];if(void 0===u){u=[];for(let e=0;e<c;e++)u[e]=[e,0];t[o.id]=u}for(let e=0;e<c;e++){const t=u[e];t[0]=e,t[1]=l[e]}u.sort(absNumericalSort);for(let e=0;e<8;e++)e<c&&u[e][1]?(n[e][0]=u[e][0],n[e][1]=u[e][1]):(n[e][0]=Number.MAX_SAFE_INTEGER,n[e][1]=0);n.sort(numericalSort);const h=a.morphTargets&&o.morphAttributes.position,d=a.morphNormals&&o.morphAttributes.normal;let p=0;for(let e=0;e<8;e++){const t=n[e],i=t[0],a=t[1];i!==Number.MAX_SAFE_INTEGER&&a?(h&&o.getAttribute("morphTarget"+e)!==h[i]&&o.setAttribute("morphTarget"+e,h[i]),d&&o.getAttribute("morphNormal"+e)!==d[i]&&o.setAttribute("morphNormal"+e,d[i]),r[e]=a,p+=a):(h&&!0===o.hasAttribute("morphTarget"+e)&&o.deleteAttribute("morphTarget"+e),d&&!0===o.hasAttribute("morphNormal"+e)&&o.deleteAttribute("morphNormal"+e),r[e]=0)}const m=o.morphTargetsRelative?1:1-p;s.getUniforms().setValue(e,"morphTargetBaseInfluence",m),s.getUniforms().setValue(e,"morphTargetInfluences",r)}}}function WebGLObjects(e,t,r,n){let i=new WeakMap;function onInstancedMeshDispose(e){const t=e.target;t.removeEventListener("dispose",onInstancedMeshDispose),r.remove(t.instanceMatrix),null!==t.instanceColor&&r.remove(t.instanceColor)}return{update:function update(e){const o=n.render.frame,a=e.geometry,s=t.get(e,a);return i.get(s)!==o&&(a.isGeometry&&s.updateFromObject(e),t.update(s),i.set(s,o)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",onInstancedMeshDispose)&&e.addEventListener("dispose",onInstancedMeshDispose),r.update(e.instanceMatrix,34962),null!==e.instanceColor&&r.update(e.instanceColor,34962)),s},dispose:function dispose(){i=new WeakMap}}}function DataTexture2DArray(e=null,t=1,r=1,n=1){Texture.call(this,null),this.image={data:e,width:t,height:r,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function DataTexture3D(e=null,t=1,r=1,n=1){Texture.call(this,null),this.image={data:e,width:t,height:r,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Color(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},DataTexture2DArray.prototype=Object.create(Texture.prototype),DataTexture2DArray.prototype.constructor=DataTexture2DArray,DataTexture2DArray.prototype.isDataTexture2DArray=!0,DataTexture3D.prototype=Object.create(Texture.prototype),DataTexture3D.prototype.constructor=DataTexture3D,DataTexture3D.prototype.isDataTexture3D=!0;const emptyTexture=new Texture,emptyTexture2dArray=new DataTexture2DArray,emptyTexture3d=new DataTexture3D,emptyCubeTexture=new CubeTexture,arrayCacheF32=[],arrayCacheI32=[],mat4array=new Float32Array(16),mat3array=new Float32Array(9),mat2array=new Float32Array(4);function flatten(e,t,r){const n=e[0];if(n<=0||n>0)return e;const i=t*r;let o=arrayCacheF32[i];if(void 0===o&&(o=new Float32Array(i),arrayCacheF32[i]=o),0!==t){n.toArray(o,0);for(let n=1,i=0;n!==t;++n)i+=r,e[n].toArray(o,i)}return o}function arraysEqual(e,t){if(e.length!==t.length)return!1;for(let r=0,n=e.length;r<n;r++)if(e[r]!==t[r])return!1;return!0}function copyArray(e,t){for(let r=0,n=t.length;r<n;r++)e[r]=t[r]}function allocTexUnits(e,t){let r=arrayCacheI32[t];void 0===r&&(r=new Int32Array(t),arrayCacheI32[t]=r);for(let n=0;n!==t;++n)r[n]=e.allocateTextureUnit();return r}function setValueV1f(e,t){const r=this.cache;r[0]!==t&&(e.uniform1f(this.addr,t),r[0]=t)}function setValueV2f(e,t){const r=this.cache;if(void 0!==t.x)r[0]===t.x&&r[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y);else{if(arraysEqual(r,t))return;e.uniform2fv(this.addr,t),copyArray(r,t)}}function setValueV3f(e,t){const r=this.cache;if(void 0!==t.x)r[0]===t.x&&r[1]===t.y&&r[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z);else if(void 0!==t.r)r[0]===t.r&&r[1]===t.g&&r[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),r[0]=t.r,r[1]=t.g,r[2]=t.b);else{if(arraysEqual(r,t))return;e.uniform3fv(this.addr,t),copyArray(r,t)}}function setValueV4f(e,t){const r=this.cache;if(void 0!==t.x)r[0]===t.x&&r[1]===t.y&&r[2]===t.z&&r[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w);else{if(arraysEqual(r,t))return;e.uniform4fv(this.addr,t),copyArray(r,t)}}function setValueM2(e,t){const r=this.cache,n=t.elements;if(void 0===n){if(arraysEqual(r,t))return;e.uniformMatrix2fv(this.addr,!1,t),copyArray(r,t)}else{if(arraysEqual(r,n))return;mat2array.set(n),e.uniformMatrix2fv(this.addr,!1,mat2array),copyArray(r,n)}}function setValueM3(e,t){const r=this.cache,n=t.elements;if(void 0===n){if(arraysEqual(r,t))return;e.uniformMatrix3fv(this.addr,!1,t),copyArray(r,t)}else{if(arraysEqual(r,n))return;mat3array.set(n),e.uniformMatrix3fv(this.addr,!1,mat3array),copyArray(r,n)}}function setValueM4(e,t){const r=this.cache,n=t.elements;if(void 0===n){if(arraysEqual(r,t))return;e.uniformMatrix4fv(this.addr,!1,t),copyArray(r,t)}else{if(arraysEqual(r,n))return;mat4array.set(n),e.uniformMatrix4fv(this.addr,!1,mat4array),copyArray(r,n)}}function setValueT1(e,t,r){const n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.safeSetTexture2D(t||emptyTexture,i)}function setValueT2DArray1(e,t,r){const n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture2DArray(t||emptyTexture2dArray,i)}function setValueT3D1(e,t,r){const n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture3D(t||emptyTexture3d,i)}function setValueT6(e,t,r){const n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.safeSetTextureCube(t||emptyCubeTexture,i)}function setValueV1i(e,t){const r=this.cache;r[0]!==t&&(e.uniform1i(this.addr,t),r[0]=t)}function setValueV2i(e,t){const r=this.cache;arraysEqual(r,t)||(e.uniform2iv(this.addr,t),copyArray(r,t))}function setValueV3i(e,t){const r=this.cache;arraysEqual(r,t)||(e.uniform3iv(this.addr,t),copyArray(r,t))}function setValueV4i(e,t){const r=this.cache;arraysEqual(r,t)||(e.uniform4iv(this.addr,t),copyArray(r,t))}function setValueV1ui(e,t){const r=this.cache;r[0]!==t&&(e.uniform1ui(this.addr,t),r[0]=t)}function getSingularSetter(e){switch(e){case 5126:return setValueV1f;case 35664:return setValueV2f;case 35665:return setValueV3f;case 35666:return setValueV4f;case 35674:return setValueM2;case 35675:return setValueM3;case 35676:return setValueM4;case 5124:case 35670:return setValueV1i;case 35667:case 35671:return setValueV2i;case 35668:case 35672:return setValueV3i;case 35669:case 35673:return setValueV4i;case 5125:return setValueV1ui;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1;case 35679:case 36299:case 36307:return setValueT3D1;case 35680:case 36300:case 36308:case 36293:return setValueT6;case 36289:case 36303:case 36311:case 36292:return setValueT2DArray1}}function setValueV1fArray(e,t){e.uniform1fv(this.addr,t)}function setValueV1iArray(e,t){e.uniform1iv(this.addr,t)}function setValueV2iArray(e,t){e.uniform2iv(this.addr,t)}function setValueV3iArray(e,t){e.uniform3iv(this.addr,t)}function setValueV4iArray(e,t){e.uniform4iv(this.addr,t)}function setValueV2fArray(e,t){const r=flatten(t,this.size,2);e.uniform2fv(this.addr,r)}function setValueV3fArray(e,t){const r=flatten(t,this.size,3);e.uniform3fv(this.addr,r)}function setValueV4fArray(e,t){const r=flatten(t,this.size,4);e.uniform4fv(this.addr,r)}function setValueM2Array(e,t){const r=flatten(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,r)}function setValueM3Array(e,t){const r=flatten(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,r)}function setValueM4Array(e,t){const r=flatten(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,r)}function setValueT1Array(e,t,r){const n=t.length,i=allocTexUnits(r,n);e.uniform1iv(this.addr,i);for(let e=0;e!==n;++e)r.safeSetTexture2D(t[e]||emptyTexture,i[e])}function setValueT6Array(e,t,r){const n=t.length,i=allocTexUnits(r,n);e.uniform1iv(this.addr,i);for(let e=0;e!==n;++e)r.safeSetTextureCube(t[e]||emptyCubeTexture,i[e])}function getPureArraySetter(e){switch(e){case 5126:return setValueV1fArray;case 35664:return setValueV2fArray;case 35665:return setValueV3fArray;case 35666:return setValueV4fArray;case 35674:return setValueM2Array;case 35675:return setValueM3Array;case 35676:return setValueM4Array;case 5124:case 35670:return setValueV1iArray;case 35667:case 35671:return setValueV2iArray;case 35668:case 35672:return setValueV3iArray;case 35669:case 35673:return setValueV4iArray;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1Array;case 35680:case 36300:case 36308:case 36293:return setValueT6Array}}function SingleUniform(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=getSingularSetter(t.type)}function PureArrayUniform(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=getPureArraySetter(t.type)}function StructuredUniform(e){this.id=e,this.seq=[],this.map={}}PureArrayUniform.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),copyArray(t,e)},StructuredUniform.prototype.setValue=function(e,t,r){const n=this.seq;for(let i=0,o=n.length;i!==o;++i){const o=n[i];o.setValue(e,t[o.id],r)}};const RePathPart=/(\w+)(\])?(\[|\.)?/g;function addUniform(e,t){e.seq.push(t),e.map[t.id]=t}function parseUniform(e,t,r){const n=e.name,i=n.length;for(RePathPart.lastIndex=0;;){const o=RePathPart.exec(n),a=RePathPart.lastIndex;let s=o[1];const l="]"===o[2],c=o[3];if(l&&(s|=0),void 0===c||"["===c&&a+2===i){addUniform(r,void 0===c?new SingleUniform(s,e,t):new PureArrayUniform(s,e,t));break}{let e=r.map[s];void 0===e&&(e=new StructuredUniform(s),addUniform(r,e)),r=e}}}function WebGLUniforms(e,t){this.seq=[],this.map={};const r=e.getProgramParameter(t,35718);for(let n=0;n<r;++n){const r=e.getActiveUniform(t,n);parseUniform(r,e.getUniformLocation(t,r.name),this)}}function WebGLShader(e,t,r){const n=e.createShader(t);return e.shaderSource(n,r),e.compileShader(n),n}WebGLUniforms.prototype.setValue=function(e,t,r,n){const i=this.map[t];void 0!==i&&i.setValue(e,r,n)},WebGLUniforms.prototype.setOptional=function(e,t,r){const n=t[r];void 0!==n&&this.setValue(e,r,n)},WebGLUniforms.upload=function(e,t,r,n){for(let i=0,o=t.length;i!==o;++i){const o=t[i],a=r[o.id];!1!==a.needsUpdate&&o.setValue(e,a.value,n)}},WebGLUniforms.seqWithValue=function(e,t){const r=[];for(let n=0,i=e.length;n!==i;++n){const i=e[n];i.id in t&&r.push(i)}return r};let programIdCount=0;function addLineNumbers(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}function getEncodingComponents(e){switch(e){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function getShaderErrors(e,t,r){const n=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();if(n&&""===i)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+r+"\n"+i+addLineNumbers(e.getShaderSource(t))}function getTexelDecodingFunction(e,t){const r=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function getTexelEncodingFunction(e,t){const r=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+r[0]+r[1]+"; }"}function getToneMappingFunction(e,t){let r;switch(t){case 1:r="Linear";break;case 2:r="Reinhard";break;case 3:r="OptimizedCineon";break;case 4:r="ACESFilmic";break;case 5:r="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),r="Linear"}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}function generateExtensions(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(filterEmptyLine).join("\n")}function generateDefines(e){const t=[];for(const r in e){const n=e[r];!1!==n&&t.push("#define "+r+" "+n)}return t.join("\n")}function fetchAttributeLocations(e,t){const r={},n=e.getProgramParameter(t,35721);for(let i=0;i<n;i++){const n=e.getActiveAttrib(t,i).name;r[n]=e.getAttribLocation(t,n)}return r}function filterEmptyLine(e){return""!==e}function replaceLightNums(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function replaceClippingPlaneNums(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const includePattern=/^[ \t]*#include +<([\w\d./]+)>/gm;function resolveIncludes(e){return e.replace(includePattern,includeReplacer)}function includeReplacer(e,t){const r=ShaderChunk[t];if(void 0===r)throw new Error("Can not resolve #include <"+t+">");return resolveIncludes(r)}const deprecatedUnrollLoopPattern=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,unrollLoopPattern=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function unrollLoops(e){return e.replace(unrollLoopPattern,loopReplacer).replace(deprecatedUnrollLoopPattern,deprecatedLoopReplacer)}function deprecatedLoopReplacer(e,t,r,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),loopReplacer(e,t,r,n)}function loopReplacer(e,t,r,n){let i="";for(let e=parseInt(t);e<parseInt(r);e++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function generatePrecision(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function generateShadowMapTypeDefine(e){let t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}function generateEnvMapTypeDefine(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case 301:case 302:t="ENVMAP_TYPE_CUBE";break;case 306:case 307:t="ENVMAP_TYPE_CUBE_UV"}return t}function generateEnvMapModeDefine(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case 302:case 307:t="ENVMAP_MODE_REFRACTION"}return t}function generateEnvMapBlendingDefine(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}function WebGLProgram(e,t,r,n){const i=e.getContext(),o=r.defines;let a=r.vertexShader,s=r.fragmentShader;const l=generateShadowMapTypeDefine(r),c=generateEnvMapTypeDefine(r),u=generateEnvMapModeDefine(r),h=generateEnvMapBlendingDefine(r),d=e.gammaFactor>0?e.gammaFactor:1,p=r.isWebGL2?"":generateExtensions(r),m=generateDefines(o),f=i.createProgram();let g,_,y=r.glslVersion?"#version "+r.glslVersion+"\n":"";r.isRawShaderMaterial?(g=[m].filter(filterEmptyLine).join("\n"),g.length>0&&(g+="\n"),_=[p,m].filter(filterEmptyLine).join("\n"),_.length>0&&(_+="\n")):(g=[generatePrecision(r),"#define SHADER_NAME "+r.shaderName,m,r.instancing?"#define USE_INSTANCING":"",r.instancingColor?"#define USE_INSTANCING_COLOR":"",r.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+r.maxBones,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+u:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.useVertexTexture?"#define BONE_TEXTURE":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+l:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(filterEmptyLine).join("\n"),_=[p,generatePrecision(r),"#define SHADER_NAME "+r.shaderName,m,r.alphaTest?"#define ALPHATEST "+r.alphaTest+(r.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+c:"",r.envMap?"#define "+u:"",r.envMap?"#define "+h:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.sheen?"#define USE_SHEEN":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors||r.instancingColor?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+l:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==r.toneMapping?"#define TONE_MAPPING":"",0!==r.toneMapping?ShaderChunk.tonemapping_pars_fragment:"",0!==r.toneMapping?getToneMappingFunction("toneMapping",r.toneMapping):"",r.dithering?"#define DITHERING":"",ShaderChunk.encodings_pars_fragment,r.map?getTexelDecodingFunction("mapTexelToLinear",r.mapEncoding):"",r.matcap?getTexelDecodingFunction("matcapTexelToLinear",r.matcapEncoding):"",r.envMap?getTexelDecodingFunction("envMapTexelToLinear",r.envMapEncoding):"",r.emissiveMap?getTexelDecodingFunction("emissiveMapTexelToLinear",r.emissiveMapEncoding):"",r.lightMap?getTexelDecodingFunction("lightMapTexelToLinear",r.lightMapEncoding):"",getTexelEncodingFunction("linearToOutputTexel",r.outputEncoding),r.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(filterEmptyLine).join("\n")),a=resolveIncludes(a),a=replaceLightNums(a,r),a=replaceClippingPlaneNums(a,r),s=resolveIncludes(s),s=replaceLightNums(s,r),s=replaceClippingPlaneNums(s,r),a=unrollLoops(a),s=unrollLoops(s),r.isWebGL2&&!0!==r.isRawShaderMaterial&&(y="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,_=["#define varying in",r.glslVersion===GLSL3?"":"out highp vec4 pc_fragColor;",r.glslVersion===GLSL3?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+_);const x=y+_+s,b=WebGLShader(i,35633,y+g+a),w=WebGLShader(i,35632,x);if(i.attachShader(f,b),i.attachShader(f,w),void 0!==r.index0AttributeName?i.bindAttribLocation(f,0,r.index0AttributeName):!0===r.morphTargets&&i.bindAttribLocation(f,0,"position"),i.linkProgram(f),e.debug.checkShaderErrors){const e=i.getProgramInfoLog(f).trim(),t=i.getShaderInfoLog(b).trim(),r=i.getShaderInfoLog(w).trim();let n=!0,o=!0;if(!1===i.getProgramParameter(f,35714)){n=!1;const t=getShaderErrors(i,b,"vertex"),r=getShaderErrors(i,w,"fragment");console.error("THREE.WebGLProgram: shader error: ",i.getError(),"35715",i.getProgramParameter(f,35715),"gl.getProgramInfoLog",e,t,r)}else""!==e?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",e):""!==t&&""!==r||(o=!1);o&&(this.diagnostics={runnable:n,programLog:e,vertexShader:{log:t,prefix:g},fragmentShader:{log:r,prefix:_}})}let M,S;return i.deleteShader(b),i.deleteShader(w),this.getUniforms=function(){return void 0===M&&(M=new WebGLUniforms(i,f)),M},this.getAttributes=function(){return void 0===S&&(S=fetchAttributeLocations(i,f)),S},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(f),this.program=void 0},this.name=r.shaderName,this.id=programIdCount++,this.cacheKey=t,this.usedTimes=1,this.program=f,this.vertexShader=b,this.fragmentShader=w,this}function WebGLPrograms(e,t,r,n,i,o){const a=[],s=n.isWebGL2,l=n.logarithmicDepthBuffer,c=n.floatVertexTextures,u=n.maxVertexUniforms,h=n.vertexTextures;let d=n.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},m=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function getTextureEncodingFromMap(e){let t;return e&&e.isTexture?t=e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=3e3,t}return{getParameters:function getParameters(i,a,m,f,g){const _=f.fog,y=i.isMeshStandardMaterial?f.environment:null,x=t.get(i.envMap||y),b=p[i.type],w=g.isSkinnedMesh?function getMaxBones(e){const t=e.skeleton.bones;if(c)return 1024;{const e=u,r=Math.floor((e-20)/4),n=Math.min(r,t.length);return n<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+n+"."),0):n}}(g):0;let M,S;if(null!==i.precision&&(d=n.getMaxPrecision(i.precision),d!==i.precision&&console.warn("THREE.WebGLProgram.getParameters:",i.precision,"not supported, using",d,"instead.")),b){const e=ShaderLib[b];M=e.vertexShader,S=e.fragmentShader}else M=i.vertexShader,S=i.fragmentShader;const T=e.getRenderTarget();return{isWebGL2:s,shaderID:b,shaderName:i.type,vertexShader:M,fragmentShader:S,defines:i.defines,isRawShaderMaterial:!0===i.isRawShaderMaterial,glslVersion:i.glslVersion,precision:d,instancing:!0===g.isInstancedMesh,instancingColor:!0===g.isInstancedMesh&&null!==g.instanceColor,supportsVertexTextures:h,outputEncoding:null!==T?getTextureEncodingFromMap(T.texture):e.outputEncoding,map:!!i.map,mapEncoding:getTextureEncodingFromMap(i.map),matcap:!!i.matcap,matcapEncoding:getTextureEncodingFromMap(i.matcap),envMap:!!x,envMapMode:x&&x.mapping,envMapEncoding:getTextureEncodingFromMap(x),envMapCubeUV:!!x&&(306===x.mapping||307===x.mapping),lightMap:!!i.lightMap,lightMapEncoding:getTextureEncodingFromMap(i.lightMap),aoMap:!!i.aoMap,emissiveMap:!!i.emissiveMap,emissiveMapEncoding:getTextureEncodingFromMap(i.emissiveMap),bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,objectSpaceNormalMap:1===i.normalMapType,tangentSpaceNormalMap:0===i.normalMapType,clearcoatMap:!!i.clearcoatMap,clearcoatRoughnessMap:!!i.clearcoatRoughnessMap,clearcoatNormalMap:!!i.clearcoatNormalMap,displacementMap:!!i.displacementMap,roughnessMap:!!i.roughnessMap,metalnessMap:!!i.metalnessMap,specularMap:!!i.specularMap,alphaMap:!!i.alphaMap,gradientMap:!!i.gradientMap,sheen:!!i.sheen,transmissionMap:!!i.transmissionMap,combine:i.combine,vertexTangents:i.normalMap&&i.vertexTangents,vertexColors:i.vertexColors,vertexUvs:!!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatMap||i.clearcoatRoughnessMap||i.clearcoatNormalMap||i.displacementMap||i.transmissionMap),uvsVertexOnly:!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatNormalMap||i.transmissionMap||!i.displacementMap),fog:!!_,useFog:i.fog,fogExp2:_&&_.isFogExp2,flatShading:i.flatShading,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:l,skinning:i.skinning&&w>0,maxBones:w,useVertexTexture:c,morphTargets:i.morphTargets,morphNormals:i.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:a.directional.length,numPointLights:a.point.length,numSpotLights:a.spot.length,numRectAreaLights:a.rectArea.length,numHemiLights:a.hemi.length,numDirLightShadows:a.directionalShadowMap.length,numPointLightShadows:a.pointShadowMap.length,numSpotLightShadows:a.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:i.dithering,shadowMapEnabled:e.shadowMap.enabled&&m.length>0,shadowMapType:e.shadowMap.type,toneMapping:i.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:i.premultipliedAlpha,alphaTest:i.alphaTest,doubleSided:2===i.side,flipSided:1===i.side,depthPacking:void 0!==i.depthPacking&&i.depthPacking,index0AttributeName:i.index0AttributeName,extensionDerivatives:i.extensions&&i.extensions.derivatives,extensionFragDepth:i.extensions&&i.extensions.fragDepth,extensionDrawBuffers:i.extensions&&i.extensions.drawBuffers,extensionShaderTextureLOD:i.extensions&&i.extensions.shaderTextureLOD,rendererExtensionFragDepth:s||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:s||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:s||r.has("EXT_shader_texture_lod"),customProgramCacheKey:i.customProgramCacheKey()}},getProgramCacheKey:function getProgramCacheKey(t){const r=[];if(t.shaderID?r.push(t.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)r.push(e),r.push(t.defines[e]);if(!1===t.isRawShaderMaterial){for(let e=0;e<m.length;e++)r.push(t[m[e]]);r.push(e.outputEncoding),r.push(e.gammaFactor)}return r.push(t.customProgramCacheKey),r.join()},getUniforms:function getUniforms(e){const t=p[e.type];let r;if(t){const e=ShaderLib[t];r=UniformsUtils.clone(e.uniforms)}else r=e.uniforms;return r},acquireProgram:function acquireProgram(t,r){let n;for(let e=0,t=a.length;e<t;e++){const t=a[e];if(t.cacheKey===r){n=t,++n.usedTimes;break}}return void 0===n&&(n=new WebGLProgram(e,r,t,i),a.push(n)),n},releaseProgram:function releaseProgram(e){if(0==--e.usedTimes){const t=a.indexOf(e);a[t]=a[a.length-1],a.pop(),e.destroy()}},programs:a}}function WebGLProperties(){let e=new WeakMap;return{get:function get(t){let r=e.get(t);return void 0===r&&(r={},e.set(t,r)),r},remove:function remove(t){e.delete(t)},update:function update(t,r,n){e.get(t)[r]=n},dispose:function dispose(){e=new WeakMap}}}function painterSortStable(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function reversePainterSortStable(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function WebGLRenderList(e){const t=[];let r=0;const n=[],i=[],o={id:-1};function getNextRenderItem(n,i,a,s,l,c){let u=t[r];const h=e.get(a);return void 0===u?(u={id:n.id,object:n,geometry:i,material:a,program:h.program||o,groupOrder:s,renderOrder:n.renderOrder,z:l,group:c},t[r]=u):(u.id=n.id,u.object=n,u.geometry=i,u.material=a,u.program=h.program||o,u.groupOrder=s,u.renderOrder=n.renderOrder,u.z=l,u.group=c),r++,u}return{opaque:n,transparent:i,init:function init(){r=0,n.length=0,i.length=0},push:function push(e,t,r,o,a,s){const l=getNextRenderItem(e,t,r,o,a,s);(!0===r.transparent?i:n).push(l)},unshift:function unshift(e,t,r,o,a,s){const l=getNextRenderItem(e,t,r,o,a,s);(!0===r.transparent?i:n).unshift(l)},finish:function finish(){for(let e=r,n=t.length;e<n;e++){const r=t[e];if(null===r.id)break;r.id=null,r.object=null,r.geometry=null,r.material=null,r.program=null,r.group=null}},sort:function sort(e,t){n.length>1&&n.sort(e||painterSortStable),i.length>1&&i.sort(t||reversePainterSortStable)}}}function WebGLRenderLists(e){let t=new WeakMap;return{get:function get(r,n){const i=t.get(r);let o;return void 0===i?(o=new WebGLRenderList(e),t.set(r,new WeakMap),t.get(r).set(n,o)):(o=i.get(n),void 0===o&&(o=new WebGLRenderList(e),i.set(n,o))),o},dispose:function dispose(){t=new WeakMap}}}function UniformsCache(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let r;switch(t.type){case"DirectionalLight":r={direction:new Vector3,color:new Color};break;case"SpotLight":r={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":r={position:new Vector3,color:new Color,distance:0,decay:0};break;case"HemisphereLight":r={direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case"RectAreaLight":r={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3}}return e[t.id]=r,r}}}function ShadowUniformsCache(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let r;switch(t.type){case"DirectionalLight":case"SpotLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"PointLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=r,r}}}let nextVersion=0;function shadowCastingLightsFirst(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function WebGLLights(e,t){const r=new UniformsCache,n=ShadowUniformsCache(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)i.probe.push(new Vector3);const o=new Vector3,a=new Matrix4,s=new Matrix4;return{setup:function setup(o){let a=0,s=0,l=0;for(let e=0;e<9;e++)i.probe[e].set(0,0,0);let c=0,u=0,h=0,d=0,p=0,m=0,f=0,g=0;o.sort(shadowCastingLightsFirst);for(let e=0,t=o.length;e<t;e++){const t=o[e],_=t.color,y=t.intensity,x=t.distance,b=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)a+=_.r*y,s+=_.g*y,l+=_.b*y;else if(t.isLightProbe)for(let e=0;e<9;e++)i.probe[e].addScaledVector(t.sh.coefficients[e],y);else if(t.isDirectionalLight){const e=r.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),t.castShadow){const e=t.shadow,r=n.get(t);r.shadowBias=e.bias,r.shadowNormalBias=e.normalBias,r.shadowRadius=e.radius,r.shadowMapSize=e.mapSize,i.directionalShadow[c]=r,i.directionalShadowMap[c]=b,i.directionalShadowMatrix[c]=t.shadow.matrix,m++}i.directional[c]=e,c++}else if(t.isSpotLight){const e=r.get(t);if(e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(_).multiplyScalar(y),e.distance=x,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,t.castShadow){const e=t.shadow,r=n.get(t);r.shadowBias=e.bias,r.shadowNormalBias=e.normalBias,r.shadowRadius=e.radius,r.shadowMapSize=e.mapSize,i.spotShadow[h]=r,i.spotShadowMap[h]=b,i.spotShadowMatrix[h]=t.shadow.matrix,g++}i.spot[h]=e,h++}else if(t.isRectAreaLight){const e=r.get(t);e.color.copy(_).multiplyScalar(y),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),i.rectArea[d]=e,d++}else if(t.isPointLight){const e=r.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,r=n.get(t);r.shadowBias=e.bias,r.shadowNormalBias=e.normalBias,r.shadowRadius=e.radius,r.shadowMapSize=e.mapSize,r.shadowCameraNear=e.camera.near,r.shadowCameraFar=e.camera.far,i.pointShadow[u]=r,i.pointShadowMap[u]=b,i.pointShadowMatrix[u]=t.shadow.matrix,f++}i.point[u]=e,u++}else if(t.isHemisphereLight){const e=r.get(t);e.skyColor.copy(t.color).multiplyScalar(y),e.groundColor.copy(t.groundColor).multiplyScalar(y),i.hemi[p]=e,p++}}d>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=UniformsLib.LTC_FLOAT_1,i.rectAreaLTC2=UniformsLib.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=UniformsLib.LTC_HALF_1,i.rectAreaLTC2=UniformsLib.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=a,i.ambient[1]=s,i.ambient[2]=l;const _=i.hash;_.directionalLength===c&&_.pointLength===u&&_.spotLength===h&&_.rectAreaLength===d&&_.hemiLength===p&&_.numDirectionalShadows===m&&_.numPointShadows===f&&_.numSpotShadows===g||(i.directional.length=c,i.spot.length=h,i.rectArea.length=d,i.point.length=u,i.hemi.length=p,i.directionalShadow.length=m,i.directionalShadowMap.length=m,i.pointShadow.length=f,i.pointShadowMap.length=f,i.spotShadow.length=g,i.spotShadowMap.length=g,i.directionalShadowMatrix.length=m,i.pointShadowMatrix.length=f,i.spotShadowMatrix.length=g,_.directionalLength=c,_.pointLength=u,_.spotLength=h,_.rectAreaLength=d,_.hemiLength=p,_.numDirectionalShadows=m,_.numPointShadows=f,_.numSpotShadows=g,i.version=nextVersion++)},setupView:function setupView(e,t){let r=0,n=0,l=0,c=0,u=0;const h=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){const d=e[t];if(d.isDirectionalLight){const e=i.directional[r];e.direction.setFromMatrixPosition(d.matrixWorld),o.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(o),e.direction.transformDirection(h),r++}else if(d.isSpotLight){const e=i.spot[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),e.direction.setFromMatrixPosition(d.matrixWorld),o.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(o),e.direction.transformDirection(h),l++}else if(d.isRectAreaLight){const e=i.rectArea[c];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),s.identity(),a.copy(d.matrixWorld),a.premultiply(h),s.extractRotation(a),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(s),e.halfHeight.applyMatrix4(s),c++}else if(d.isPointLight){const e=i.point[n];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),n++}else if(d.isHemisphereLight){const e=i.hemi[u];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(h),e.direction.normalize(),u++}}},state:i}}function WebGLRenderState(e,t){const r=new WebGLLights(e,t),n=[],i=[];return{init:function init(){n.length=0,i.length=0},state:{lightsArray:n,shadowsArray:i,lights:r},setupLights:function setupLights(){r.setup(n)},setupLightsView:function setupLightsView(e){r.setupView(n,e)},pushLight:function pushLight(e){n.push(e)},pushShadow:function pushShadow(e){i.push(e)}}}function WebGLRenderStates(e,t){let r=new WeakMap;return{get:function get(n,i=0){let o;return!1===r.has(n)?(o=new WebGLRenderState(e,t),r.set(n,[]),r.get(n).push(o)):i>=r.get(n).length?(o=new WebGLRenderState(e,t),r.get(n).push(o)):o=r.get(n)[i],o},dispose:function dispose(){r=new WeakMap}}}function MeshDepthMaterial(e){Material.call(this),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}function MeshDistanceMaterial(e){Material.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new Vector3,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}MeshDepthMaterial.prototype=Object.create(Material.prototype),MeshDepthMaterial.prototype.constructor=MeshDepthMaterial,MeshDepthMaterial.prototype.isMeshDepthMaterial=!0,MeshDepthMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},MeshDistanceMaterial.prototype=Object.create(Material.prototype),MeshDistanceMaterial.prototype.constructor=MeshDistanceMaterial,MeshDistanceMaterial.prototype.isMeshDistanceMaterial=!0,MeshDistanceMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};var vsm_frag="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",vsm_vert="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function WebGLShadowMap(e,t,r){let n=new Frustum;const i=new Vector2,o=new Vector2,a=new Vector4,s=[],l=[],c={},u={0:1,1:0,2:2},h=new ShaderMaterial({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2},radius:{value:4}},vertexShader:vsm_vert,fragmentShader:vsm_frag}),d=h.clone();d.defines.HORIZONTAL_PASS=1;const p=new BufferGeometry;p.setAttribute("position",new BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new Mesh(p,h),f=this;function VSMPass(r,n){const i=t.update(m);h.uniforms.shadow_pass.value=r.map.texture,h.uniforms.resolution.value=r.mapSize,h.uniforms.radius.value=r.radius,e.setRenderTarget(r.mapPass),e.clear(),e.renderBufferDirect(n,null,i,h,m,null),d.uniforms.shadow_pass.value=r.mapPass.texture,d.uniforms.resolution.value=r.mapSize,d.uniforms.radius.value=r.radius,e.setRenderTarget(r.map),e.clear(),e.renderBufferDirect(n,null,i,d,m,null)}function getDepthMaterialVariant(e,t,r){const n=e<<0|t<<1|r<<2;let i=s[n];return void 0===i&&(i=new MeshDepthMaterial({depthPacking:3201,morphTargets:e,skinning:t}),s[n]=i),i}function getDistanceMaterialVariant(e,t,r){const n=e<<0|t<<1|r<<2;let i=l[n];return void 0===i&&(i=new MeshDistanceMaterial({morphTargets:e,skinning:t}),l[n]=i),i}function getDepthMaterial(t,r,n,i,o,a,s){let l=null,h=getDepthMaterialVariant,d=t.customDepthMaterial;if(!0===i.isPointLight&&(h=getDistanceMaterialVariant,d=t.customDistanceMaterial),void 0===d){let e=!1;!0===n.morphTargets&&(e=r.morphAttributes&&r.morphAttributes.position&&r.morphAttributes.position.length>0);let i=!1;!0===t.isSkinnedMesh&&(!0===n.skinning?i=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t));l=h(e,i,!0===t.isInstancedMesh)}else l=d;if(e.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){const e=l.uuid,t=n.uuid;let r=c[e];void 0===r&&(r={},c[e]=r);let i=r[t];void 0===i&&(i=l.clone(),r[t]=i),l=i}return l.visible=n.visible,l.wireframe=n.wireframe,l.side=3===s?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:u[n.side],l.clipShadows=n.clipShadows,l.clippingPlanes=n.clippingPlanes,l.clipIntersection=n.clipIntersection,l.wireframeLinewidth=n.wireframeLinewidth,l.linewidth=n.linewidth,!0===i.isPointLight&&!0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(i.matrixWorld),l.nearDistance=o,l.farDistance=a),l}function renderObject(r,i,o,a,s){if(!1===r.visible)return;if(r.layers.test(i.layers)&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&3===s)&&(!r.frustumCulled||n.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,r.matrixWorld);const n=t.update(r),i=r.material;if(Array.isArray(i)){const t=n.groups;for(let l=0,c=t.length;l<c;l++){const c=t[l],u=i[c.materialIndex];if(u&&u.visible){const t=getDepthMaterial(r,n,u,a,o.near,o.far,s);e.renderBufferDirect(o,null,n,t,r,c)}}}else if(i.visible){const t=getDepthMaterial(r,n,i,a,o.near,o.far,s);e.renderBufferDirect(o,null,n,t,r,null)}}const l=r.children;for(let e=0,t=l.length;e<t;e++)renderObject(l[e],i,o,a,s)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,s,l){if(!1===f.enabled)return;if(!1===f.autoUpdate&&!1===f.needsUpdate)return;if(0===t.length)return;const c=e.getRenderTarget(),u=e.getActiveCubeFace(),h=e.getActiveMipmapLevel(),d=e.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let c=0,u=t.length;c<u;c++){const u=t[c],h=u.shadow;if(void 0===h){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}if(!1===h.autoUpdate&&!1===h.needsUpdate)continue;i.copy(h.mapSize);const p=h.getFrameExtents();if(i.multiply(p),o.copy(h.mapSize),(i.x>r||i.y>r)&&(i.x>r&&(o.x=Math.floor(r/p.x),i.x=o.x*p.x,h.mapSize.x=o.x),i.y>r&&(o.y=Math.floor(r/p.y),i.y=o.y*p.y,h.mapSize.y=o.y)),null===h.map&&!h.isPointLightShadow&&3===this.type){const e={minFilter:1006,magFilter:1006,format:1023};h.map=new WebGLRenderTarget(i.x,i.y,e),h.map.texture.name=u.name+".shadowMap",h.mapPass=new WebGLRenderTarget(i.x,i.y,e),h.camera.updateProjectionMatrix()}if(null===h.map){const e={minFilter:1003,magFilter:1003,format:1023};h.map=new WebGLRenderTarget(i.x,i.y,e),h.map.texture.name=u.name+".shadowMap",h.camera.updateProjectionMatrix()}e.setRenderTarget(h.map),e.clear();const m=h.getViewportCount();for(let e=0;e<m;e++){const t=h.getViewport(e);a.set(o.x*t.x,o.y*t.y,o.x*t.z,o.y*t.w),d.viewport(a),h.updateMatrices(u,e),n=h.getFrustum(),renderObject(s,l,h.camera,u,this.type)}h.isPointLightShadow||3!==this.type||VSMPass(h,l),h.needsUpdate=!1}f.needsUpdate=!1,e.setRenderTarget(c,u,h)}}function WebGLState(e,t,r){const n=r.isWebGL2;const i=new function ColorBuffer(){let t=!1;const r=new Vector4;let n=null;const i=new Vector4(0,0,0,0);return{setMask:function(r){n===r||t||(e.colorMask(r,r,r,r),n=r)},setLocked:function(e){t=e},setClear:function(t,n,o,a,s){!0===s&&(t*=a,n*=a,o*=a),r.set(t,n,o,a),!1===i.equals(r)&&(e.clearColor(t,n,o,a),i.copy(r))},reset:function(){t=!1,n=null,i.set(-1,0,0,0)}}},o=new function DepthBuffer(){let t=!1,r=null,n=null,i=null;return{setTest:function(e){e?enable(2929):disable(2929)},setMask:function(n){r===n||t||(e.depthMask(n),r=n)},setFunc:function(t){if(n!==t){if(t)switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);n=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,r=null,n=null,i=null}}},a=new function StencilBuffer(){let t=!1,r=null,n=null,i=null,o=null,a=null,s=null,l=null,c=null;return{setTest:function(e){t||(e?enable(2960):disable(2960))},setMask:function(n){r===n||t||(e.stencilMask(n),r=n)},setFunc:function(t,r,a){n===t&&i===r&&o===a||(e.stencilFunc(t,r,a),n=t,i=r,o=a)},setOp:function(t,r,n){a===t&&s===r&&l===n||(e.stencilOp(t,r,n),a=t,s=r,l=n)},setLocked:function(e){t=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,r=null,n=null,i=null,o=null,a=null,s=null,l=null,c=null}}};let s={},l=null,c=null,u=null,h=null,d=null,p=null,m=null,f=null,g=null,_=!1,y=null,x=null,b=null,w=null,M=null;const S=e.getParameter(35661);let T=!1,A=0;const E=e.getParameter(7938);-1!==E.indexOf("WebGL")?(A=parseFloat(/^WebGL (\d)/.exec(E)[1]),T=A>=1):-1!==E.indexOf("OpenGL ES")&&(A=parseFloat(/^OpenGL ES (\d)/.exec(E)[1]),T=A>=2);let C=null,L={};const P=new Vector4,R=new Vector4;function createTexture(t,r,n){const i=new Uint8Array(4),o=e.createTexture();e.bindTexture(t,o),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<n;t++)e.texImage2D(r+t,0,6408,1,1,0,6408,5121,i);return o}const B={};function enable(t){!0!==s[t]&&(e.enable(t),s[t]=!0)}function disable(t){!1!==s[t]&&(e.disable(t),s[t]=!1)}B[3553]=createTexture(3553,3553,1),B[34067]=createTexture(34067,34069,6),i.setClear(0,0,0,1),o.setClear(1),a.setClear(0),enable(2929),o.setFunc(3),setFlipSided(!1),setCullFace(1),enable(2884),setBlending(0);const D={100:32774,101:32778,102:32779};if(n)D[103]=32775,D[104]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&(D[103]=e.MIN_EXT,D[104]=e.MAX_EXT)}const O={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function setBlending(t,r,n,i,o,a,s,l){if(0!==t){if(c||(enable(3042),c=!0),5===t)o=o||r,a=a||n,s=s||i,r===h&&o===m||(e.blendEquationSeparate(D[r],D[o]),h=r,m=o),n===d&&i===p&&a===f&&s===g||(e.blendFuncSeparate(O[n],O[i],O[a],O[s]),d=n,p=i,f=a,g=s),u=t,_=null;else if(t!==u||l!==_){if(100===h&&100===m||(e.blendEquation(32774),h=100,m=100),l)switch(t){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,0,769,771);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFunc(0,769);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}d=null,p=null,f=null,g=null,u=t,_=l}}else c&&(disable(3042),c=!1)}function setFlipSided(t){y!==t&&(t?e.frontFace(2304):e.frontFace(2305),y=t)}function setCullFace(t){0!==t?(enable(2884),t!==x&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):disable(2884),x=t}function setPolygonOffset(t,r,n){t?(enable(32823),w===r&&M===n||(e.polygonOffset(r,n),w=r,M=n)):disable(32823)}function activeTexture(t){void 0===t&&(t=33984+S-1),C!==t&&(e.activeTexture(t),C=t)}return{buffers:{color:i,depth:o,stencil:a},enable:enable,disable:disable,useProgram:function useProgram(t){return l!==t&&(e.useProgram(t),l=t,!0)},setBlending:setBlending,setMaterial:function setMaterial(e,t){2===e.side?disable(2884):enable(2884);let r=1===e.side;t&&(r=!r),setFlipSided(r),1===e.blending&&!1===e.transparent?setBlending(0):setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),o.setFunc(e.depthFunc),o.setTest(e.depthTest),o.setMask(e.depthWrite),i.setMask(e.colorWrite);const n=e.stencilWrite;a.setTest(n),n&&(a.setMask(e.stencilWriteMask),a.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),a.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:setFlipSided,setCullFace:setCullFace,setLineWidth:function setLineWidth(t){t!==b&&(T&&e.lineWidth(t),b=t)},setPolygonOffset:setPolygonOffset,setScissorTest:function setScissorTest(e){e?enable(3089):disable(3089)},activeTexture:activeTexture,bindTexture:function bindTexture(t,r){null===C&&activeTexture();let n=L[C];void 0===n&&(n={type:void 0,texture:void 0},L[C]=n),n.type===t&&n.texture===r||(e.bindTexture(t,r||B[t]),n.type=t,n.texture=r)},unbindTexture:function unbindTexture(){const t=L[C];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function compressedTexImage2D(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function texImage2D(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function texImage3D(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function scissor(t){!1===P.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),P.copy(t))},viewport:function viewport(t){!1===R.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),R.copy(t))},reset:function reset(){s={},C=null,L={},l=null,c=null,u=null,h=null,d=null,p=null,m=null,f=null,g=null,_=!1,y=null,x=null,b=null,w=null,M=null,i.reset(),o.reset(),a.reset()}}}function WebGLTextures(e,t,r,n,i,o,a){const s=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,d=new WeakMap;let p,m=!1;try{m="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function createCanvas(e,t){return m?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function resizeImage(e,t,r,n){let i=1;if((e.width>n||e.height>n)&&(i=n/Math.max(e.width,e.height)),i<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const n=t?MathUtils.floorPowerOfTwo:Math.floor,o=n(i*e.width),a=n(i*e.height);void 0===p&&(p=createCanvas(o,a));const s=r?createCanvas(o,a):p;s.width=o,s.height=a;return s.getContext("2d").drawImage(e,0,0,o,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+o+"x"+a+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function isPowerOfTwo(e){return MathUtils.isPowerOfTwo(e.width)&&MathUtils.isPowerOfTwo(e.height)}function textureNeedsGenerateMipmaps(e,t){return e.generateMipmaps&&t&&1003!==e.minFilter&&1006!==e.minFilter}function generateMipmap(t,r,i,o){e.generateMipmap(t);n.get(r).__maxMipLevel=Math.log(Math.max(i,o))*Math.LOG2E}function getInternalFormat(r,n,i){if(!1===s)return n;if(null!==r){if(void 0!==e[r])return e[r];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+r+"'")}let o=n;return 6403===n&&(5126===i&&(o=33326),5131===i&&(o=33325),5121===i&&(o=33321)),6407===n&&(5126===i&&(o=34837),5131===i&&(o=34843),5121===i&&(o=32849)),6408===n&&(5126===i&&(o=34836),5131===i&&(o=34842),5121===i&&(o=32856)),33325!==o&&33326!==o&&34842!==o&&34836!==o||t.get("EXT_color_buffer_float"),o}function filterFallback(e){return 1003===e||1004===e||1005===e?9728:9729}function onTextureDispose(t){const r=t.target;r.removeEventListener("dispose",onTextureDispose),function deallocateTexture(t){const r=n.get(t);if(void 0===r.__webglInit)return;e.deleteTexture(r.__webglTexture),n.remove(t)}(r),r.isVideoTexture&&d.delete(r),a.memory.textures--}function onRenderTargetDispose(t){const r=t.target;r.removeEventListener("dispose",onRenderTargetDispose),function deallocateRenderTarget(t){const r=n.get(t),i=n.get(t.texture);if(!t)return;void 0!==i.__webglTexture&&e.deleteTexture(i.__webglTexture);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(r.__webglFramebuffer[t]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[t]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&e.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer);n.remove(t.texture),n.remove(t)}(r),a.memory.textures--}let f=0;function setTexture2D(e,t){const i=n.get(e);if(e.isVideoTexture&&function updateVideoTexture(e){const t=a.render.frame;d.get(e)!==t&&(d.set(e,t),e.update())}(e),e.version>0&&i.__version!==e.version){const r=e.image;if(void 0===r)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==r.complete)return void uploadTexture(i,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}r.activeTexture(33984+t),r.bindTexture(3553,i.__webglTexture)}function setTextureCube(t,i){const a=n.get(t);t.version>0&&a.__version!==t.version?function uploadCubeTexture(t,n,i){if(6!==n.image.length)return;initTexture(t,n),r.activeTexture(33984+i),r.bindTexture(34067,t.__webglTexture),e.pixelStorei(37440,n.flipY);const a=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture),l=n.image[0]&&n.image[0].isDataTexture,u=[];for(let e=0;e<6;e++)u[e]=a||l?l?n.image[e].image:n.image[e]:resizeImage(n.image[e],!1,!0,c);const h=u[0],d=isPowerOfTwo(h)||s,p=o.convert(n.format),m=o.convert(n.type),f=getInternalFormat(n.internalFormat,p,m);let g;if(setTextureParameters(34067,n,d),a){for(let e=0;e<6;e++){g=u[e].mipmaps;for(let t=0;t<g.length;t++){const i=g[t];1023!==n.format&&1022!==n.format?null!==p?r.compressedTexImage2D(34069+e,t,f,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):r.texImage2D(34069+e,t,f,i.width,i.height,0,p,m,i.data)}}t.__maxMipLevel=g.length-1}else{g=n.mipmaps;for(let e=0;e<6;e++)if(l){r.texImage2D(34069+e,0,f,u[e].width,u[e].height,0,p,m,u[e].data);for(let t=0;t<g.length;t++){const n=g[t].image[e].image;r.texImage2D(34069+e,t+1,f,n.width,n.height,0,p,m,n.data)}}else{r.texImage2D(34069+e,0,f,p,m,u[e]);for(let t=0;t<g.length;t++){const n=g[t];r.texImage2D(34069+e,t+1,f,p,m,n.image[e])}}t.__maxMipLevel=g.length}textureNeedsGenerateMipmaps(n,d)&&generateMipmap(34067,n,h.width,h.height);t.__version=n.version,n.onUpdate&&n.onUpdate(n)}(a,t,i):(r.activeTexture(33984+i),r.bindTexture(34067,a.__webglTexture))}const g={1e3:10497,1001:33071,1002:33648},_={1003:9728,1004:9984,1005:9986,1006:9729,1007:9985,1008:9987};function setTextureParameters(r,o,a){a?(e.texParameteri(r,10242,g[o.wrapS]),e.texParameteri(r,10243,g[o.wrapT]),32879!==r&&35866!==r||e.texParameteri(r,32882,g[o.wrapR]),e.texParameteri(r,10240,_[o.magFilter]),e.texParameteri(r,10241,_[o.minFilter])):(e.texParameteri(r,10242,33071),e.texParameteri(r,10243,33071),32879!==r&&35866!==r||e.texParameteri(r,32882,33071),1001===o.wrapS&&1001===o.wrapT||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(r,10240,filterFallback(o.magFilter)),e.texParameteri(r,10241,filterFallback(o.minFilter)),1003!==o.minFilter&&1006!==o.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const l=t.get("EXT_texture_filter_anisotropic");if(l){if(1015===o.type&&null===t.get("OES_texture_float_linear"))return;if(1016===o.type&&null===(s||t.get("OES_texture_half_float_linear")))return;(o.anisotropy>1||n.get(o).__currentAnisotropy)&&(e.texParameterf(r,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,i.getMaxAnisotropy())),n.get(o).__currentAnisotropy=o.anisotropy)}}function initTexture(t,r){void 0===t.__webglInit&&(t.__webglInit=!0,r.addEventListener("dispose",onTextureDispose),t.__webglTexture=e.createTexture(),a.memory.textures++)}function uploadTexture(t,n,i){let a=3553;n.isDataTexture2DArray&&(a=35866),n.isDataTexture3D&&(a=32879),initTexture(t,n),r.activeTexture(33984+i),r.bindTexture(a,t.__webglTexture),e.pixelStorei(37440,n.flipY),e.pixelStorei(37441,n.premultiplyAlpha),e.pixelStorei(3317,n.unpackAlignment);const l=function textureNeedsPowerOfTwo(e){return!s&&(1001!==e.wrapS||1001!==e.wrapT||1003!==e.minFilter&&1006!==e.minFilter)}(n)&&!1===isPowerOfTwo(n.image),c=resizeImage(n.image,l,!1,u),h=isPowerOfTwo(c)||s,d=o.convert(n.format);let p,m=o.convert(n.type),f=getInternalFormat(n.internalFormat,d,m);setTextureParameters(a,n,h);const g=n.mipmaps;if(n.isDepthTexture)f=6402,s?f=1015===n.type?36012:1014===n.type?33190:1020===n.type?35056:33189:1015===n.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===n.format&&6402===f&&1012!==n.type&&1014!==n.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=1012,m=o.convert(n.type)),1027===n.format&&6402===f&&(f=34041,1020!==n.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=1020,m=o.convert(n.type))),r.texImage2D(3553,0,f,c.width,c.height,0,d,m,null);else if(n.isDataTexture)if(g.length>0&&h){for(let e=0,t=g.length;e<t;e++)p=g[e],r.texImage2D(3553,e,f,p.width,p.height,0,d,m,p.data);n.generateMipmaps=!1,t.__maxMipLevel=g.length-1}else r.texImage2D(3553,0,f,c.width,c.height,0,d,m,c.data),t.__maxMipLevel=0;else if(n.isCompressedTexture){for(let e=0,t=g.length;e<t;e++)p=g[e],1023!==n.format&&1022!==n.format?null!==d?r.compressedTexImage2D(3553,e,f,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):r.texImage2D(3553,e,f,p.width,p.height,0,d,m,p.data);t.__maxMipLevel=g.length-1}else if(n.isDataTexture2DArray)r.texImage3D(35866,0,f,c.width,c.height,c.depth,0,d,m,c.data),t.__maxMipLevel=0;else if(n.isDataTexture3D)r.texImage3D(32879,0,f,c.width,c.height,c.depth,0,d,m,c.data),t.__maxMipLevel=0;else if(g.length>0&&h){for(let e=0,t=g.length;e<t;e++)p=g[e],r.texImage2D(3553,e,f,d,m,p);n.generateMipmaps=!1,t.__maxMipLevel=g.length-1}else r.texImage2D(3553,0,f,d,m,c),t.__maxMipLevel=0;textureNeedsGenerateMipmaps(n,h)&&generateMipmap(a,n,c.width,c.height),t.__version=n.version,n.onUpdate&&n.onUpdate(n)}function setupFrameBufferTexture(t,i,a,s){const l=o.convert(i.texture.format),c=o.convert(i.texture.type),u=getInternalFormat(i.texture.internalFormat,l,c);r.texImage2D(s,0,u,i.width,i.height,0,l,c,null),e.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,a,s,n.get(i.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function setupRenderBufferStorage(t,r,n){if(e.bindRenderbuffer(36161,t),r.depthBuffer&&!r.stencilBuffer){let i=33189;if(n){const t=r.depthTexture;t&&t.isDepthTexture&&(1015===t.type?i=36012:1014===t.type&&(i=33190));const n=getRenderTargetSamples(r);e.renderbufferStorageMultisample(36161,n,i,r.width,r.height)}else e.renderbufferStorage(36161,i,r.width,r.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(r.depthBuffer&&r.stencilBuffer){if(n){const t=getRenderTargetSamples(r);e.renderbufferStorageMultisample(36161,t,35056,r.width,r.height)}else e.renderbufferStorage(36161,34041,r.width,r.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=o.convert(r.texture.format),i=o.convert(r.texture.type),a=getInternalFormat(r.texture.internalFormat,t,i);if(n){const t=getRenderTargetSamples(r);e.renderbufferStorageMultisample(36161,t,a,r.width,r.height)}else e.renderbufferStorage(36161,a,r.width,r.height)}e.bindRenderbuffer(36161,null)}function setupDepthRenderbuffer(t){const r=n.get(t),i=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");!function setupDepthTexture(t,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,t),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),setTexture2D(r.depthTexture,0);const i=n.get(r.depthTexture).__webglTexture;if(1026===r.depthTexture.format)e.framebufferTexture2D(36160,36096,3553,i,0);else{if(1027!==r.depthTexture.format)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(36160,33306,3553,i,0)}}(r.__webglFramebuffer,t)}else if(i){r.__webglDepthbuffer=[];for(let n=0;n<6;n++)e.bindFramebuffer(36160,r.__webglFramebuffer[n]),r.__webglDepthbuffer[n]=e.createRenderbuffer(),setupRenderBufferStorage(r.__webglDepthbuffer[n],t,!1)}else e.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),setupRenderBufferStorage(r.__webglDepthbuffer,t,!1);e.bindFramebuffer(36160,null)}function getRenderTargetSamples(e){return s&&e.isWebGLMultisampleRenderTarget?Math.min(h,e.samples):0}let y=!1,x=!1;this.allocateTextureUnit=function allocateTextureUnit(){const e=f;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),f+=1,e},this.resetTextureUnits=function resetTextureUnits(){f=0},this.setTexture2D=setTexture2D,this.setTexture2DArray=function setTexture2DArray(e,t){const i=n.get(e);e.version>0&&i.__version!==e.version?uploadTexture(i,e,t):(r.activeTexture(33984+t),r.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function setTexture3D(e,t){const i=n.get(e);e.version>0&&i.__version!==e.version?uploadTexture(i,e,t):(r.activeTexture(33984+t),r.bindTexture(32879,i.__webglTexture))},this.setTextureCube=setTextureCube,this.setupRenderTarget=function setupRenderTarget(t){const i=n.get(t),l=n.get(t.texture);t.addEventListener("dispose",onRenderTargetDispose),l.__webglTexture=e.createTexture(),a.memory.textures++;const c=!0===t.isWebGLCubeRenderTarget,u=!0===t.isWebGLMultisampleRenderTarget,h=isPowerOfTwo(t)||s;if(!s||1022!==t.texture.format||1015!==t.texture.type&&1016!==t.texture.type||(t.texture.format=1023,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),c){i.__webglFramebuffer=[];for(let t=0;t<6;t++)i.__webglFramebuffer[t]=e.createFramebuffer()}else if(i.__webglFramebuffer=e.createFramebuffer(),u)if(s){i.__webglMultisampledFramebuffer=e.createFramebuffer(),i.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,i.__webglColorRenderbuffer);const r=o.convert(t.texture.format),n=o.convert(t.texture.type),a=getInternalFormat(t.texture.internalFormat,r,n),s=getRenderTargetSamples(t);e.renderbufferStorageMultisample(36161,s,a,t.width,t.height),e.bindFramebuffer(36160,i.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,i.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(i.__webglDepthRenderbuffer=e.createRenderbuffer(),setupRenderBufferStorage(i.__webglDepthRenderbuffer,t,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(c){r.bindTexture(34067,l.__webglTexture),setTextureParameters(34067,t.texture,h);for(let e=0;e<6;e++)setupFrameBufferTexture(i.__webglFramebuffer[e],t,36064,34069+e);textureNeedsGenerateMipmaps(t.texture,h)&&generateMipmap(34067,t.texture,t.width,t.height),r.bindTexture(34067,null)}else r.bindTexture(3553,l.__webglTexture),setTextureParameters(3553,t.texture,h),setupFrameBufferTexture(i.__webglFramebuffer,t,36064,3553),textureNeedsGenerateMipmaps(t.texture,h)&&generateMipmap(3553,t.texture,t.width,t.height),r.bindTexture(3553,null);t.depthBuffer&&setupDepthRenderbuffer(t)},this.updateRenderTargetMipmap=function updateRenderTargetMipmap(e){const t=e.texture;if(textureNeedsGenerateMipmaps(t,isPowerOfTwo(e)||s)){const i=e.isWebGLCubeRenderTarget?34067:3553,o=n.get(t).__webglTexture;r.bindTexture(i,o),generateMipmap(i,t,e.width,e.height),r.bindTexture(i,null)}},this.updateMultisampleRenderTarget=function updateMultisampleRenderTarget(t){if(t.isWebGLMultisampleRenderTarget)if(s){const r=n.get(t);e.bindFramebuffer(36008,r.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,r.__webglFramebuffer);const i=t.width,o=t.height;let a=16384;t.depthBuffer&&(a|=256),t.stencilBuffer&&(a|=1024),e.blitFramebuffer(0,0,i,o,0,0,i,o,a,9728),e.bindFramebuffer(36160,r.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function safeSetTexture2D(e,t){e&&e.isWebGLRenderTarget&&(!1===y&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),y=!0),e=e.texture),setTexture2D(e,t)},this.safeSetTextureCube=function safeSetTextureCube(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===x&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),x=!0),e=e.texture),setTextureCube(e,t)}}function WebGLUtils(e,t,r){const n=r.isWebGL2;return{convert:function convert(e){let r;if(1009===e)return 5121;if(1017===e)return 32819;if(1018===e)return 32820;if(1019===e)return 33635;if(1010===e)return 5120;if(1011===e)return 5122;if(1012===e)return 5123;if(1013===e)return 5124;if(1014===e)return 5125;if(1015===e)return 5126;if(1016===e)return n?5131:(r=t.get("OES_texture_half_float"),null!==r?r.HALF_FLOAT_OES:null);if(1021===e)return 6406;if(1022===e)return 6407;if(1023===e)return 6408;if(1024===e)return 6409;if(1025===e)return 6410;if(1026===e)return 6402;if(1027===e)return 34041;if(1028===e)return 6403;if(1029===e)return 36244;if(1030===e)return 33319;if(1031===e)return 33320;if(1032===e)return 36248;if(1033===e)return 36249;if(33776===e||33777===e||33778===e||33779===e){if(r=t.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(33776===e)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===e)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===e)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===e)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===e||35841===e||35842===e||35843===e){if(r=t.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(35840===e)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===e)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===e)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===e)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===e)return r=t.get("WEBGL_compressed_texture_etc1"),null!==r?r.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===e||37496===e)&&(r=t.get("WEBGL_compressed_texture_etc"),null!==r)){if(37492===e)return r.COMPRESSED_RGB8_ETC2;if(37496===e)return r.COMPRESSED_RGBA8_ETC2_EAC}return 37808===e||37809===e||37810===e||37811===e||37812===e||37813===e||37814===e||37815===e||37816===e||37817===e||37818===e||37819===e||37820===e||37821===e||37840===e||37841===e||37842===e||37843===e||37844===e||37845===e||37846===e||37847===e||37848===e||37849===e||37850===e||37851===e||37852===e||37853===e?(r=t.get("WEBGL_compressed_texture_astc"),null!==r?e:null):36492===e?(r=t.get("EXT_texture_compression_bptc"),null!==r?e:null):1020===e?n?34042:(r=t.get("WEBGL_depth_texture"),null!==r?r.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}function ArrayCamera(e=[]){PerspectiveCamera.call(this),this.cameras=e}function Group(){Object3D.call(this),this.type="Group"}function WebXRController(){this._targetRay=null,this._grip=null,this._hand=null}function WebXRManager(e,t){const r=this;let n=null,i=1,o=null,a="local-floor",s=null;const l=[],c=new Map,u=new PerspectiveCamera;u.layers.enable(1),u.viewport=new Vector4;const h=new PerspectiveCamera;h.layers.enable(2),h.viewport=new Vector4;const d=[u,h],p=new ArrayCamera;p.layers.enable(1),p.layers.enable(2);let m=null,f=null;function onSessionEvent(e){const t=c.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function onSessionEnd(){c.forEach((function(e,t){e.disconnect(t)})),c.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),x.stop(),r.isPresenting=!1,r.dispatchEvent({type:"sessionend"})}function onRequestReferenceSpace(e){o=e,x.setContext(n),x.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"})}function updateInputSources(e){const t=n.inputSources;for(let e=0;e<l.length;e++)c.set(t[e],l[e]);for(let t=0;t<e.removed.length;t++){const r=e.removed[t],n=c.get(r);n&&(n.dispatchEvent({type:"disconnected",data:r}),c.delete(r))}for(let t=0;t<e.added.length;t++){const r=e.added[t],n=c.get(r);n&&n.dispatchEvent({type:"connected",data:r})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=l[e];return void 0===t&&(t=new WebXRController,l[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=l[e];return void 0===t&&(t=new WebXRController,l[e]=t),t.getGripSpace()},this.getHand=function(e){let t=l[e];return void 0===t&&(t=new WebXRController,l[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){a=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getSession=function(){return n},this.setSession=function(e){if(n=e,null!==n){n.addEventListener("select",onSessionEvent),n.addEventListener("selectstart",onSessionEvent),n.addEventListener("selectend",onSessionEvent),n.addEventListener("squeeze",onSessionEvent),n.addEventListener("squeezestart",onSessionEvent),n.addEventListener("squeezeend",onSessionEvent),n.addEventListener("end",onSessionEnd);const e=t.getContextAttributes();!0!==e.xrCompatible&&t.makeXRCompatible();const r={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:i},o=new XRWebGLLayer(n,t,r);n.updateRenderState({baseLayer:o}),n.requestReferenceSpace(a).then(onRequestReferenceSpace),n.addEventListener("inputsourceschange",updateInputSources)}};const g=new Vector3,_=new Vector3;function updateCamera(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.getCamera=function(e){p.near=h.near=u.near=e.near,p.far=h.far=u.far=e.far,m===p.near&&f===p.far||(n.updateRenderState({depthNear:p.near,depthFar:p.far}),m=p.near,f=p.far);const t=e.parent,r=p.cameras;updateCamera(p,t);for(let e=0;e<r.length;e++)updateCamera(r[e],t);e.matrixWorld.copy(p.matrixWorld);const i=e.children;for(let e=0,t=i.length;e<t;e++)i[e].updateMatrixWorld(!0);return 2===r.length?function setProjectionFromUnion(e,t,r){g.setFromMatrixPosition(t.matrixWorld),_.setFromMatrixPosition(r.matrixWorld);const n=g.distanceTo(_),i=t.projectionMatrix.elements,o=r.projectionMatrix.elements,a=i[14]/(i[10]-1),s=i[14]/(i[10]+1),l=(i[9]+1)/i[5],c=(i[9]-1)/i[5],u=(i[8]-1)/i[0],h=(o[8]+1)/o[0],d=a*u,p=a*h,m=n/(-u+h),f=m*-u;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(f),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const y=a+m,x=s+m,b=d-f,w=p+(n-f),M=l*s/x*y,S=c*s/x*y;e.projectionMatrix.makePerspective(b,w,M,S,y,x)}(p,u,h):p.projectionMatrix.copy(u.projectionMatrix),p};let y=null;const x=new WebGLAnimation;x.setAnimationLoop((function onAnimationFrame(t,r){if(s=r.getViewerPose(o),null!==s){const t=s.views,r=n.renderState.baseLayer;e.setFramebuffer(r.framebuffer);let i=!1;t.length!==p.cameras.length&&(p.cameras.length=0,i=!0);for(let e=0;e<t.length;e++){const n=t[e],o=r.getViewport(n),a=d[e];a.matrix.fromArray(n.transform.matrix),a.projectionMatrix.fromArray(n.projectionMatrix),a.viewport.set(o.x,o.y,o.width,o.height),0===e&&p.matrix.copy(a.matrix),!0===i&&p.cameras.push(a)}}const i=n.inputSources;for(let e=0;e<l.length;e++){const t=l[e],n=i[e];t.update(n,r,o)}y&&y(t,r)})),this.setAnimationLoop=function(e){y=e},this.dispose=function(){}}function WebGLMaterials(e){function refreshUniformsCommon(t,r){t.opacity.value=r.opacity,r.color&&t.diffuse.value.copy(r.color),r.emissive&&t.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(t.map.value=r.map),r.alphaMap&&(t.alphaMap.value=r.alphaMap),r.specularMap&&(t.specularMap.value=r.specularMap);const n=e.get(r).envMap;if(n){t.envMap.value=n,t.flipEnvMap.value=n.isCubeTexture&&n._needsFlipEnvMap?-1:1,t.reflectivity.value=r.reflectivity,t.refractionRatio.value=r.refractionRatio;const i=e.get(n).__maxMipLevel;void 0!==i&&(t.maxMipLevel.value=i)}let i,o;r.lightMap&&(t.lightMap.value=r.lightMap,t.lightMapIntensity.value=r.lightMapIntensity),r.aoMap&&(t.aoMap.value=r.aoMap,t.aoMapIntensity.value=r.aoMapIntensity),r.map?i=r.map:r.specularMap?i=r.specularMap:r.displacementMap?i=r.displacementMap:r.normalMap?i=r.normalMap:r.bumpMap?i=r.bumpMap:r.roughnessMap?i=r.roughnessMap:r.metalnessMap?i=r.metalnessMap:r.alphaMap?i=r.alphaMap:r.emissiveMap?i=r.emissiveMap:r.clearcoatMap?i=r.clearcoatMap:r.clearcoatNormalMap?i=r.clearcoatNormalMap:r.clearcoatRoughnessMap&&(i=r.clearcoatRoughnessMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix)),r.aoMap?o=r.aoMap:r.lightMap&&(o=r.lightMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),t.uv2Transform.value.copy(o.matrix))}function refreshUniformsStandard(t,r){t.roughness.value=r.roughness,t.metalness.value=r.metalness,r.roughnessMap&&(t.roughnessMap.value=r.roughnessMap),r.metalnessMap&&(t.metalnessMap.value=r.metalnessMap),r.emissiveMap&&(t.emissiveMap.value=r.emissiveMap),r.bumpMap&&(t.bumpMap.value=r.bumpMap,t.bumpScale.value=r.bumpScale,1===r.side&&(t.bumpScale.value*=-1)),r.normalMap&&(t.normalMap.value=r.normalMap,t.normalScale.value.copy(r.normalScale),1===r.side&&t.normalScale.value.negate()),r.displacementMap&&(t.displacementMap.value=r.displacementMap,t.displacementScale.value=r.displacementScale,t.displacementBias.value=r.displacementBias);e.get(r).envMap&&(t.envMapIntensity.value=r.envMapIntensity)}return{refreshFogUniforms:function refreshFogUniforms(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function refreshMaterialUniforms(e,t,r,n){t.isMeshBasicMaterial?refreshUniformsCommon(e,t):t.isMeshLambertMaterial?(refreshUniformsCommon(e,t),function refreshUniformsLambert(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(e,t)):t.isMeshToonMaterial?(refreshUniformsCommon(e,t),function refreshUniformsToon(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshPhongMaterial?(refreshUniformsCommon(e,t),function refreshUniformsPhong(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshStandardMaterial?(refreshUniformsCommon(e,t),t.isMeshPhysicalMaterial?function refreshUniformsPhysical(e,t){refreshUniformsStandard(e,t),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen);t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap);t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap);t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,1===t.side&&e.clearcoatNormalScale.value.negate());e.transmission.value=t.transmission,t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap)}(e,t):refreshUniformsStandard(e,t)):t.isMeshMatcapMaterial?(refreshUniformsCommon(e,t),function refreshUniformsMatcap(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshDepthMaterial?(refreshUniformsCommon(e,t),function refreshUniformsDepth(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshDistanceMaterial?(refreshUniformsCommon(e,t),function refreshUniformsDistance(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,t)):t.isMeshNormalMaterial?(refreshUniformsCommon(e,t),function refreshUniformsNormal(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isLineBasicMaterial?(!function refreshUniformsLine(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,t),t.isLineDashedMaterial&&function refreshUniformsDash(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,t)):t.isPointsMaterial?function refreshUniformsPoints(e,t,r,n){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*r,e.scale.value=.5*n,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let i;t.map?i=t.map:t.alphaMap&&(i=t.alphaMap);void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}(e,t,r,n):t.isSpriteMaterial?function refreshUniformsSprites(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}(e,t):t.isShadowMaterial?(e.color.value.copy(t.color),e.opacity.value=t.opacity):t.isShaderMaterial&&(t.uniformsNeedUpdate=!1)}}}function createCanvasElement(){const e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.style.display="block",e}function WebGLRenderer(e){const t=void 0!==(e=e||{}).canvas?e.canvas:createCanvasElement(),r=void 0!==e.context?e.context:null,n=void 0!==e.alpha&&e.alpha,i=void 0===e.depth||e.depth,o=void 0===e.stencil||e.stencil,a=void 0!==e.antialias&&e.antialias,s=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,c=void 0!==e.powerPreference?e.powerPreference:"default",u=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let h=null,d=null;const p=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const m=this;let f=!1,g=null,_=0,y=0,x=null,b=null,w=-1,M=null;const S=new Vector4,T=new Vector4;let A=null,E=t.width,C=t.height,L=1,P=null,R=null;const B=new Vector4(0,0,E,C),D=new Vector4(0,0,E,C);let O=!1;const I=new Frustum;let U=!1,N=!1;const V=new Matrix4,F=new Vector3,G={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function getTargetPixelRatio(){return null===x?L:1}let z,k,H,W,j,$,q,X,Y,Z,J,Q,K,ee,te,re,ne,ie,oe,ae,se,le=r;function getContext(e,r){for(let n=0;n<e.length;n++){const i=e[n],o=t.getContext(i,r);if(null!==o)return o}return null}try{const e={alpha:n,depth:i,stencil:o,antialias:a,premultipliedAlpha:s,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u};if(t.addEventListener("webglcontextlost",onContextLost,!1),t.addEventListener("webglcontextrestored",onContextRestore,!1),null===le){const t=["webgl2","webgl","experimental-webgl"];if(!0===m.isWebGL1Renderer&&t.shift(),le=getContext(t,e),null===le)throw getContext(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===le.getShaderPrecisionFormat&&(le.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function initGLContext(){z=new WebGLExtensions(le),k=new WebGLCapabilities(le,z,e),!1===k.isWebGL2&&(z.get("WEBGL_depth_texture"),z.get("OES_texture_float"),z.get("OES_texture_half_float"),z.get("OES_texture_half_float_linear"),z.get("OES_standard_derivatives"),z.get("OES_element_index_uint"),z.get("OES_vertex_array_object"),z.get("ANGLE_instanced_arrays")),z.get("OES_texture_float_linear"),ae=new WebGLUtils(le,z,k),H=new WebGLState(le,z,k),H.scissor(T.copy(D).multiplyScalar(L).floor()),H.viewport(S.copy(B).multiplyScalar(L).floor()),W=new WebGLInfo(le),j=new WebGLProperties,$=new WebGLTextures(le,z,H,j,k,ae,W),q=new WebGLCubeMaps(m),X=new WebGLAttributes(le,k),se=new WebGLBindingStates(le,z,X,k),Y=new WebGLGeometries(le,X,W,se),Z=new WebGLObjects(le,Y,X,W),ne=new WebGLMorphtargets(le),te=new WebGLClipping(j),J=new WebGLPrograms(m,q,z,k,se,te),Q=new WebGLMaterials(j),K=new WebGLRenderLists(j),ee=new WebGLRenderStates(z,k),re=new WebGLBackground(m,q,H,Z,s),ie=new WebGLBufferRenderer(le,z,W,k),oe=new WebGLIndexedBufferRenderer(le,z,W,k),W.programs=J.programs,m.capabilities=k,m.extensions=z,m.properties=j,m.renderLists=K,m.state=H,m.info=W}initGLContext();const ce=new WebXRManager(m,le);this.xr=ce;const ue=new WebGLShadowMap(m,Z,k.maxTextureSize);function onContextLost(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),f=!0}function onContextRestore(){console.log("THREE.WebGLRenderer: Context Restored."),f=!1,initGLContext()}function onMaterialDispose(e){const t=e.target;t.removeEventListener("dispose",onMaterialDispose),function deallocateMaterial(e){releaseMaterialProgramReference(e),j.remove(e)}(t)}function releaseMaterialProgramReference(e){const t=j.get(e).program;void 0!==t&&J.releaseProgram(t)}this.shadowMap=ue,this.getContext=function(){return le},this.getContextAttributes=function(){return le.getContextAttributes()},this.forceContextLoss=function(){const e=z.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=z.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return L},this.setPixelRatio=function(e){void 0!==e&&(L=e,this.setSize(E,C,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new Vector2),e.set(E,C)},this.setSize=function(e,r,n){ce.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(E=e,C=r,t.width=Math.floor(e*L),t.height=Math.floor(r*L),!1!==n&&(t.style.width=e+"px",t.style.height=r+"px"),this.setViewport(0,0,e,r))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new Vector2),e.set(E*L,C*L).floor()},this.setDrawingBufferSize=function(e,r,n){E=e,C=r,L=n,t.width=Math.floor(e*n),t.height=Math.floor(r*n),this.setViewport(0,0,e,r)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new Vector4),e.copy(S)},this.getViewport=function(e){return e.copy(B)},this.setViewport=function(e,t,r,n){e.isVector4?B.set(e.x,e.y,e.z,e.w):B.set(e,t,r,n),H.viewport(S.copy(B).multiplyScalar(L).floor())},this.getScissor=function(e){return e.copy(D)},this.setScissor=function(e,t,r,n){e.isVector4?D.set(e.x,e.y,e.z,e.w):D.set(e,t,r,n),H.scissor(T.copy(D).multiplyScalar(L).floor())},this.getScissorTest=function(){return O},this.setScissorTest=function(e){H.setScissorTest(O=e)},this.setOpaqueSort=function(e){P=e},this.setTransparentSort=function(e){R=e},this.getClearColor=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),e=new Color),e.copy(re.getClearColor())},this.setClearColor=function(){re.setClearColor.apply(re,arguments)},this.getClearAlpha=function(){return re.getClearAlpha()},this.setClearAlpha=function(){re.setClearAlpha.apply(re,arguments)},this.clear=function(e,t,r){let n=0;(void 0===e||e)&&(n|=16384),(void 0===t||t)&&(n|=256),(void 0===r||r)&&(n|=1024),le.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",onContextLost,!1),t.removeEventListener("webglcontextrestored",onContextRestore,!1),K.dispose(),ee.dispose(),j.dispose(),q.dispose(),Z.dispose(),se.dispose(),ce.dispose(),de.stop()},this.renderBufferImmediate=function(e,t){se.initAttributes();const r=j.get(e);e.hasPositions&&!r.position&&(r.position=le.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=le.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=le.createBuffer()),e.hasColors&&!r.color&&(r.color=le.createBuffer());const n=t.getAttributes();e.hasPositions&&(le.bindBuffer(34962,r.position),le.bufferData(34962,e.positionArray,35048),se.enableAttribute(n.position),le.vertexAttribPointer(n.position,3,5126,!1,0,0)),e.hasNormals&&(le.bindBuffer(34962,r.normal),le.bufferData(34962,e.normalArray,35048),se.enableAttribute(n.normal),le.vertexAttribPointer(n.normal,3,5126,!1,0,0)),e.hasUvs&&(le.bindBuffer(34962,r.uv),le.bufferData(34962,e.uvArray,35048),se.enableAttribute(n.uv),le.vertexAttribPointer(n.uv,2,5126,!1,0,0)),e.hasColors&&(le.bindBuffer(34962,r.color),le.bufferData(34962,e.colorArray,35048),se.enableAttribute(n.color),le.vertexAttribPointer(n.color,3,5126,!1,0,0)),se.disableUnusedAttributes(),le.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,n,i,o){null===t&&(t=G);const a=i.isMesh&&i.matrixWorld.determinant()<0,s=setProgram(e,t,n,i);H.setMaterial(n,a);let l=r.index;const c=r.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let u,h=1;!0===n.wireframe&&(l=Y.getWireframeAttribute(r),h=2),(n.morphTargets||n.morphNormals)&&ne.update(i,r,n,s),se.setup(i,n,s,r,l);let d=ie;null!==l&&(u=X.get(l),d=oe,d.setIndex(u));const p=null!==l?l.count:c.count,m=r.drawRange.start*h,f=r.drawRange.count*h,g=null!==o?o.start*h:0,_=null!==o?o.count*h:1/0,y=Math.max(m,g),x=Math.min(p,m+f,g+_)-1,b=Math.max(0,x-y+1);if(0!==b){if(i.isMesh)!0===n.wireframe?(H.setLineWidth(n.wireframeLinewidth*getTargetPixelRatio()),d.setMode(1)):d.setMode(4);else if(i.isLine){let e=n.linewidth;void 0===e&&(e=1),H.setLineWidth(e*getTargetPixelRatio()),i.isLineSegments?d.setMode(1):i.isLineLoop?d.setMode(2):d.setMode(3)}else i.isPoints?d.setMode(0):i.isSprite&&d.setMode(4);if(i.isInstancedMesh)d.renderInstances(y,b,i.count);else if(r.isInstancedBufferGeometry){const e=Math.min(r.instanceCount,r._maxInstanceCount);d.renderInstances(y,b,e)}else d.render(y,b)}},this.compile=function(e,t){d=ee.get(e),d.init(),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(d.pushLight(e),e.castShadow&&d.pushShadow(e))})),d.setupLights();const r=new WeakMap;e.traverse((function(t){const n=t.material;if(n)if(Array.isArray(n))for(let i=0;i<n.length;i++){const o=n[i];!1===r.has(o)&&(initMaterial(o,e,t),r.set(o))}else!1===r.has(n)&&(initMaterial(n,e,t),r.set(n))}))};let he=null;const de=new WebGLAnimation;function projectObject(e,t,r,n){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)r=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)d.pushLight(e),e.castShadow&&d.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||I.intersectsSprite(e)){n&&F.setFromMatrixPosition(e.matrixWorld).applyMatrix4(V);const t=Z.update(e),i=e.material;i.visible&&h.push(e,t,i,r,F.z,null)}}else if(e.isImmediateRenderObject)n&&F.setFromMatrixPosition(e.matrixWorld).applyMatrix4(V),h.push(e,null,e.material,r,F.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==W.render.frame&&(e.skeleton.update(),e.skeleton.frame=W.render.frame),!e.frustumCulled||I.intersectsObject(e))){n&&F.setFromMatrixPosition(e.matrixWorld).applyMatrix4(V);const t=Z.update(e),i=e.material;if(Array.isArray(i)){const n=t.groups;for(let o=0,a=n.length;o<a;o++){const a=n[o],s=i[a.materialIndex];s&&s.visible&&h.push(e,t,s,r,F.z,a)}}else i.visible&&h.push(e,t,i,r,F.z,null)}const i=e.children;for(let e=0,o=i.length;e<o;e++)projectObject(i[e],t,r,n)}function renderObjects(e,t,r){const n=!0===t.isScene?t.overrideMaterial:null;for(let i=0,o=e.length;i<o;i++){const o=e[i],a=o.object,s=o.geometry,l=null===n?o.material:n,c=o.group;if(r.isArrayCamera){const e=r.cameras;for(let r=0,n=e.length;r<n;r++){const n=e[r];a.layers.test(n.layers)&&(H.viewport(S.copy(n.viewport)),d.setupLightsView(n),renderObject(a,t,n,s,l,c))}}else renderObject(a,t,r,s,l,c)}}function renderObject(e,t,r,n,i,o){if(e.onBeforeRender(m,t,r,n,i,o),e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){const n=setProgram(r,t,i,e);H.setMaterial(i),se.reset(),function renderObjectImmediate(e,t){e.render((function(e){m.renderBufferImmediate(e,t)}))}(e,n)}else m.renderBufferDirect(r,t,n,i,e,o);e.onAfterRender(m,t,r,n,i,o)}function initMaterial(e,t,r){!0!==t.isScene&&(t=G);const n=j.get(e),i=d.state.lights,o=d.state.shadowsArray,a=i.state.version,s=J.getParameters(e,i.state,o,t,r),l=J.getProgramCacheKey(s);let c=n.program,u=!0;if(void 0===c)e.addEventListener("dispose",onMaterialDispose);else if(c.cacheKey!==l)releaseMaterialProgramReference(e);else if(n.lightsStateVersion!==a)u=!1;else{if(void 0!==s.shaderID){const r=e.isMeshStandardMaterial?t.environment:null;return void(n.envMap=q.get(e.envMap||r))}u=!1}u&&(s.uniforms=J.getUniforms(e),e.onBeforeCompile(s,m),c=J.acquireProgram(s,l),n.program=c,n.uniforms=s.uniforms,n.outputEncoding=s.outputEncoding);const h=n.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(n.numClippingPlanes=te.numPlanes,n.numIntersection=te.numIntersection,h.clippingPlanes=te.uniform),n.environment=e.isMeshStandardMaterial?t.environment:null,n.fog=t.fog,n.envMap=q.get(e.envMap||n.environment),n.needsLights=function materialNeedsLights(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),n.lightsStateVersion=a,n.needsLights&&(h.ambientLightColor.value=i.state.ambient,h.lightProbe.value=i.state.probe,h.directionalLights.value=i.state.directional,h.directionalLightShadows.value=i.state.directionalShadow,h.spotLights.value=i.state.spot,h.spotLightShadows.value=i.state.spotShadow,h.rectAreaLights.value=i.state.rectArea,h.ltc_1.value=i.state.rectAreaLTC1,h.ltc_2.value=i.state.rectAreaLTC2,h.pointLights.value=i.state.point,h.pointLightShadows.value=i.state.pointShadow,h.hemisphereLights.value=i.state.hemi,h.directionalShadowMap.value=i.state.directionalShadowMap,h.directionalShadowMatrix.value=i.state.directionalShadowMatrix,h.spotShadowMap.value=i.state.spotShadowMap,h.spotShadowMatrix.value=i.state.spotShadowMatrix,h.pointShadowMap.value=i.state.pointShadowMap,h.pointShadowMatrix.value=i.state.pointShadowMatrix);const p=n.program.getUniforms(),f=WebGLUniforms.seqWithValue(p.seq,h);n.uniformsList=f}function setProgram(e,t,r,n){!0!==t.isScene&&(t=G),$.resetTextureUnits();const i=t.fog,o=r.isMeshStandardMaterial?t.environment:null,a=null===x?m.outputEncoding:x.texture.encoding,s=q.get(r.envMap||o),l=j.get(r),c=d.state.lights;if(!0===U&&(!0===N||e!==M)){const t=e===M&&r.id===w;te.setState(r,e,t)}r.version===l.__version?r.fog&&l.fog!==i||l.environment!==o||l.needsLights&&l.lightsStateVersion!==c.state.version?initMaterial(r,t,n):void 0===l.numClippingPlanes||l.numClippingPlanes===te.numPlanes&&l.numIntersection===te.numIntersection?(l.outputEncoding!==a||l.envMap!==s)&&initMaterial(r,t,n):initMaterial(r,t,n):(initMaterial(r,t,n),l.__version=r.version);let u=!1,h=!1,p=!1;const f=l.program,g=f.getUniforms(),_=l.uniforms;if(H.useProgram(f.program)&&(u=!0,h=!0,p=!0),r.id!==w&&(w=r.id,h=!0),u||M!==e){if(g.setValue(le,"projectionMatrix",e.projectionMatrix),k.logarithmicDepthBuffer&&g.setValue(le,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),M!==e&&(M=e,h=!0,p=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const t=g.map.cameraPosition;void 0!==t&&t.setValue(le,F.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&g.setValue(le,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||r.skinning)&&g.setValue(le,"viewMatrix",e.matrixWorldInverse)}if(r.skinning){g.setOptional(le,n,"bindMatrix"),g.setOptional(le,n,"bindMatrixInverse");const e=n.skeleton;if(e){const t=e.bones;if(k.floatVertexTextures){if(null===e.boneTexture){let r=Math.sqrt(4*t.length);r=MathUtils.ceilPowerOfTwo(r),r=Math.max(r,4);const n=new Float32Array(r*r*4);n.set(e.boneMatrices);const i=new DataTexture(n,r,r,1023,1015);e.boneMatrices=n,e.boneTexture=i,e.boneTextureSize=r}g.setValue(le,"boneTexture",e.boneTexture,$),g.setValue(le,"boneTextureSize",e.boneTextureSize)}else g.setOptional(le,e,"boneMatrices")}}return(h||l.receiveShadow!==n.receiveShadow)&&(l.receiveShadow=n.receiveShadow,g.setValue(le,"receiveShadow",n.receiveShadow)),h&&(g.setValue(le,"toneMappingExposure",m.toneMappingExposure),l.needsLights&&function markUniformsLightsNeedsUpdate(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}(_,p),i&&r.fog&&Q.refreshFogUniforms(_,i),Q.refreshMaterialUniforms(_,r,L,C),WebGLUniforms.upload(le,l.uniformsList,_,$)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(WebGLUniforms.upload(le,l.uniformsList,_,$),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&g.setValue(le,"center",n.center),g.setValue(le,"modelViewMatrix",n.modelViewMatrix),g.setValue(le,"normalMatrix",n.normalMatrix),g.setValue(le,"modelMatrix",n.matrixWorld),f}de.setAnimationLoop((function onAnimationFrame(e){ce.isPresenting||he&&he(e)})),"undefined"!=typeof window&&de.setContext(window),this.setAnimationLoop=function(e){he=e,ce.setAnimationLoop(e),null===e?de.stop():de.start()},this.render=function(e,t){let r,n;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),r=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),n=arguments[3]),void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===f)return;se.resetDefaultState(),w=-1,M=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===ce.enabled&&!0===ce.isPresenting&&(t=ce.getCamera(t)),!0===e.isScene&&e.onBeforeRender(m,e,t,r||x),d=ee.get(e,p.length),d.init(),p.push(d),V.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),I.setFromProjectionMatrix(V),N=this.localClippingEnabled,U=te.init(this.clippingPlanes,N,t),h=K.get(e,t),h.init(),projectObject(e,t,0,m.sortObjects),h.finish(),!0===m.sortObjects&&h.sort(P,R),!0===U&&te.beginShadows();const i=d.state.shadowsArray;ue.render(i,e,t),d.setupLights(),d.setupLightsView(t),!0===U&&te.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==r&&this.setRenderTarget(r),re.render(h,e,t,n);const o=h.opaque,a=h.transparent;o.length>0&&renderObjects(o,e,t),a.length>0&&renderObjects(a,e,t),!0===e.isScene&&e.onAfterRender(m,e,t),null!==x&&($.updateRenderTargetMipmap(x),$.updateMultisampleRenderTarget(x)),H.buffers.depth.setTest(!0),H.buffers.depth.setMask(!0),H.buffers.color.setMask(!0),H.setPolygonOffset(!1),p.pop(),d=p.length>0?p[p.length-1]:null,h=null},this.setFramebuffer=function(e){g!==e&&null===x&&le.bindFramebuffer(36160,e),g=e},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return y},this.getRenderList=function(){return h},this.setRenderList=function(e){h=e},this.getRenderTarget=function(){return x},this.setRenderTarget=function(e,t=0,r=0){x=e,_=t,y=r,e&&void 0===j.get(e).__webglFramebuffer&&$.setupRenderTarget(e);let n=g,i=!1;if(e){const r=j.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(n=r[t],i=!0):n=e.isWebGLMultisampleRenderTarget?j.get(e).__webglMultisampledFramebuffer:r,S.copy(e.viewport),T.copy(e.scissor),A=e.scissorTest}else S.copy(B).multiplyScalar(L).floor(),T.copy(D).multiplyScalar(L).floor(),A=O;if(b!==n&&(le.bindFramebuffer(36160,n),b=n),H.viewport(S),H.scissor(T),H.setScissorTest(A),i){const n=j.get(e.texture);le.framebufferTexture2D(36160,36064,34069+t,n.__webglTexture,r)}},this.readRenderTargetPixels=function(e,t,r,n,i,o,a){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let s=j.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==a&&(s=s[a]),s){let a=!1;s!==b&&(le.bindFramebuffer(36160,s),a=!0);try{const s=e.texture,l=s.format,c=s.type;if(1023!==l&&ae.convert(l)!==le.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(1009===c||ae.convert(c)===le.getParameter(35738)||1015===c&&(k.isWebGL2||z.get("OES_texture_float")||z.get("WEBGL_color_buffer_float"))||1016===c&&(k.isWebGL2?z.get("EXT_color_buffer_float"):z.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===le.checkFramebufferStatus(36160)?t>=0&&t<=e.width-n&&r>=0&&r<=e.height-i&&le.readPixels(t,r,n,i,ae.convert(l),ae.convert(c),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{a&&le.bindFramebuffer(36160,b)}}},this.copyFramebufferToTexture=function(e,t,r=0){const n=Math.pow(2,-r),i=Math.floor(t.image.width*n),o=Math.floor(t.image.height*n),a=ae.convert(t.format);$.setTexture2D(t,0),le.copyTexImage2D(3553,r,a,e.x,e.y,i,o,0),H.unbindTexture()},this.copyTextureToTexture=function(e,t,r,n=0){const i=t.image.width,o=t.image.height,a=ae.convert(r.format),s=ae.convert(r.type);$.setTexture2D(r,0),le.pixelStorei(37440,r.flipY),le.pixelStorei(37441,r.premultiplyAlpha),le.pixelStorei(3317,r.unpackAlignment),t.isDataTexture?le.texSubImage2D(3553,n,e.x,e.y,i,o,a,s,t.image.data):t.isCompressedTexture?le.compressedTexSubImage2D(3553,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,a,t.mipmaps[0].data):le.texSubImage2D(3553,n,e.x,e.y,a,s,t.image),0===n&&r.generateMipmaps&&le.generateMipmap(3553),H.unbindTexture()},this.initTexture=function(e){$.setTexture2D(e,0),H.unbindTexture()},this.resetState=function(){H.reset(),se.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function WebGL1Renderer(e){WebGLRenderer.call(this,e)}ArrayCamera.prototype=Object.assign(Object.create(PerspectiveCamera.prototype),{constructor:ArrayCamera,isArrayCamera:!0}),Group.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Group,isGroup:!0}),Object.assign(WebXRController.prototype,{constructor:WebXRController,getHandSpace:function(){if(null===this._hand&&(this._hand=new Group,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let e=0;e<=window.XRHand.LITTLE_PHALANX_TIP;e++){const e=new Group;e.matrixAutoUpdate=!1,e.visible=!1,this._hand.joints.push(e),this._hand.add(e)}return this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Group,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Group,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(e,t,r){let n=null,i=null,o=null;const a=this._targetRay,s=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(l&&e.hand){o=!0;for(let n=0;n<=window.XRHand.LITTLE_PHALANX_TIP;n++)if(e.hand[n]){const i=t.getJointPose(e.hand[n],r),o=l.joints[n];null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.jointRadius=i.radius),o.visible=null!==i;const a=l.joints[window.XRHand.INDEX_PHALANX_TIP],s=l.joints[window.XRHand.THUMB_PHALANX_TIP],c=a.position.distanceTo(s.position),u=.02,h=.005;l.inputState.pinching&&c>u+h?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&c<=u-h&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}}else null!==a&&(n=t.getPose(e.targetRaySpace,r),null!==n&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale))),null!==s&&e.gripSpace&&(i=t.getPose(e.gripSpace,r),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale)));return null!==a&&(a.visible=null!==n),null!==s&&(s.visible=null!==i),null!==l&&(l.visible=null!==o),this}}),Object.assign(WebXRManager.prototype,EventDispatcher.prototype),WebGL1Renderer.prototype=Object.assign(Object.create(WebGLRenderer.prototype),{constructor:WebGL1Renderer,isWebGL1Renderer:!0});class FogExp2{constructor(e,t){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new Color(e),this.density=void 0!==t?t:25e-5}clone(){return new FogExp2(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Fog{constructor(e,t,r){Object.defineProperty(this,"isFog",{value:!0}),this.name="",this.color=new Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3}clone(){return new Fog(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Scene extends Object3D{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}function InterleavedBuffer(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=MathUtils.generateUUID()}Object.defineProperty(InterleavedBuffer.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(InterleavedBuffer.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,r){e*=this.stride,r*=t.stride;for(let n=0,i=this.stride;n<i;n++)this.array[e+n]=t.array[r+n];return this},set:function(e,t=0){return this.array.set(e,t),this},clone:function(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=MathUtils.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new InterleavedBuffer(new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),this.stride);return t.setUsage(this.usage),t},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=MathUtils.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const _vector$6=new Vector3;function InterleavedBufferAttribute(e,t,r,n){this.name="",this.data=e,this.itemSize=t,this.offset=r,this.normalized=!0===n}function SpriteMaterial(e){Material.call(this),this.type="SpriteMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}let _geometry;Object.defineProperties(InterleavedBufferAttribute.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(e){this.data.needsUpdate=e}}}),Object.assign(InterleavedBufferAttribute.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(let t=0,r=this.data.count;t<r;t++)_vector$6.x=this.getX(t),_vector$6.y=this.getY(t),_vector$6.z=this.getZ(t),_vector$6.applyMatrix4(e),this.setXYZ(t,_vector$6.x,_vector$6.y,_vector$6.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this},setXYZ:function(e,t,r,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this},setXYZW:function(e,t,r,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this.data.array[e+3]=i,this},clone:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const r=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[r+t])}return new BufferAttribute(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new InterleavedBufferAttribute(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const r=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[r+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}),SpriteMaterial.prototype=Object.create(Material.prototype),SpriteMaterial.prototype.constructor=SpriteMaterial,SpriteMaterial.prototype.isSpriteMaterial=!0,SpriteMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};const _intersectPoint=new Vector3,_worldScale=new Vector3,_mvPosition=new Vector3,_alignedPosition=new Vector2,_rotatedPosition=new Vector2,_viewWorldMatrix=new Matrix4,_vA$1=new Vector3,_vB$1=new Vector3,_vC$1=new Vector3,_uvA$1=new Vector2,_uvB$1=new Vector2,_uvC$1=new Vector2;function Sprite(e){if(Object3D.call(this),this.type="Sprite",void 0===_geometry){_geometry=new BufferGeometry;const e=new InterleavedBuffer(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);_geometry.setIndex([0,1,2,0,2,3]),_geometry.setAttribute("position",new InterleavedBufferAttribute(e,3,0,!1)),_geometry.setAttribute("uv",new InterleavedBufferAttribute(e,2,3,!1))}this.geometry=_geometry,this.material=void 0!==e?e:new SpriteMaterial,this.center=new Vector2(.5,.5)}function transformVertex(e,t,r,n,i,o){_alignedPosition.subVectors(e,r).addScalar(.5).multiply(n),void 0!==i?(_rotatedPosition.x=o*_alignedPosition.x-i*_alignedPosition.y,_rotatedPosition.y=i*_alignedPosition.x+o*_alignedPosition.y):_rotatedPosition.copy(_alignedPosition),e.copy(t),e.x+=_rotatedPosition.x,e.y+=_rotatedPosition.y,e.applyMatrix4(_viewWorldMatrix)}Sprite.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Sprite,isSprite:!0,raycast:function(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),_worldScale.setFromMatrixScale(this.matrixWorld),_viewWorldMatrix.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),_mvPosition.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&_worldScale.multiplyScalar(-_mvPosition.z);const r=this.material.rotation;let n,i;0!==r&&(i=Math.cos(r),n=Math.sin(r));const o=this.center;transformVertex(_vA$1.set(-.5,-.5,0),_mvPosition,o,_worldScale,n,i),transformVertex(_vB$1.set(.5,-.5,0),_mvPosition,o,_worldScale,n,i),transformVertex(_vC$1.set(.5,.5,0),_mvPosition,o,_worldScale,n,i),_uvA$1.set(0,0),_uvB$1.set(1,0),_uvC$1.set(1,1);let a=e.ray.intersectTriangle(_vA$1,_vB$1,_vC$1,!1,_intersectPoint);if(null===a&&(transformVertex(_vB$1.set(-.5,.5,0),_mvPosition,o,_worldScale,n,i),_uvB$1.set(0,1),a=e.ray.intersectTriangle(_vA$1,_vC$1,_vB$1,!1,_intersectPoint),null===a))return;const s=e.ray.origin.distanceTo(_intersectPoint);s<e.near||s>e.far||t.push({distance:s,point:_intersectPoint.clone(),uv:Triangle.getUV(_intersectPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2),face:null,object:this})},copy:function(e){return Object3D.prototype.copy.call(this,e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}});const _v1$4=new Vector3,_v2$2=new Vector3;function LOD(){Object3D.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}LOD.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:LOD,isLOD:!0,copy:function(e){Object3D.prototype.copy.call(this,e,!1);const t=e.levels;for(let e=0,r=t.length;e<r;e++){const r=t[e];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t=0){t=Math.abs(t);const r=this.levels;let n;for(n=0;n<r.length&&!(t<r[n].distance);n++);return r.splice(n,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){const t=this.levels;if(t.length>0){let r,n;for(r=1,n=t.length;r<n&&!(e<t[r].distance);r++);return t[r-1].object}return null},raycast:function(e,t){if(this.levels.length>0){_v1$4.setFromMatrixPosition(this.matrixWorld);const r=e.ray.origin.distanceTo(_v1$4);this.getObjectForDistance(r).raycast(e,t)}},update:function(e){const t=this.levels;if(t.length>1){_v1$4.setFromMatrixPosition(e.matrixWorld),_v2$2.setFromMatrixPosition(this.matrixWorld);const r=_v1$4.distanceTo(_v2$2)/e.zoom;let n,i;for(t[0].object.visible=!0,n=1,i=t.length;n<i&&r>=t[n].distance;n++)t[n-1].object.visible=!1,t[n].object.visible=!0;for(this._currentLevel=n-1;n<i;n++)t[n].object.visible=!1}},toJSON:function(e){const t=Object3D.prototype.toJSON.call(this,e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const r=this.levels;for(let e=0,n=r.length;e<n;e++){const n=r[e];t.object.levels.push({object:n.object.uuid,distance:n.distance})}return t}});const _basePosition=new Vector3,_skinIndex=new Vector4,_skinWeight=new Vector4,_vector$7=new Vector3,_matrix$1=new Matrix4;function SkinnedMesh(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Mesh.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Matrix4,this.bindMatrixInverse=new Matrix4}function Bone(){Object3D.call(this),this.type="Bone"}SkinnedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:SkinnedMesh,isSkinnedMesh:!0,copy:function(e){return Mesh.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const e=new Vector4,t=this.geometry.attributes.skinWeight;for(let r=0,n=t.count;r<n;r++){e.x=t.getX(r),e.y=t.getY(r),e.z=t.getZ(r),e.w=t.getW(r);const n=1/e.manhattanLength();n!==1/0?e.multiplyScalar(n):e.set(1,0,0,0),t.setXYZW(r,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){Mesh.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(e,t){const r=this.skeleton,n=this.geometry;_skinIndex.fromBufferAttribute(n.attributes.skinIndex,e),_skinWeight.fromBufferAttribute(n.attributes.skinWeight,e),_basePosition.fromBufferAttribute(n.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){const n=_skinWeight.getComponent(e);if(0!==n){const i=_skinIndex.getComponent(e);_matrix$1.multiplyMatrices(r.bones[i].matrixWorld,r.boneInverses[i]),t.addScaledVector(_vector$7.copy(_basePosition).applyMatrix4(_matrix$1),n)}}return t.applyMatrix4(this.bindMatrixInverse)}}),Bone.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Bone,isBone:!0});const _offsetMatrix=new Matrix4,_identityMatrix=new Matrix4;function Skeleton(e=[],t=[]){this.uuid=MathUtils.generateUUID(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}Object.assign(Skeleton.prototype,{init:function(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Matrix4)}},calculateInverses:function(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const t=new Matrix4;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}},pose:function(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}},update:function(){const e=this.bones,t=this.boneInverses,r=this.boneMatrices,n=this.boneTexture;for(let n=0,i=e.length;n<i;n++){const i=e[n]?e[n].matrixWorld:_identityMatrix;_offsetMatrix.multiplyMatrices(i,t[n]),_offsetMatrix.toArray(r,16*n)}null!==n&&(n.needsUpdate=!0)},clone:function(){return new Skeleton(this.bones,this.boneInverses)},getBoneByName:function(e){for(let t=0,r=this.bones.length;t<r;t++){const r=this.bones[t];if(r.name===e)return r}},dispose:function(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(e,t){this.uuid=e.uuid;for(let r=0,n=e.bones.length;r<n;r++){const n=e.bones[r];let i=t[n];void 0===i&&(console.warn("THREE.Skeleton: No bone found with UUID:",n),i=new Bone),this.bones.push(i),this.boneInverses.push((new Matrix4).fromArray(e.boneInverses[r]))}return this.init(),this},toJSON:function(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,r=this.boneInverses;for(let n=0,i=t.length;n<i;n++){const i=t[n];e.bones.push(i.uuid);const o=r[n];e.boneInverses.push(o.toArray())}return e}});const _instanceLocalMatrix=new Matrix4,_instanceWorldMatrix=new Matrix4,_instanceIntersects=[],_mesh=new Mesh;function InstancedMesh(e,t,r){Mesh.call(this,e,t),this.instanceMatrix=new BufferAttribute(new Float32Array(16*r),16),this.instanceColor=null,this.count=r,this.frustumCulled=!1}function LineBasicMaterial(e){Material.call(this),this.type="LineBasicMaterial",this.color=new Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}InstancedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:InstancedMesh,isInstancedMesh:!0,copy:function(e){return Mesh.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),this.count=e.count,this},getColorAt:function(e,t){t.fromArray(this.instanceColor.array,3*e)},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,16*e)},raycast:function(e,t){const r=this.matrixWorld,n=this.count;if(_mesh.geometry=this.geometry,_mesh.material=this.material,void 0!==_mesh.material)for(let i=0;i<n;i++){this.getMatrixAt(i,_instanceLocalMatrix),_instanceWorldMatrix.multiplyMatrices(r,_instanceLocalMatrix),_mesh.matrixWorld=_instanceWorldMatrix,_mesh.raycast(e,_instanceIntersects);for(let e=0,r=_instanceIntersects.length;e<r;e++){const r=_instanceIntersects[e];r.instanceId=i,r.object=this,t.push(r)}_instanceIntersects.length=0}},setColorAt:function(e,t){null===this.instanceColor&&(this.instanceColor=new BufferAttribute(new Float32Array(3*this.count),3)),t.toArray(this.instanceColor.array,3*e)},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,16*e)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}}),LineBasicMaterial.prototype=Object.create(Material.prototype),LineBasicMaterial.prototype.constructor=LineBasicMaterial,LineBasicMaterial.prototype.isLineBasicMaterial=!0,LineBasicMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this};const _start=new Vector3,_end=new Vector3,_inverseMatrix$1=new Matrix4,_ray$1=new Ray,_sphere$2=new Sphere;function Line(e=new BufferGeometry,t=new LineBasicMaterial){Object3D.call(this),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}Line.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Line,isLine:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,r=[0];for(let e=1,n=t.count;e<n;e++)_start.fromBufferAttribute(t,e-1),_end.fromBufferAttribute(t,e),r[e]=r[e-1],r[e]+=_start.distanceTo(_end);e.setAttribute("lineDistance",new Float32BufferAttribute(r,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,r=e.lineDistances;r[0]=0;for(let e=1,n=t.length;e<n;e++)r[e]=r[e-1],r[e]+=t[e-1].distanceTo(t[e])}return this},raycast:function(e,t){const r=this.geometry,n=this.matrixWorld,i=e.params.Line.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),_sphere$2.copy(r.boundingSphere),_sphere$2.applyMatrix4(n),_sphere$2.radius+=i,!1===e.ray.intersectsSphere(_sphere$2))return;_inverseMatrix$1.copy(n).invert(),_ray$1.copy(e.ray).applyMatrix4(_inverseMatrix$1);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o,s=new Vector3,l=new Vector3,c=new Vector3,u=new Vector3,h=this.isLineSegments?2:1;if(r.isBufferGeometry){const n=r.index,i=r.attributes.position;if(null!==n){const r=n.array;for(let n=0,o=r.length-1;n<o;n+=h){const o=r[n],h=r[n+1];s.fromBufferAttribute(i,o),l.fromBufferAttribute(i,h);if(_ray$1.distanceSqToSegment(s,l,u,c)>a)continue;u.applyMatrix4(this.matrixWorld);const d=e.ray.origin.distanceTo(u);d<e.near||d>e.far||t.push({distance:d,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else for(let r=0,n=i.count-1;r<n;r+=h){s.fromBufferAttribute(i,r),l.fromBufferAttribute(i,r+1);if(_ray$1.distanceSqToSegment(s,l,u,c)>a)continue;u.applyMatrix4(this.matrixWorld);const n=e.ray.origin.distanceTo(u);n<e.near||n>e.far||t.push({distance:n,point:c.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}else if(r.isGeometry){const n=r.vertices,i=n.length;for(let r=0;r<i-1;r+=h){if(_ray$1.distanceSqToSegment(n[r],n[r+1],u,c)>a)continue;u.applyMatrix4(this.matrixWorld);const i=e.ray.origin.distanceTo(u);i<e.near||i>e.far||t.push({distance:i,point:c.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(r.length>0){const e=t[r[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const _start$1=new Vector3,_end$1=new Vector3;function LineSegments(e,t){Line.call(this,e,t),this.type="LineSegments"}function LineLoop(e,t){Line.call(this,e,t),this.type="LineLoop"}function PointsMaterial(e){Material.call(this),this.type="PointsMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}LineSegments.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineSegments,isLineSegments:!0,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,r=[];for(let e=0,n=t.count;e<n;e+=2)_start$1.fromBufferAttribute(t,e),_end$1.fromBufferAttribute(t,e+1),r[e]=0===e?0:r[e-1],r[e+1]=r[e]+_start$1.distanceTo(_end$1);e.setAttribute("lineDistance",new Float32BufferAttribute(r,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,r=e.lineDistances;for(let e=0,n=t.length;e<n;e+=2)_start$1.copy(t[e]),_end$1.copy(t[e+1]),r[e]=0===e?0:r[e-1],r[e+1]=r[e]+_start$1.distanceTo(_end$1)}return this}}),LineLoop.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineLoop,isLineLoop:!0}),PointsMaterial.prototype=Object.create(Material.prototype),PointsMaterial.prototype.constructor=PointsMaterial,PointsMaterial.prototype.isPointsMaterial=!0,PointsMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};const _inverseMatrix$2=new Matrix4,_ray$2=new Ray,_sphere$3=new Sphere,_position$1=new Vector3;function Points(e=new BufferGeometry,t=new PointsMaterial){Object3D.call(this),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}function testPoint(e,t,r,n,i,o,a){const s=_ray$2.distanceSqToPoint(e);if(s<r){const r=new Vector3;_ray$2.closestPointToPoint(e,r),r.applyMatrix4(n);const l=i.ray.origin.distanceTo(r);if(l<i.near||l>i.far)return;o.push({distance:l,distanceToRay:Math.sqrt(s),point:r,index:t,face:null,object:a})}}function VideoTexture(e,t,r,n,i,o,a,s,l){Texture.call(this,e,t,r,n,i,o,a,s,l),this.format=void 0!==a?a:1022,this.minFilter=void 0!==o?o:1006,this.magFilter=void 0!==i?i:1006,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback((function updateVideo(){c.needsUpdate=!0,e.requestVideoFrameCallback(updateVideo)}))}function CompressedTexture(e,t,r,n,i,o,a,s,l,c,u,h){Texture.call(this,null,o,a,s,l,c,n,i,u,h),this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}function CanvasTexture(e,t,r,n,i,o,a,s,l){Texture.call(this,e,t,r,n,i,o,a,s,l),this.needsUpdate=!0}function DepthTexture(e,t,r,n,i,o,a,s,l,c){if(1026!==(c=void 0!==c?c:1026)&&1027!==c)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===r&&1026===c&&(r=1012),void 0===r&&1027===c&&(r=1020),Texture.call(this,null,n,i,o,a,s,c,r,l),this.image={width:e,height:t},this.magFilter=void 0!==a?a:1003,this.minFilter=void 0!==s?s:1003,this.flipY=!1,this.generateMipmaps=!1}Points.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Points,isPoints:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(e,t){const r=this.geometry,n=this.matrixWorld,i=e.params.Points.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),_sphere$3.copy(r.boundingSphere),_sphere$3.applyMatrix4(n),_sphere$3.radius+=i,!1===e.ray.intersectsSphere(_sphere$3))return;_inverseMatrix$2.copy(n).invert(),_ray$2.copy(e.ray).applyMatrix4(_inverseMatrix$2);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o;if(r.isBufferGeometry){const i=r.index,o=r.attributes.position;if(null!==i){const r=i.array;for(let i=0,s=r.length;i<s;i++){const s=r[i];_position$1.fromBufferAttribute(o,s),testPoint(_position$1,s,a,n,e,t,this)}}else for(let r=0,i=o.count;r<i;r++)_position$1.fromBufferAttribute(o,r),testPoint(_position$1,r,a,n,e,t,this)}else{const i=r.vertices;for(let r=0,o=i.length;r<o;r++)testPoint(i[r],r,a,n,e,t,this)}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(r.length>0){const e=t[r[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),VideoTexture.prototype=Object.assign(Object.create(Texture.prototype),{constructor:VideoTexture,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){const e=this.image;!1==="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),CompressedTexture.prototype=Object.create(Texture.prototype),CompressedTexture.prototype.constructor=CompressedTexture,CompressedTexture.prototype.isCompressedTexture=!0,CanvasTexture.prototype=Object.create(Texture.prototype),CanvasTexture.prototype.constructor=CanvasTexture,CanvasTexture.prototype.isCanvasTexture=!0,DepthTexture.prototype=Object.create(Texture.prototype),DepthTexture.prototype.constructor=DepthTexture,DepthTexture.prototype.isDepthTexture=!0;let _geometryId=0;const _m1$3=new Matrix4,_obj$1=new Object3D,_offset$1=new Vector3;function Geometry(){Object.defineProperty(this,"id",{value:_geometryId+=2}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Geometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Geometry,isGeometry:!0,applyMatrix4:function(e){const t=(new Matrix3).getNormalMatrix(e);for(let t=0,r=this.vertices.length;t<r;t++){this.vertices[t].applyMatrix4(e)}for(let e=0,r=this.faces.length;e<r;e++){const r=this.faces[e];r.normal.applyMatrix3(t).normalize();for(let e=0,n=r.vertexNormals.length;e<n;e++)r.vertexNormals[e].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return _m1$3.makeRotationX(e),this.applyMatrix4(_m1$3),this},rotateY:function(e){return _m1$3.makeRotationY(e),this.applyMatrix4(_m1$3),this},rotateZ:function(e){return _m1$3.makeRotationZ(e),this.applyMatrix4(_m1$3),this},translate:function(e,t,r){return _m1$3.makeTranslation(e,t,r),this.applyMatrix4(_m1$3),this},scale:function(e,t,r){return _m1$3.makeScale(e,t,r),this.applyMatrix4(_m1$3),this},lookAt:function(e){return _obj$1.lookAt(e),_obj$1.updateMatrix(),this.applyMatrix4(_obj$1.matrix),this},fromBufferGeometry:function(e){const t=this,r=null!==e.index?e.index:void 0,n=e.attributes;if(void 0===n.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const i=n.position,o=n.normal,a=n.color,s=n.uv,l=n.uv2;void 0!==l&&(this.faceVertexUvs[1]=[]);for(let e=0;e<i.count;e++)t.vertices.push((new Vector3).fromBufferAttribute(i,e)),void 0!==a&&t.colors.push((new Color).fromBufferAttribute(a,e));function addFace(e,r,n,i){const c=void 0===a?[]:[t.colors[e].clone(),t.colors[r].clone(),t.colors[n].clone()],u=void 0===o?[]:[(new Vector3).fromBufferAttribute(o,e),(new Vector3).fromBufferAttribute(o,r),(new Vector3).fromBufferAttribute(o,n)],h=new Face3(e,r,n,u,c,i);t.faces.push(h),void 0!==s&&t.faceVertexUvs[0].push([(new Vector2).fromBufferAttribute(s,e),(new Vector2).fromBufferAttribute(s,r),(new Vector2).fromBufferAttribute(s,n)]),void 0!==l&&t.faceVertexUvs[1].push([(new Vector2).fromBufferAttribute(l,e),(new Vector2).fromBufferAttribute(l,r),(new Vector2).fromBufferAttribute(l,n)])}const c=e.groups;if(c.length>0)for(let e=0;e<c.length;e++){const t=c[e],n=t.start;for(let e=n,i=n+t.count;e<i;e+=3)void 0!==r?addFace(r.getX(e),r.getX(e+1),r.getX(e+2),t.materialIndex):addFace(e,e+1,e+2,t.materialIndex)}else if(void 0!==r)for(let e=0;e<r.count;e+=3)addFace(r.getX(e),r.getX(e+1),r.getX(e+2));else for(let e=0;e<i.count;e+=3)addFace(e,e+1,e+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset$1).negate(),this.translate(_offset$1.x,_offset$1.y,_offset$1.z),this},normalize:function(){this.computeBoundingSphere();const e=this.boundingSphere.center,t=this.boundingSphere.radius,r=0===t?1:1/t,n=new Matrix4;return n.set(r,0,0,-r*e.x,0,r,0,-r*e.y,0,0,r,-r*e.z,0,0,0,1),this.applyMatrix4(n),this},computeFaceNormals:function(){const e=new Vector3,t=new Vector3;for(let r=0,n=this.faces.length;r<n;r++){const n=this.faces[r],i=this.vertices[n.a],o=this.vertices[n.b],a=this.vertices[n.c];e.subVectors(a,o),t.subVectors(i,o),e.cross(t),e.normalize(),n.normal.copy(e)}},computeVertexNormals:function(e=!0){const t=new Array(this.vertices.length);for(let e=0,r=this.vertices.length;e<r;e++)t[e]=new Vector3;if(e){const e=new Vector3,r=new Vector3;for(let n=0,i=this.faces.length;n<i;n++){const i=this.faces[n],o=this.vertices[i.a],a=this.vertices[i.b],s=this.vertices[i.c];e.subVectors(s,a),r.subVectors(o,a),e.cross(r),t[i.a].add(e),t[i.b].add(e),t[i.c].add(e)}}else{this.computeFaceNormals();for(let e=0,r=this.faces.length;e<r;e++){const r=this.faces[e];t[r.a].add(r.normal),t[r.b].add(r.normal),t[r.c].add(r.normal)}}for(let e=0,r=this.vertices.length;e<r;e++)t[e].normalize();for(let e=0,r=this.faces.length;e<r;e++){const r=this.faces[e],n=r.vertexNormals;3===n.length?(n[0].copy(t[r.a]),n[1].copy(t[r.b]),n[2].copy(t[r.c])):(n[0]=t[r.a].clone(),n[1]=t[r.b].clone(),n[2]=t[r.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],r=t.vertexNormals;3===r.length?(r[0].copy(t.normal),r[1].copy(t.normal),r[2].copy(t.normal)):(r[0]=t.normal.clone(),r[1]=t.normal.clone(),r[2]=t.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.__originalFaceNormal?t.__originalFaceNormal.copy(t.normal):t.__originalFaceNormal=t.normal.clone(),t.__originalVertexNormals||(t.__originalVertexNormals=[]);for(let e=0,r=t.vertexNormals.length;e<r;e++)t.__originalVertexNormals[e]?t.__originalVertexNormals[e].copy(t.vertexNormals[e]):t.__originalVertexNormals[e]=t.vertexNormals[e].clone()}const e=new Geometry;e.faces=this.faces;for(let t=0,r=this.morphTargets.length;t<r;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];const e=this.morphNormals[t].faceNormals,r=this.morphNormals[t].vertexNormals;for(let t=0,n=this.faces.length;t<n;t++){const t=new Vector3,n={a:new Vector3,b:new Vector3,c:new Vector3};e.push(t),r.push(n)}}const r=this.morphNormals[t];e.vertices=this.morphTargets[t].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],n=r.faceNormals[e],i=r.vertexNormals[e];n.copy(t.normal),i.a.copy(t.vertexNormals[0]),i.b.copy(t.vertexNormals[1]),i.c.copy(t.vertexNormals[2])}}for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.normal=t.__originalFaceNormal,t.vertexNormals=t.__originalVertexNormals}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r=0){if(!e||!e.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);let n;const i=this.vertices.length,o=this.vertices,a=e.vertices,s=this.faces,l=e.faces,c=this.colors,u=e.colors;void 0!==t&&(n=(new Matrix3).getNormalMatrix(t));for(let e=0,r=a.length;e<r;e++){const r=a[e].clone();void 0!==t&&r.applyMatrix4(t),o.push(r)}for(let e=0,t=u.length;e<t;e++)c.push(u[e].clone());for(let e=0,t=l.length;e<t;e++){const t=l[e];let o,a;const c=t.vertexNormals,u=t.vertexColors,h=new Face3(t.a+i,t.b+i,t.c+i);h.normal.copy(t.normal),void 0!==n&&h.normal.applyMatrix3(n).normalize();for(let e=0,t=c.length;e<t;e++)o=c[e].clone(),void 0!==n&&o.applyMatrix3(n).normalize(),h.vertexNormals.push(o);h.color.copy(t.color);for(let e=0,t=u.length;e<t;e++)a=u[e],h.vertexColors.push(a.clone());h.materialIndex=t.materialIndex+r,s.push(h)}for(let t=0,r=e.faceVertexUvs.length;t<r;t++){const r=e.faceVertexUvs[t];void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]);for(let e=0,n=r.length;e<n;e++){const n=r[e],i=[];for(let e=0,t=n.length;e<t;e++)i.push(n[e].clone());this.faceVertexUvs[t].push(i)}}},mergeMesh:function(e){e&&e.isMesh?(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e)},mergeVertices:function(e=4){const t={},r=[],n=[],i=Math.pow(10,e);for(let e=0,o=this.vertices.length;e<o;e++){const o=this.vertices[e],a=Math.round(o.x*i)+"_"+Math.round(o.y*i)+"_"+Math.round(o.z*i);void 0===t[a]?(t[a]=e,r.push(this.vertices[e]),n[e]=r.length-1):n[e]=n[t[a]]}const o=[];for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.a=n[t.a],t.b=n[t.b],t.c=n[t.c];const r=[t.a,t.b,t.c];for(let t=0;t<3;t++)if(r[t]===r[(t+1)%3]){o.push(e);break}}for(let e=o.length-1;e>=0;e--){const t=o[e];this.faces.splice(t,1);for(let e=0,r=this.faceVertexUvs.length;e<r;e++)this.faceVertexUvs[e].splice(t,1)}const a=this.vertices.length-r.length;return this.vertices=r,a},setFromPoints:function(e){this.vertices=[];for(let t=0,r=e.length;t<r;t++){const r=e[t];this.vertices.push(new Vector3(r.x,r.y,r.z||0))}return this},sortFacesByMaterialIndex:function(){const e=this.faces,t=e.length;for(let r=0;r<t;r++)e[r]._id=r;e.sort((function materialIndexSort(e,t){return e.materialIndex-t.materialIndex}));const r=this.faceVertexUvs[0],n=this.faceVertexUvs[1];let i,o;r&&r.length===t&&(i=[]),n&&n.length===t&&(o=[]);for(let a=0;a<t;a++){const t=e[a]._id;i&&i.push(r[t]),o&&o.push(n[t])}i&&(this.faceVertexUvs[0]=i),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){const t=this.parameters;for(const r in t)void 0!==t[r]&&(e[r]=t[r]);return e}const t=[];for(let e=0;e<this.vertices.length;e++){const r=this.vertices[e];t.push(r.x,r.y,r.z)}const r=[],n=[],i={},o=[],a={},s=[],l={};for(let e=0;e<this.faces.length;e++){const t=this.faces[e],n=!0,i=!1,o=void 0!==this.faceVertexUvs[0][e],a=t.normal.length()>0,s=t.vertexNormals.length>0,l=1!==t.color.r||1!==t.color.g||1!==t.color.b,c=t.vertexColors.length>0;let u=0;if(u=setBit(u,0,0),u=setBit(u,1,n),u=setBit(u,2,i),u=setBit(u,3,o),u=setBit(u,4,a),u=setBit(u,5,s),u=setBit(u,6,l),u=setBit(u,7,c),r.push(u),r.push(t.a,t.b,t.c),r.push(t.materialIndex),o){const t=this.faceVertexUvs[0][e];r.push(getUvIndex(t[0]),getUvIndex(t[1]),getUvIndex(t[2]))}if(a&&r.push(getNormalIndex(t.normal)),s){const e=t.vertexNormals;r.push(getNormalIndex(e[0]),getNormalIndex(e[1]),getNormalIndex(e[2]))}if(l&&r.push(getColorIndex(t.color)),c){const e=t.vertexColors;r.push(getColorIndex(e[0]),getColorIndex(e[1]),getColorIndex(e[2]))}}function setBit(e,t,r){return r?e|1<<t:e&~(1<<t)}function getNormalIndex(e){const t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==i[t]||(i[t]=n.length/3,n.push(e.x,e.y,e.z)),i[t]}function getColorIndex(e){const t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==a[t]||(a[t]=o.length,o.push(e.getHex())),a[t]}function getUvIndex(e){const t=e.x.toString()+e.y.toString();return void 0!==l[t]||(l[t]=s.length/2,s.push(e.x,e.y)),l[t]}return e.data={},e.data.vertices=t,e.data.normals=n,o.length>0&&(e.data.colors=o),s.length>0&&(e.data.uvs=[s]),e.data.faces=r,e},clone:function(){return(new Geometry).copy(this)},copy:function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const t=e.vertices;for(let e=0,r=t.length;e<r;e++)this.vertices.push(t[e].clone());const r=e.colors;for(let e=0,t=r.length;e<t;e++)this.colors.push(r[e].clone());const n=e.faces;for(let e=0,t=n.length;e<t;e++)this.faces.push(n[e].clone());for(let t=0,r=e.faceVertexUvs.length;t<r;t++){const r=e.faceVertexUvs[t];void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]);for(let e=0,n=r.length;e<n;e++){const n=r[e],i=[];for(let e=0,t=n.length;e<t;e++){const t=n[e];i.push(t.clone())}this.faceVertexUvs[t].push(i)}}const i=e.morphTargets;for(let e=0,t=i.length;e<t;e++){const t={};if(t.name=i[e].name,void 0!==i[e].vertices){t.vertices=[];for(let r=0,n=i[e].vertices.length;r<n;r++)t.vertices.push(i[e].vertices[r].clone())}if(void 0!==i[e].normals){t.normals=[];for(let r=0,n=i[e].normals.length;r<n;r++)t.normals.push(i[e].normals[r].clone())}this.morphTargets.push(t)}const o=e.morphNormals;for(let e=0,t=o.length;e<t;e++){const t={};if(void 0!==o[e].vertexNormals){t.vertexNormals=[];for(let r=0,n=o[e].vertexNormals.length;r<n;r++){const n=o[e].vertexNormals[r],i={};i.a=n.a.clone(),i.b=n.b.clone(),i.c=n.c.clone(),t.vertexNormals.push(i)}}if(void 0!==o[e].faceNormals){t.faceNormals=[];for(let r=0,n=o[e].faceNormals.length;r<n;r++)t.faceNormals.push(o[e].faceNormals[r].clone())}this.morphNormals.push(t)}const a=e.skinWeights;for(let e=0,t=a.length;e<t;e++)this.skinWeights.push(a[e].clone());const s=e.skinIndices;for(let e=0,t=s.length;e<t;e++)this.skinIndices.push(s[e].clone());const l=e.lineDistances;for(let e=0,t=l.length;e<t;e++)this.lineDistances.push(l[e]);const c=e.boundingBox;null!==c&&(this.boundingBox=c.clone());const u=e.boundingSphere;return null!==u&&(this.boundingSphere=u.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class BoxGeometry extends Geometry{constructor(e,t,r,n,i,o){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:o},this.fromBufferGeometry(new BoxBufferGeometry(e,t,r,n,i,o)),this.mergeVertices()}}class CircleBufferGeometry extends BufferGeometry{constructor(e=1,t=8,r=0,n=2*Math.PI){super(),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n},t=Math.max(3,t);const i=[],o=[],a=[],s=[],l=new Vector3,c=new Vector2;o.push(0,0,0),a.push(0,0,1),s.push(.5,.5);for(let i=0,u=3;i<=t;i++,u+=3){const h=r+i/t*n;l.x=e*Math.cos(h),l.y=e*Math.sin(h),o.push(l.x,l.y,l.z),a.push(0,0,1),c.x=(o[u]/e+1)/2,c.y=(o[u+1]/e+1)/2,s.push(c.x,c.y)}for(let e=1;e<=t;e++)i.push(e,e+1,0);this.setIndex(i),this.setAttribute("position",new Float32BufferAttribute(o,3)),this.setAttribute("normal",new Float32BufferAttribute(a,3)),this.setAttribute("uv",new Float32BufferAttribute(s,2))}}class CircleGeometry extends Geometry{constructor(e,t,r,n){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n},this.fromBufferGeometry(new CircleBufferGeometry(e,t,r,n)),this.mergeVertices()}}class CylinderBufferGeometry extends BufferGeometry{constructor(e=1,t=1,r=1,n=8,i=1,o=!1,a=0,s=2*Math.PI){super(),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:i,openEnded:o,thetaStart:a,thetaLength:s};const l=this;n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],d=[];let p=0;const m=[],f=r/2;let g=0;function generateCap(r){const i=p,o=new Vector2,m=new Vector3;let _=0;const y=!0===r?e:t,x=!0===r?1:-1;for(let e=1;e<=n;e++)u.push(0,f*x,0),h.push(0,x,0),d.push(.5,.5),p++;const b=p;for(let e=0;e<=n;e++){const t=e/n*s+a,r=Math.cos(t),i=Math.sin(t);m.x=y*i,m.y=f*x,m.z=y*r,u.push(m.x,m.y,m.z),h.push(0,x,0),o.x=.5*r+.5,o.y=.5*i*x+.5,d.push(o.x,o.y),p++}for(let e=0;e<n;e++){const t=i+e,n=b+e;!0===r?c.push(n,n+1,t):c.push(n+1,n,t),_+=3}l.addGroup(g,_,!0===r?1:2),g+=_}!function generateTorso(){const o=new Vector3,_=new Vector3;let y=0;const x=(t-e)/r;for(let l=0;l<=i;l++){const c=[],g=l/i,y=g*(t-e)+e;for(let e=0;e<=n;e++){const t=e/n,i=t*s+a,l=Math.sin(i),m=Math.cos(i);_.x=y*l,_.y=-g*r+f,_.z=y*m,u.push(_.x,_.y,_.z),o.set(l,x,m).normalize(),h.push(o.x,o.y,o.z),d.push(t,1-g),c.push(p++)}m.push(c)}for(let e=0;e<n;e++)for(let t=0;t<i;t++){const r=m[t][e],n=m[t+1][e],i=m[t+1][e+1],o=m[t][e+1];c.push(r,n,o),c.push(n,i,o),y+=6}l.addGroup(g,y,0),g+=y}(),!1===o&&(e>0&&generateCap(!0),t>0&&generateCap(!1)),this.setIndex(c),this.setAttribute("position",new Float32BufferAttribute(u,3)),this.setAttribute("normal",new Float32BufferAttribute(h,3)),this.setAttribute("uv",new Float32BufferAttribute(d,2))}}class CylinderGeometry extends Geometry{constructor(e,t,r,n,i,o,a,s){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:i,openEnded:o,thetaStart:a,thetaLength:s},this.fromBufferGeometry(new CylinderBufferGeometry(e,t,r,n,i,o,a,s)),this.mergeVertices()}}class ConeGeometry extends CylinderGeometry{constructor(e,t,r,n,i,o,a){super(0,e,t,r,n,i,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:o,thetaLength:a}}}class ConeBufferGeometry extends CylinderBufferGeometry{constructor(e=1,t=1,r=8,n=1,i=!1,o=0,a=2*Math.PI){super(0,e,t,r,n,i,o,a),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:o,thetaLength:a}}}class PolyhedronBufferGeometry extends BufferGeometry{constructor(e,t,r=1,n=0){super(),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:n};const i=[],o=[];function subdivideFace(e,t,r,n){const i=n+1,o=[];for(let n=0;n<=i;n++){o[n]=[];const a=e.clone().lerp(r,n/i),s=t.clone().lerp(r,n/i),l=i-n;for(let e=0;e<=l;e++)o[n][e]=0===e&&n===i?a:a.clone().lerp(s,e/l)}for(let e=0;e<i;e++)for(let t=0;t<2*(i-e)-1;t++){const r=Math.floor(t/2);t%2==0?(pushVertex(o[e][r+1]),pushVertex(o[e+1][r]),pushVertex(o[e][r])):(pushVertex(o[e][r+1]),pushVertex(o[e+1][r+1]),pushVertex(o[e+1][r]))}}function pushVertex(e){i.push(e.x,e.y,e.z)}function getVertexByIndex(t,r){const n=3*t;r.x=e[n+0],r.y=e[n+1],r.z=e[n+2]}function correctUV(e,t,r,n){n<0&&1===e.x&&(o[t]=e.x-1),0===r.x&&0===r.z&&(o[t]=n/2/Math.PI+.5)}function azimuth(e){return Math.atan2(e.z,-e.x)}!function subdivide(e){const r=new Vector3,n=new Vector3,i=new Vector3;for(let o=0;o<t.length;o+=3)getVertexByIndex(t[o+0],r),getVertexByIndex(t[o+1],n),getVertexByIndex(t[o+2],i),subdivideFace(r,n,i,e)}(n),function applyRadius(e){const t=new Vector3;for(let r=0;r<i.length;r+=3)t.x=i[r+0],t.y=i[r+1],t.z=i[r+2],t.normalize().multiplyScalar(e),i[r+0]=t.x,i[r+1]=t.y,i[r+2]=t.z}(r),function generateUVs(){const e=new Vector3;for(let r=0;r<i.length;r+=3){e.x=i[r+0],e.y=i[r+1],e.z=i[r+2];const n=azimuth(e)/2/Math.PI+.5,a=(t=e,Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5);o.push(n,1-a)}var t;(function correctUVs(){const e=new Vector3,t=new Vector3,r=new Vector3,n=new Vector3,a=new Vector2,s=new Vector2,l=new Vector2;for(let c=0,u=0;c<i.length;c+=9,u+=6){e.set(i[c+0],i[c+1],i[c+2]),t.set(i[c+3],i[c+4],i[c+5]),r.set(i[c+6],i[c+7],i[c+8]),a.set(o[u+0],o[u+1]),s.set(o[u+2],o[u+3]),l.set(o[u+4],o[u+5]),n.copy(e).add(t).add(r).divideScalar(3);const h=azimuth(n);correctUV(a,u+0,e,h),correctUV(s,u+2,t,h),correctUV(l,u+4,r,h)}})(),function correctSeam(){for(let e=0;e<o.length;e+=6){const t=o[e+0],r=o[e+2],n=o[e+4],i=Math.max(t,r,n),a=Math.min(t,r,n);i>.9&&a<.1&&(t<.2&&(o[e+0]+=1),r<.2&&(o[e+2]+=1),n<.2&&(o[e+4]+=1))}}()}(),this.setAttribute("position",new Float32BufferAttribute(i,3)),this.setAttribute("normal",new Float32BufferAttribute(i.slice(),3)),this.setAttribute("uv",new Float32BufferAttribute(o,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}}class DodecahedronBufferGeometry extends PolyhedronBufferGeometry{constructor(e=1,t=0){const r=(1+Math.sqrt(5))/2,n=1/r;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-r,0,-n,r,0,n,-r,0,n,r,-n,-r,0,-n,r,0,n,-r,0,n,r,0,-r,0,-n,r,0,-n,-r,0,n,r,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class DodecahedronGeometry extends Geometry{constructor(e,t){super(),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new DodecahedronBufferGeometry(e,t)),this.mergeVertices()}}const _v0$2=new Vector3,_v1$5=new Vector3,_normal$1=new Vector3,_triangle=new Triangle;class EdgesGeometry extends BufferGeometry{constructor(e,t){super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1,e.isGeometry&&(e=(new BufferGeometry).fromGeometry(e));const r=Math.pow(10,4),n=Math.cos(MathUtils.DEG2RAD*t),i=e.getIndex(),o=e.getAttribute("position"),a=i?i.count:o.count,s=[0,0,0],l=["a","b","c"],c=new Array(3),u={},h=[];for(let e=0;e<a;e+=3){i?(s[0]=i.getX(e),s[1]=i.getX(e+1),s[2]=i.getX(e+2)):(s[0]=e,s[1]=e+1,s[2]=e+2);const{a:t,b:a,c:d}=_triangle;if(t.fromBufferAttribute(o,s[0]),a.fromBufferAttribute(o,s[1]),d.fromBufferAttribute(o,s[2]),_triangle.getNormal(_normal$1),c[0]=`${Math.round(t.x*r)},${Math.round(t.y*r)},${Math.round(t.z*r)}`,c[1]=`${Math.round(a.x*r)},${Math.round(a.y*r)},${Math.round(a.z*r)}`,c[2]=`${Math.round(d.x*r)},${Math.round(d.y*r)},${Math.round(d.z*r)}`,c[0]!==c[1]&&c[1]!==c[2]&&c[2]!==c[0])for(let e=0;e<3;e++){const t=(e+1)%3,r=c[e],i=c[t],o=_triangle[l[e]],a=_triangle[l[t]],d=`${r}_${i}`,p=`${i}_${r}`;p in u&&u[p]?(_normal$1.dot(u[p].normal)<=n&&(h.push(o.x,o.y,o.z),h.push(a.x,a.y,a.z)),u[p]=null):d in u||(u[d]={index0:s[e],index1:s[t],normal:_normal$1.clone()})}}for(const e in u)if(u[e]){const{index0:t,index1:r}=u[e];_v0$2.fromBufferAttribute(o,t),_v1$5.fromBufferAttribute(o,r),h.push(_v0$2.x,_v0$2.y,_v0$2.z),h.push(_v1$5.x,_v1$5.y,_v1$5.z)}this.setAttribute("position",new Float32BufferAttribute(h,3))}}const Earcut={triangulate:function(e,t,r){r=r||2;const n=t&&t.length,i=n?t[0]*r:e.length;let o=linkedList(e,0,i,r,!0);const a=[];if(!o||o.next===o.prev)return a;let s,l,c,u,h,d,p;if(n&&(o=eliminateHoles(e,t,o,r)),e.length>80*r){s=c=e[0],l=u=e[1];for(let t=r;t<i;t+=r)h=e[t],d=e[t+1],h<s&&(s=h),d<l&&(l=d),h>c&&(c=h),d>u&&(u=d);p=Math.max(c-s,u-l),p=0!==p?1/p:0}return earcutLinked(o,a,r,s,l,p),a}};function linkedList(e,t,r,n,i){let o,a;if(i===signedArea(e,t,r,n)>0)for(o=t;o<r;o+=n)a=insertNode(o,e[o],e[o+1],a);else for(o=r-n;o>=t;o-=n)a=insertNode(o,e[o],e[o+1],a);return a&&equals(a,a.next)&&(removeNode(a),a=a.next),a}function filterPoints(e,t){if(!e)return e;t||(t=e);let r,n=e;do{if(r=!1,n.steiner||!equals(n,n.next)&&0!==area(n.prev,n,n.next))n=n.next;else{if(removeNode(n),n=t=n.prev,n===n.next)break;r=!0}}while(r||n!==t);return t}function earcutLinked(e,t,r,n,i,o,a){if(!e)return;!a&&o&&indexCurve(e,n,i,o);let s,l,c=e;for(;e.prev!==e.next;)if(s=e.prev,l=e.next,o?isEarHashed(e,n,i,o):isEar(e))t.push(s.i/r),t.push(e.i/r),t.push(l.i/r),removeNode(e),e=l.next,c=l.next;else if((e=l)===c){a?1===a?earcutLinked(e=cureLocalIntersections(filterPoints(e),t,r),t,r,n,i,o,2):2===a&&splitEarcut(e,t,r,n,i,o):earcutLinked(filterPoints(e),t,r,n,i,o,1);break}}function isEar(e){const t=e.prev,r=e,n=e.next;if(area(t,r,n)>=0)return!1;let i=e.next.next;for(;i!==e.prev;){if(pointInTriangle(t.x,t.y,r.x,r.y,n.x,n.y,i.x,i.y)&&area(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function isEarHashed(e,t,r,n){const i=e.prev,o=e,a=e.next;if(area(i,o,a)>=0)return!1;const s=i.x<o.x?i.x<a.x?i.x:a.x:o.x<a.x?o.x:a.x,l=i.y<o.y?i.y<a.y?i.y:a.y:o.y<a.y?o.y:a.y,c=i.x>o.x?i.x>a.x?i.x:a.x:o.x>a.x?o.x:a.x,u=i.y>o.y?i.y>a.y?i.y:a.y:o.y>a.y?o.y:a.y,h=zOrder(s,l,t,r,n),d=zOrder(c,u,t,r,n);let p=e.prevZ,m=e.nextZ;for(;p&&p.z>=h&&m&&m.z<=d;){if(p!==e.prev&&p!==e.next&&pointInTriangle(i.x,i.y,o.x,o.y,a.x,a.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,m!==e.prev&&m!==e.next&&pointInTriangle(i.x,i.y,o.x,o.y,a.x,a.y,m.x,m.y)&&area(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;p&&p.z>=h;){if(p!==e.prev&&p!==e.next&&pointInTriangle(i.x,i.y,o.x,o.y,a.x,a.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;m&&m.z<=d;){if(m!==e.prev&&m!==e.next&&pointInTriangle(i.x,i.y,o.x,o.y,a.x,a.y,m.x,m.y)&&area(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function cureLocalIntersections(e,t,r){let n=e;do{const i=n.prev,o=n.next.next;!equals(i,o)&&intersects(i,n,n.next,o)&&locallyInside(i,o)&&locallyInside(o,i)&&(t.push(i.i/r),t.push(n.i/r),t.push(o.i/r),removeNode(n),removeNode(n.next),n=e=o),n=n.next}while(n!==e);return filterPoints(n)}function splitEarcut(e,t,r,n,i,o){let a=e;do{let e=a.next.next;for(;e!==a.prev;){if(a.i!==e.i&&isValidDiagonal(a,e)){let s=splitPolygon(a,e);return a=filterPoints(a,a.next),s=filterPoints(s,s.next),earcutLinked(a,t,r,n,i,o),void earcutLinked(s,t,r,n,i,o)}e=e.next}a=a.next}while(a!==e)}function eliminateHoles(e,t,r,n){const i=[];let o,a,s,l,c;for(o=0,a=t.length;o<a;o++)s=t[o]*n,l=o<a-1?t[o+1]*n:e.length,c=linkedList(e,s,l,n,!1),c===c.next&&(c.steiner=!0),i.push(getLeftmost(c));for(i.sort(compareX),o=0;o<i.length;o++)eliminateHole(i[o],r),r=filterPoints(r,r.next);return r}function compareX(e,t){return e.x-t.x}function eliminateHole(e,t){if(t=findHoleBridge(e,t)){const r=splitPolygon(t,e);filterPoints(t,t.next),filterPoints(r,r.next)}}function findHoleBridge(e,t){let r=t;const n=e.x,i=e.y;let o,a=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){const e=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(e<=n&&e>a){if(a=e,e===n){if(i===r.y)return r;if(i===r.next.y)return r.next}o=r.x<r.next.x?r:r.next}}r=r.next}while(r!==t);if(!o)return null;if(n===a)return o;const s=o,l=o.x,c=o.y;let u,h=1/0;r=o;do{n>=r.x&&r.x>=l&&n!==r.x&&pointInTriangle(i<c?n:a,i,l,c,i<c?a:n,i,r.x,r.y)&&(u=Math.abs(i-r.y)/(n-r.x),locallyInside(r,e)&&(u<h||u===h&&(r.x>o.x||r.x===o.x&&sectorContainsSector(o,r)))&&(o=r,h=u)),r=r.next}while(r!==s);return o}function sectorContainsSector(e,t){return area(e.prev,e,t.prev)<0&&area(t.next,e,e.next)<0}function indexCurve(e,t,r,n){let i=e;do{null===i.z&&(i.z=zOrder(i.x,i.y,t,r,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,sortLinked(i)}function sortLinked(e){let t,r,n,i,o,a,s,l,c=1;do{for(r=e,e=null,o=null,a=0;r;){for(a++,n=r,s=0,t=0;t<c&&(s++,n=n.nextZ,n);t++);for(l=c;s>0||l>0&&n;)0!==s&&(0===l||!n||r.z<=n.z)?(i=r,r=r.nextZ,s--):(i=n,n=n.nextZ,l--),o?o.nextZ=i:e=i,i.prevZ=o,o=i;r=n}o.nextZ=null,c*=2}while(a>1);return e}function zOrder(e,t,r,n,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function getLeftmost(e){let t=e,r=e;do{(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),t=t.next}while(t!==e);return r}function pointInTriangle(e,t,r,n,i,o,a,s){return(i-a)*(t-s)-(e-a)*(o-s)>=0&&(e-a)*(n-s)-(r-a)*(t-s)>=0&&(r-a)*(o-s)-(i-a)*(n-s)>=0}function isValidDiagonal(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!intersectsPolygon(e,t)&&(locallyInside(e,t)&&locallyInside(t,e)&&middleInside(e,t)&&(area(e.prev,e,t.prev)||area(e,t.prev,t))||equals(e,t)&&area(e.prev,e,e.next)>0&&area(t.prev,t,t.next)>0)}function area(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function equals(e,t){return e.x===t.x&&e.y===t.y}function intersects(e,t,r,n){const i=sign(area(e,t,r)),o=sign(area(e,t,n)),a=sign(area(r,n,e)),s=sign(area(r,n,t));return i!==o&&a!==s||(!(0!==i||!onSegment(e,r,t))||(!(0!==o||!onSegment(e,n,t))||(!(0!==a||!onSegment(r,e,n))||!(0!==s||!onSegment(r,t,n)))))}function onSegment(e,t,r){return t.x<=Math.max(e.x,r.x)&&t.x>=Math.min(e.x,r.x)&&t.y<=Math.max(e.y,r.y)&&t.y>=Math.min(e.y,r.y)}function sign(e){return e>0?1:e<0?-1:0}function intersectsPolygon(e,t){let r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&intersects(r,r.next,e,t))return!0;r=r.next}while(r!==e);return!1}function locallyInside(e,t){return area(e.prev,e,e.next)<0?area(e,t,e.next)>=0&&area(e,e.prev,t)>=0:area(e,t,e.prev)<0||area(e,e.next,t)<0}function middleInside(e,t){let r=e,n=!1;const i=(e.x+t.x)/2,o=(e.y+t.y)/2;do{r.y>o!=r.next.y>o&&r.next.y!==r.y&&i<(r.next.x-r.x)*(o-r.y)/(r.next.y-r.y)+r.x&&(n=!n),r=r.next}while(r!==e);return n}function splitPolygon(e,t){const r=new Node(e.i,e.x,e.y),n=new Node(t.i,t.x,t.y),i=e.next,o=t.prev;return e.next=t,t.prev=e,r.next=i,i.prev=r,n.next=r,r.prev=n,o.next=n,n.prev=o,n}function insertNode(e,t,r,n){const i=new Node(e,t,r);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function removeNode(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Node(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function signedArea(e,t,r,n){let i=0;for(let o=t,a=r-n;o<r;o+=n)i+=(e[a]-e[o])*(e[o+1]+e[a+1]),a=o;return i}const ShapeUtils={area:function(e){const t=e.length;let r=0;for(let n=t-1,i=0;i<t;n=i++)r+=e[n].x*e[i].y-e[i].x*e[n].y;return.5*r},isClockWise:function(e){return ShapeUtils.area(e)<0},triangulateShape:function(e,t){const r=[],n=[],i=[];removeDupEndPts(e),addContour(r,e);let o=e.length;t.forEach(removeDupEndPts);for(let e=0;e<t.length;e++)n.push(o),o+=t[e].length,addContour(r,t[e]);const a=Earcut.triangulate(r,n);for(let e=0;e<a.length;e+=3)i.push(a.slice(e,e+3));return i}};function removeDupEndPts(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function addContour(e,t){for(let r=0;r<t.length;r++)e.push(t[r].x),e.push(t[r].y)}class ExtrudeBufferGeometry extends BufferGeometry{constructor(e,t){super(),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const r=this,n=[],i=[];for(let t=0,r=e.length;t<r;t++){addShape(e[t])}function addShape(e){const o=[],a=void 0!==t.curveSegments?t.curveSegments:12,s=void 0!==t.steps?t.steps:1;let l=void 0!==t.depth?t.depth:100,c=void 0===t.bevelEnabled||t.bevelEnabled,u=void 0!==t.bevelThickness?t.bevelThickness:6,h=void 0!==t.bevelSize?t.bevelSize:u-2,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3;const m=t.extrudePath,f=void 0!==t.UVGenerator?t.UVGenerator:WorldUVGenerator;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=t.amount);let g,_,y,x,b,w=!1;m&&(g=m.getSpacedPoints(s),w=!0,c=!1,_=m.computeFrenetFrames(s,!1),y=new Vector3,x=new Vector3,b=new Vector3),c||(p=0,u=0,h=0,d=0);const M=e.extractPoints(a);let S=M.shape;const T=M.holes;if(!ShapeUtils.isClockWise(S)){S=S.reverse();for(let e=0,t=T.length;e<t;e++){const t=T[e];ShapeUtils.isClockWise(t)&&(T[e]=t.reverse())}}const A=ShapeUtils.triangulateShape(S,T),E=S;for(let e=0,t=T.length;e<t;e++){const t=T[e];S=S.concat(t)}function scalePt2(e,t,r){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}const C=S.length,L=A.length;function getBevelVec(e,t,r){let n,i,o;const a=e.x-t.x,s=e.y-t.y,l=r.x-e.x,c=r.y-e.y,u=a*a+s*s,h=a*c-s*l;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(u),d=Math.sqrt(l*l+c*c),p=t.x-s/h,m=t.y+a/h,f=((r.x-c/d-p)*c-(r.y+l/d-m)*l)/(a*c-s*l);n=p+a*f-e.x,i=m+s*f-e.y;const g=n*n+i*i;if(g<=2)return new Vector2(n,i);o=Math.sqrt(g/2)}else{let e=!1;a>Number.EPSILON?l>Number.EPSILON&&(e=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(s)===Math.sign(c)&&(e=!0),e?(n=-s,i=a,o=Math.sqrt(u)):(n=a,i=s,o=Math.sqrt(u/2))}return new Vector2(n/o,i/o)}const P=[];for(let e=0,t=E.length,r=t-1,n=e+1;e<t;e++,r++,n++)r===t&&(r=0),n===t&&(n=0),P[e]=getBevelVec(E[e],E[r],E[n]);const R=[];let B,D=P.concat();for(let e=0,t=T.length;e<t;e++){const t=T[e];B=[];for(let e=0,r=t.length,n=r-1,i=e+1;e<r;e++,n++,i++)n===r&&(n=0),i===r&&(i=0),B[e]=getBevelVec(t[e],t[n],t[i]);R.push(B),D=D.concat(B)}for(let e=0;e<p;e++){const t=e/p,r=u*Math.cos(t*Math.PI/2),n=h*Math.sin(t*Math.PI/2)+d;for(let e=0,t=E.length;e<t;e++){const t=scalePt2(E[e],P[e],n);v(t.x,t.y,-r)}for(let e=0,t=T.length;e<t;e++){const t=T[e];B=R[e];for(let e=0,i=t.length;e<i;e++){const i=scalePt2(t[e],B[e],n);v(i.x,i.y,-r)}}}const O=h+d;for(let e=0;e<C;e++){const t=c?scalePt2(S[e],D[e],O):S[e];w?(x.copy(_.normals[0]).multiplyScalar(t.x),y.copy(_.binormals[0]).multiplyScalar(t.y),b.copy(g[0]).add(x).add(y),v(b.x,b.y,b.z)):v(t.x,t.y,0)}for(let e=1;e<=s;e++)for(let t=0;t<C;t++){const r=c?scalePt2(S[t],D[t],O):S[t];w?(x.copy(_.normals[e]).multiplyScalar(r.x),y.copy(_.binormals[e]).multiplyScalar(r.y),b.copy(g[e]).add(x).add(y),v(b.x,b.y,b.z)):v(r.x,r.y,l/s*e)}for(let e=p-1;e>=0;e--){const t=e/p,r=u*Math.cos(t*Math.PI/2),n=h*Math.sin(t*Math.PI/2)+d;for(let e=0,t=E.length;e<t;e++){const t=scalePt2(E[e],P[e],n);v(t.x,t.y,l+r)}for(let e=0,t=T.length;e<t;e++){const t=T[e];B=R[e];for(let e=0,i=t.length;e<i;e++){const i=scalePt2(t[e],B[e],n);w?v(i.x,i.y+g[s-1].y,g[s-1].x+r):v(i.x,i.y,l+r)}}}function sidewalls(e,t){let r=e.length;for(;--r>=0;){const n=r;let i=r-1;i<0&&(i=e.length-1);for(let e=0,r=s+2*p;e<r;e++){const r=C*e,o=C*(e+1);f4(t+n+r,t+i+r,t+i+o,t+n+o)}}}function v(e,t,r){o.push(e),o.push(t),o.push(r)}function f3(e,t,i){addVertex(e),addVertex(t),addVertex(i);const o=n.length/3,a=f.generateTopUV(r,n,o-3,o-2,o-1);addUV(a[0]),addUV(a[1]),addUV(a[2])}function f4(e,t,i,o){addVertex(e),addVertex(t),addVertex(o),addVertex(t),addVertex(i),addVertex(o);const a=n.length/3,s=f.generateSideWallUV(r,n,a-6,a-3,a-2,a-1);addUV(s[0]),addUV(s[1]),addUV(s[3]),addUV(s[1]),addUV(s[2]),addUV(s[3])}function addVertex(e){n.push(o[3*e+0]),n.push(o[3*e+1]),n.push(o[3*e+2])}function addUV(e){i.push(e.x),i.push(e.y)}!function buildLidFaces(){const e=n.length/3;if(c){let e=0,t=C*e;for(let e=0;e<L;e++){const r=A[e];f3(r[2]+t,r[1]+t,r[0]+t)}e=s+2*p,t=C*e;for(let e=0;e<L;e++){const r=A[e];f3(r[0]+t,r[1]+t,r[2]+t)}}else{for(let e=0;e<L;e++){const t=A[e];f3(t[2],t[1],t[0])}for(let e=0;e<L;e++){const t=A[e];f3(t[0]+C*s,t[1]+C*s,t[2]+C*s)}}r.addGroup(e,n.length/3-e,0)}(),function buildSideFaces(){const e=n.length/3;let t=0;sidewalls(E,t),t+=E.length;for(let e=0,r=T.length;e<r;e++){const r=T[e];sidewalls(r,t),t+=r.length}r.addGroup(e,n.length/3-e,1)}()}this.setAttribute("position",new Float32BufferAttribute(n,3)),this.setAttribute("uv",new Float32BufferAttribute(i,2)),this.computeVertexNormals()}toJSON(){const e=BufferGeometry.prototype.toJSON.call(this);return toJSON(this.parameters.shapes,this.parameters.options,e)}}const WorldUVGenerator={generateTopUV:function(e,t,r,n,i){const o=t[3*r],a=t[3*r+1],s=t[3*n],l=t[3*n+1],c=t[3*i],u=t[3*i+1];return[new Vector2(o,a),new Vector2(s,l),new Vector2(c,u)]},generateSideWallUV:function(e,t,r,n,i,o){const a=t[3*r],s=t[3*r+1],l=t[3*r+2],c=t[3*n],u=t[3*n+1],h=t[3*n+2],d=t[3*i],p=t[3*i+1],m=t[3*i+2],f=t[3*o],g=t[3*o+1],_=t[3*o+2];return Math.abs(s-u)<.01?[new Vector2(a,1-l),new Vector2(c,1-h),new Vector2(d,1-m),new Vector2(f,1-_)]:[new Vector2(s,1-l),new Vector2(u,1-h),new Vector2(p,1-m),new Vector2(g,1-_)]}};function toJSON(e,t,r){if(r.shapes=[],Array.isArray(e))for(let t=0,n=e.length;t<n;t++){const n=e[t];r.shapes.push(n.uuid)}else r.shapes.push(e.uuid);return void 0!==t.extrudePath&&(r.options.extrudePath=t.extrudePath.toJSON()),r}class ExtrudeGeometry extends Geometry{constructor(e,t){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new ExtrudeBufferGeometry(e,t)),this.mergeVertices()}toJSON(){const e=super.toJSON();return toJSON$1(this.parameters.shapes,this.parameters.options,e)}}function toJSON$1(e,t,r){if(r.shapes=[],Array.isArray(e))for(let t=0,n=e.length;t<n;t++){const n=e[t];r.shapes.push(n.uuid)}else r.shapes.push(e.uuid);return void 0!==t.extrudePath&&(r.options.extrudePath=t.extrudePath.toJSON()),r}class IcosahedronBufferGeometry extends PolyhedronBufferGeometry{constructor(e=1,t=0){const r=(1+Math.sqrt(5))/2;super([-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class IcosahedronGeometry extends Geometry{constructor(e,t){super(),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new IcosahedronBufferGeometry(e,t)),this.mergeVertices()}}class LatheBufferGeometry extends BufferGeometry{constructor(e,t=12,r=0,n=2*Math.PI){super(),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:n},t=Math.floor(t),n=MathUtils.clamp(n,0,2*Math.PI);const i=[],o=[],a=[],s=1/t,l=new Vector3,c=new Vector2;for(let i=0;i<=t;i++){const u=r+i*s*n,h=Math.sin(u),d=Math.cos(u);for(let r=0;r<=e.length-1;r++)l.x=e[r].x*h,l.y=e[r].y,l.z=e[r].x*d,o.push(l.x,l.y,l.z),c.x=i/t,c.y=r/(e.length-1),a.push(c.x,c.y)}for(let r=0;r<t;r++)for(let t=0;t<e.length-1;t++){const n=t+r*e.length,o=n,a=n+e.length,s=n+e.length+1,l=n+1;i.push(o,a,l),i.push(a,s,l)}if(this.setIndex(i),this.setAttribute("position",new Float32BufferAttribute(o,3)),this.setAttribute("uv",new Float32BufferAttribute(a,2)),this.computeVertexNormals(),n===2*Math.PI){const r=this.attributes.normal.array,n=new Vector3,i=new Vector3,o=new Vector3,a=t*e.length*3;for(let t=0,s=0;t<e.length;t++,s+=3)n.x=r[s+0],n.y=r[s+1],n.z=r[s+2],i.x=r[a+s+0],i.y=r[a+s+1],i.z=r[a+s+2],o.addVectors(n,i).normalize(),r[s+0]=r[a+s+0]=o.x,r[s+1]=r[a+s+1]=o.y,r[s+2]=r[a+s+2]=o.z}}}class LatheGeometry extends Geometry{constructor(e,t,r,n){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:n},this.fromBufferGeometry(new LatheBufferGeometry(e,t,r,n)),this.mergeVertices()}}class OctahedronBufferGeometry extends PolyhedronBufferGeometry{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class OctahedronGeometry extends Geometry{constructor(e,t){super(),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new OctahedronBufferGeometry(e,t)),this.mergeVertices()}}function ParametricBufferGeometry(e,t,r){BufferGeometry.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:r};const n=[],i=[],o=[],a=[],s=1e-5,l=new Vector3,c=new Vector3,u=new Vector3,h=new Vector3,d=new Vector3;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const p=t+1;for(let n=0;n<=r;n++){const p=n/r;for(let r=0;r<=t;r++){const n=r/t;e(n,p,c),i.push(c.x,c.y,c.z),n-s>=0?(e(n-s,p,u),h.subVectors(c,u)):(e(n+s,p,u),h.subVectors(u,c)),p-s>=0?(e(n,p-s,u),d.subVectors(c,u)):(e(n,p+s,u),d.subVectors(u,c)),l.crossVectors(h,d).normalize(),o.push(l.x,l.y,l.z),a.push(n,p)}}for(let e=0;e<r;e++)for(let r=0;r<t;r++){const t=e*p+r,i=e*p+r+1,o=(e+1)*p+r+1,a=(e+1)*p+r;n.push(t,i,a),n.push(i,o,a)}this.setIndex(n),this.setAttribute("position",new Float32BufferAttribute(i,3)),this.setAttribute("normal",new Float32BufferAttribute(o,3)),this.setAttribute("uv",new Float32BufferAttribute(a,2))}function ParametricGeometry(e,t,r){Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:r},this.fromBufferGeometry(new ParametricBufferGeometry(e,t,r)),this.mergeVertices()}ParametricBufferGeometry.prototype=Object.create(BufferGeometry.prototype),ParametricBufferGeometry.prototype.constructor=ParametricBufferGeometry,ParametricGeometry.prototype=Object.create(Geometry.prototype),ParametricGeometry.prototype.constructor=ParametricGeometry;class PlaneGeometry extends Geometry{constructor(e,t,r,n){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n},this.fromBufferGeometry(new PlaneBufferGeometry(e,t,r,n)),this.mergeVertices()}}class PolyhedronGeometry extends Geometry{constructor(e,t,r,n){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:n},this.fromBufferGeometry(new PolyhedronBufferGeometry(e,t,r,n)),this.mergeVertices()}}class RingBufferGeometry extends BufferGeometry{constructor(e=.5,t=1,r=8,n=1,i=0,o=2*Math.PI){super(),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:o},r=Math.max(3,r);const a=[],s=[],l=[],c=[];let u=e;const h=(t-e)/(n=Math.max(1,n)),d=new Vector3,p=new Vector2;for(let e=0;e<=n;e++){for(let e=0;e<=r;e++){const n=i+e/r*o;d.x=u*Math.cos(n),d.y=u*Math.sin(n),s.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,c.push(p.x,p.y)}u+=h}for(let e=0;e<n;e++){const t=e*(r+1);for(let e=0;e<r;e++){const n=e+t,i=n,o=n+r+1,s=n+r+2,l=n+1;a.push(i,o,l),a.push(o,s,l)}}this.setIndex(a),this.setAttribute("position",new Float32BufferAttribute(s,3)),this.setAttribute("normal",new Float32BufferAttribute(l,3)),this.setAttribute("uv",new Float32BufferAttribute(c,2))}}class RingGeometry extends Geometry{constructor(e,t,r,n,i,o){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:o},this.fromBufferGeometry(new RingBufferGeometry(e,t,r,n,i,o)),this.mergeVertices()}}class ShapeBufferGeometry extends BufferGeometry{constructor(e,t=12){super(),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t};const r=[],n=[],i=[],o=[];let a=0,s=0;if(!1===Array.isArray(e))addShape(e);else for(let t=0;t<e.length;t++)addShape(e[t]),this.addGroup(a,s,t),a+=s,s=0;function addShape(e){const a=n.length/3,l=e.extractPoints(t);let c=l.shape;const u=l.holes;!1===ShapeUtils.isClockWise(c)&&(c=c.reverse());for(let e=0,t=u.length;e<t;e++){const t=u[e];!0===ShapeUtils.isClockWise(t)&&(u[e]=t.reverse())}const h=ShapeUtils.triangulateShape(c,u);for(let e=0,t=u.length;e<t;e++){const t=u[e];c=c.concat(t)}for(let e=0,t=c.length;e<t;e++){const t=c[e];n.push(t.x,t.y,0),i.push(0,0,1),o.push(t.x,t.y)}for(let e=0,t=h.length;e<t;e++){const t=h[e],n=t[0]+a,i=t[1]+a,o=t[2]+a;r.push(n,i,o),s+=3}}this.setIndex(r),this.setAttribute("position",new Float32BufferAttribute(n,3)),this.setAttribute("normal",new Float32BufferAttribute(i,3)),this.setAttribute("uv",new Float32BufferAttribute(o,2))}toJSON(){const e=BufferGeometry.prototype.toJSON.call(this);return toJSON$2(this.parameters.shapes,e)}}function toJSON$2(e,t){if(t.shapes=[],Array.isArray(e))for(let r=0,n=e.length;r<n;r++){const n=e[r];t.shapes.push(n.uuid)}else t.shapes.push(e.uuid);return t}class ShapeGeometry extends Geometry{constructor(e,t){super(),this.type="ShapeGeometry","object"==typeof t&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new ShapeBufferGeometry(e,t)),this.mergeVertices()}toJSON(){const e=Geometry.prototype.toJSON.call(this);return toJSON$3(this.parameters.shapes,e)}}function toJSON$3(e,t){if(t.shapes=[],Array.isArray(e))for(let r=0,n=e.length;r<n;r++){const n=e[r];t.shapes.push(n.uuid)}else t.shapes.push(e.uuid);return t}class SphereBufferGeometry extends BufferGeometry{constructor(e=1,t=8,r=6,n=0,i=2*Math.PI,o=0,a=Math.PI){super(),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:i,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),r=Math.max(2,Math.floor(r));const s=Math.min(o+a,Math.PI);let l=0;const c=[],u=new Vector3,h=new Vector3,d=[],p=[],m=[],f=[];for(let d=0;d<=r;d++){const g=[],_=d/r;let y=0;0==d&&0==o?y=.5/t:d==r&&s==Math.PI&&(y=-.5/t);for(let r=0;r<=t;r++){const s=r/t;u.x=-e*Math.cos(n+s*i)*Math.sin(o+_*a),u.y=e*Math.cos(o+_*a),u.z=e*Math.sin(n+s*i)*Math.sin(o+_*a),p.push(u.x,u.y,u.z),h.copy(u).normalize(),m.push(h.x,h.y,h.z),f.push(s+y,1-_),g.push(l++)}c.push(g)}for(let e=0;e<r;e++)for(let n=0;n<t;n++){const t=c[e][n+1],i=c[e][n],a=c[e+1][n],l=c[e+1][n+1];(0!==e||o>0)&&d.push(t,i,l),(e!==r-1||s<Math.PI)&&d.push(i,a,l)}this.setIndex(d),this.setAttribute("position",new Float32BufferAttribute(p,3)),this.setAttribute("normal",new Float32BufferAttribute(m,3)),this.setAttribute("uv",new Float32BufferAttribute(f,2))}}class SphereGeometry extends Geometry{constructor(e,t,r,n,i,o,a){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:i,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new SphereBufferGeometry(e,t,r,n,i,o,a)),this.mergeVertices()}}class TetrahedronBufferGeometry extends PolyhedronBufferGeometry{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class TetrahedronGeometry extends Geometry{constructor(e,t){super(),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new TetrahedronBufferGeometry(e,t)),this.mergeVertices()}}class TextBufferGeometry extends ExtrudeBufferGeometry{constructor(e,t={}){const r=t.font;if(!r||!r.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new BufferGeometry;const n=r.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(n,t),this.type="TextBufferGeometry"}}class TextGeometry extends Geometry{constructor(e,t){super(),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new TextBufferGeometry(e,t)),this.mergeVertices()}}class TorusBufferGeometry extends BufferGeometry{constructor(e=1,t=.4,r=8,n=6,i=2*Math.PI){super(),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:i},r=Math.floor(r),n=Math.floor(n);const o=[],a=[],s=[],l=[],c=new Vector3,u=new Vector3,h=new Vector3;for(let o=0;o<=r;o++)for(let d=0;d<=n;d++){const p=d/n*i,m=o/r*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(p),u.y=(e+t*Math.cos(m))*Math.sin(p),u.z=t*Math.sin(m),a.push(u.x,u.y,u.z),c.x=e*Math.cos(p),c.y=e*Math.sin(p),h.subVectors(u,c).normalize(),s.push(h.x,h.y,h.z),l.push(d/n),l.push(o/r)}for(let e=1;e<=r;e++)for(let t=1;t<=n;t++){const r=(n+1)*e+t-1,i=(n+1)*(e-1)+t-1,a=(n+1)*(e-1)+t,s=(n+1)*e+t;o.push(r,i,s),o.push(i,a,s)}this.setIndex(o),this.setAttribute("position",new Float32BufferAttribute(a,3)),this.setAttribute("normal",new Float32BufferAttribute(s,3)),this.setAttribute("uv",new Float32BufferAttribute(l,2))}}class TorusGeometry extends Geometry{constructor(e,t,r,n,i){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:i},this.fromBufferGeometry(new TorusBufferGeometry(e,t,r,n,i)),this.mergeVertices()}}class TorusKnotBufferGeometry extends BufferGeometry{constructor(e=1,t=.4,r=64,n=8,i=2,o=3){super(),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:i,q:o},r=Math.floor(r),n=Math.floor(n);const a=[],s=[],l=[],c=[],u=new Vector3,h=new Vector3,d=new Vector3,p=new Vector3,m=new Vector3,f=new Vector3,g=new Vector3;for(let a=0;a<=r;++a){const _=a/r*i*Math.PI*2;calculatePositionOnCurve(_,i,o,e,d),calculatePositionOnCurve(_+.01,i,o,e,p),f.subVectors(p,d),g.addVectors(p,d),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let e=0;e<=n;++e){const i=e/n*Math.PI*2,o=-t*Math.cos(i),p=t*Math.sin(i);u.x=d.x+(o*g.x+p*m.x),u.y=d.y+(o*g.y+p*m.y),u.z=d.z+(o*g.z+p*m.z),s.push(u.x,u.y,u.z),h.subVectors(u,d).normalize(),l.push(h.x,h.y,h.z),c.push(a/r),c.push(e/n)}}for(let e=1;e<=r;e++)for(let t=1;t<=n;t++){const r=(n+1)*(e-1)+(t-1),i=(n+1)*e+(t-1),o=(n+1)*e+t,s=(n+1)*(e-1)+t;a.push(r,i,s),a.push(i,o,s)}function calculatePositionOnCurve(e,t,r,n,i){const o=Math.cos(e),a=Math.sin(e),s=r/t*e,l=Math.cos(s);i.x=n*(2+l)*.5*o,i.y=n*(2+l)*a*.5,i.z=n*Math.sin(s)*.5}this.setIndex(a),this.setAttribute("position",new Float32BufferAttribute(s,3)),this.setAttribute("normal",new Float32BufferAttribute(l,3)),this.setAttribute("uv",new Float32BufferAttribute(c,2))}}class TorusKnotGeometry extends Geometry{constructor(e,t,r,n,i,o,a){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:i,q:o},void 0!==a&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new TorusKnotBufferGeometry(e,t,r,n,i,o)),this.mergeVertices()}}class TubeBufferGeometry extends BufferGeometry{constructor(e,t=64,r=1,n=8,i=!1){super(),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:n,closed:i};const o=e.computeFrenetFrames(t,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new Vector3,s=new Vector3,l=new Vector2;let c=new Vector3;const u=[],h=[],d=[],p=[];function generateSegment(i){c=e.getPointAt(i/t,c);const l=o.normals[i],d=o.binormals[i];for(let e=0;e<=n;e++){const t=e/n*Math.PI*2,i=Math.sin(t),o=-Math.cos(t);s.x=o*l.x+i*d.x,s.y=o*l.y+i*d.y,s.z=o*l.z+i*d.z,s.normalize(),h.push(s.x,s.y,s.z),a.x=c.x+r*s.x,a.y=c.y+r*s.y,a.z=c.z+r*s.z,u.push(a.x,a.y,a.z)}}!function generateBufferData(){for(let e=0;e<t;e++)generateSegment(e);generateSegment(!1===i?t:0),function generateUVs(){for(let e=0;e<=t;e++)for(let r=0;r<=n;r++)l.x=e/t,l.y=r/n,d.push(l.x,l.y)}(),function generateIndices(){for(let e=1;e<=t;e++)for(let t=1;t<=n;t++){const r=(n+1)*(e-1)+(t-1),i=(n+1)*e+(t-1),o=(n+1)*e+t,a=(n+1)*(e-1)+t;p.push(r,i,a),p.push(i,o,a)}}()}(),this.setIndex(p),this.setAttribute("position",new Float32BufferAttribute(u,3)),this.setAttribute("normal",new Float32BufferAttribute(h,3)),this.setAttribute("uv",new Float32BufferAttribute(d,2))}toJSON(){const e=BufferGeometry.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class TubeGeometry extends Geometry{constructor(e,t,r,n,i,o){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:n,closed:i},void 0!==o&&console.warn("THREE.TubeGeometry: taper has been removed.");const a=new TubeBufferGeometry(e,t,r,n,i);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals,this.fromBufferGeometry(a),this.mergeVertices()}}class WireframeGeometry extends BufferGeometry{constructor(e){super(),this.type="WireframeGeometry";const t=[],r=[0,0],n={},i=["a","b","c"];if(e&&e.isGeometry){const o=e.faces;for(let e=0,t=o.length;e<t;e++){const t=o[e];for(let e=0;e<3;e++){const o=t[i[e]],a=t[i[(e+1)%3]];r[0]=Math.min(o,a),r[1]=Math.max(o,a);const s=r[0]+","+r[1];void 0===n[s]&&(n[s]={index1:r[0],index2:r[1]})}}for(const r in n){const i=n[r];let o=e.vertices[i.index1];t.push(o.x,o.y,o.z),o=e.vertices[i.index2],t.push(o.x,o.y,o.z)}}else if(e&&e.isBufferGeometry){const i=new Vector3;if(null!==e.index){const o=e.attributes.position,a=e.index;let s=e.groups;0===s.length&&(s=[{start:0,count:a.count,materialIndex:0}]);for(let e=0,t=s.length;e<t;++e){const t=s[e],i=t.start;for(let e=i,o=i+t.count;e<o;e+=3)for(let t=0;t<3;t++){const i=a.getX(e+t),o=a.getX(e+(t+1)%3);r[0]=Math.min(i,o),r[1]=Math.max(i,o);const s=r[0]+","+r[1];void 0===n[s]&&(n[s]={index1:r[0],index2:r[1]})}}for(const e in n){const r=n[e];i.fromBufferAttribute(o,r.index1),t.push(i.x,i.y,i.z),i.fromBufferAttribute(o,r.index2),t.push(i.x,i.y,i.z)}}else{const r=e.attributes.position;for(let e=0,n=r.count/3;e<n;e++)for(let n=0;n<3;n++){const o=3*e+n;i.fromBufferAttribute(r,o),t.push(i.x,i.y,i.z);const a=3*e+(n+1)%3;i.fromBufferAttribute(r,a),t.push(i.x,i.y,i.z)}}}this.setAttribute("position",new Float32BufferAttribute(t,3))}}var Geometries=Object.freeze({__proto__:null,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxBufferGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleBufferGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeBufferGeometry,CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderBufferGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronBufferGeometry,EdgesGeometry:EdgesGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeBufferGeometry,IcosahedronGeometry:IcosahedronGeometry,IcosahedronBufferGeometry:IcosahedronBufferGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheBufferGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronBufferGeometry,ParametricGeometry:ParametricGeometry,ParametricBufferGeometry:ParametricBufferGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneBufferGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronBufferGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingBufferGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeBufferGeometry,SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereBufferGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronBufferGeometry,TextGeometry:TextGeometry,TextBufferGeometry:TextBufferGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusBufferGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotBufferGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeBufferGeometry,WireframeGeometry:WireframeGeometry});function ShadowMaterial(e){Material.call(this),this.type="ShadowMaterial",this.color=new Color(0),this.transparent=!0,this.setValues(e)}function RawShaderMaterial(e){ShaderMaterial.call(this,e),this.type="RawShaderMaterial"}function MeshStandardMaterial(e){Material.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Color(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}function MeshPhysicalMaterial(e){MeshStandardMaterial.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Vector2(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=MathUtils.clamp(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}function MeshPhongMaterial(e){Material.call(this),this.type="MeshPhongMaterial",this.color=new Color(16777215),this.specular=new Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshToonMaterial(e){Material.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Color(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshNormalMaterial(e){Material.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshLambertMaterial(e){Material.call(this),this.type="MeshLambertMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshMatcapMaterial(e){Material.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Color(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function LineDashedMaterial(e){LineBasicMaterial.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}ShadowMaterial.prototype=Object.create(Material.prototype),ShadowMaterial.prototype.constructor=ShadowMaterial,ShadowMaterial.prototype.isShadowMaterial=!0,ShadowMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this},RawShaderMaterial.prototype=Object.create(ShaderMaterial.prototype),RawShaderMaterial.prototype.constructor=RawShaderMaterial,RawShaderMaterial.prototype.isRawShaderMaterial=!0,MeshStandardMaterial.prototype=Object.create(Material.prototype),MeshStandardMaterial.prototype.constructor=MeshStandardMaterial,MeshStandardMaterial.prototype.isMeshStandardMaterial=!0,MeshStandardMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this},MeshPhysicalMaterial.prototype=Object.create(MeshStandardMaterial.prototype),MeshPhysicalMaterial.prototype.constructor=MeshPhysicalMaterial,MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=!0,MeshPhysicalMaterial.prototype.copy=function(e){return MeshStandardMaterial.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new Color).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this},MeshPhongMaterial.prototype=Object.create(Material.prototype),MeshPhongMaterial.prototype.constructor=MeshPhongMaterial,MeshPhongMaterial.prototype.isMeshPhongMaterial=!0,MeshPhongMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshToonMaterial.prototype=Object.create(Material.prototype),MeshToonMaterial.prototype.constructor=MeshToonMaterial,MeshToonMaterial.prototype.isMeshToonMaterial=!0,MeshToonMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshNormalMaterial.prototype=Object.create(Material.prototype),MeshNormalMaterial.prototype.constructor=MeshNormalMaterial,MeshNormalMaterial.prototype.isMeshNormalMaterial=!0,MeshNormalMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshLambertMaterial.prototype=Object.create(Material.prototype),MeshLambertMaterial.prototype.constructor=MeshLambertMaterial,MeshLambertMaterial.prototype.isMeshLambertMaterial=!0,MeshLambertMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshMatcapMaterial.prototype=Object.create(Material.prototype),MeshMatcapMaterial.prototype.constructor=MeshMatcapMaterial,MeshMatcapMaterial.prototype.isMeshMatcapMaterial=!0,MeshMatcapMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},LineDashedMaterial.prototype=Object.create(LineBasicMaterial.prototype),LineDashedMaterial.prototype.constructor=LineDashedMaterial,LineDashedMaterial.prototype.isLineDashedMaterial=!0,LineDashedMaterial.prototype.copy=function(e){return LineBasicMaterial.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var Materials=Object.freeze({__proto__:null,ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material});const AnimationUtils={arraySlice:function(e,t,r){return AnimationUtils.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==r?r:e.length)):e.slice(t,r)},convertArray:function(e,t,r){return!e||!r&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){const t=e.length,r=new Array(t);for(let e=0;e!==t;++e)r[e]=e;return r.sort((function compareTime(t,r){return e[t]-e[r]})),r},sortedArray:function(e,t,r){const n=e.length,i=new e.constructor(n);for(let o=0,a=0;a!==n;++o){const n=r[o]*t;for(let r=0;r!==t;++r)i[a++]=e[n+r]}return i},flattenJSON:function(e,t,r,n){let i=1,o=e[0];for(;void 0!==o&&void 0===o[n];)o=e[i++];if(void 0===o)return;let a=o[n];if(void 0!==a)if(Array.isArray(a))do{a=o[n],void 0!==a&&(t.push(o.time),r.push.apply(r,a)),o=e[i++]}while(void 0!==o);else if(void 0!==a.toArray)do{a=o[n],void 0!==a&&(t.push(o.time),a.toArray(r,r.length)),o=e[i++]}while(void 0!==o);else do{a=o[n],void 0!==a&&(t.push(o.time),r.push(a)),o=e[i++]}while(void 0!==o)},subclip:function(e,t,r,n,i=30){const o=e.clone();o.name=t;const a=[];for(let e=0;e<o.tracks.length;++e){const t=o.tracks[e],s=t.getValueSize(),l=[],c=[];for(let e=0;e<t.times.length;++e){const o=t.times[e]*i;if(!(o<r||o>=n)){l.push(t.times[e]);for(let r=0;r<s;++r)c.push(t.values[e*s+r])}}0!==l.length&&(t.times=AnimationUtils.convertArray(l,t.times.constructor),t.values=AnimationUtils.convertArray(c,t.values.constructor),a.push(t))}o.tracks=a;let s=1/0;for(let e=0;e<o.tracks.length;++e)s>o.tracks[e].times[0]&&(s=o.tracks[e].times[0]);for(let e=0;e<o.tracks.length;++e)o.tracks[e].shift(-1*s);return o.resetDuration(),o},makeClipAdditive:function(e,t=0,r=e,n=30){n<=0&&(n=30);const i=r.tracks.length,o=t/n;for(let t=0;t<i;++t){const n=r.tracks[t],i=n.ValueTypeName;if("bool"===i||"string"===i)continue;const a=e.tracks.find((function(e){return e.name===n.name&&e.ValueTypeName===i}));if(void 0===a)continue;let s=0;const l=n.getValueSize();n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(s=l/3);let c=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=u/3);const h=n.times.length-1;let d;if(o<=n.times[0]){const e=s,t=l-s;d=AnimationUtils.arraySlice(n.values,e,t)}else if(o>=n.times[h]){const e=h*l+s,t=e+l-s;d=AnimationUtils.arraySlice(n.values,e,t)}else{const e=n.createInterpolant(),t=s,r=l-s;e.evaluate(o),d=AnimationUtils.arraySlice(e.resultBuffer,t,r)}if("quaternion"===i){(new Quaternion).fromArray(d).normalize().conjugate().toArray(d)}const p=a.times.length;for(let e=0;e<p;++e){const t=e*u+c;if("quaternion"===i)Quaternion.multiplyQuaternionsFlat(a.values,t,d,0,a.values,t);else{const e=u-2*c;for(let r=0;r<e;++r)a.values[t+r]-=d[r]}}}return e.blendMode=2501,e}};function Interpolant(e,t,r,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(r),this.sampleValues=t,this.valueSize=r}function CubicInterpolant(e,t,r,n){Interpolant.call(this,e,t,r,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function LinearInterpolant(e,t,r,n){Interpolant.call(this,e,t,r,n)}function DiscreteInterpolant(e,t,r,n){Interpolant.call(this,e,t,r,n)}function KeyframeTrack(e,t,r,n){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=AnimationUtils.convertArray(t,this.TimeBufferType),this.values=AnimationUtils.convertArray(r,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}function BooleanKeyframeTrack(e,t,r){KeyframeTrack.call(this,e,t,r)}function ColorKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function NumberKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function QuaternionLinearInterpolant(e,t,r,n){Interpolant.call(this,e,t,r,n)}function QuaternionKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function StringKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function VectorKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function AnimationClip(e,t=-1,r,n=2500){this.name=e,this.tracks=r,this.duration=t,this.blendMode=n,this.uuid=MathUtils.generateUUID(),this.duration<0&&this.resetDuration()}function getTrackTypeForValueTypeName(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return VectorKeyframeTrack;case"color":return ColorKeyframeTrack;case"quaternion":return QuaternionKeyframeTrack;case"bool":case"boolean":return BooleanKeyframeTrack;case"string":return StringKeyframeTrack}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function parseKeyframeTrack(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=getTrackTypeForValueTypeName(e.type);if(void 0===e.times){const t=[],r=[];AnimationUtils.flattenJSON(e.keys,t,r,"value"),e.times=t,e.values=r}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign(Interpolant.prototype,{evaluate:function(e){const t=this.parameterPositions;let r=this._cachedIndex,n=t[r],i=t[r-1];e:{t:{let o;r:{n:if(!(e<n)){for(let o=r+2;;){if(void 0===n){if(e<i)break n;return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,e,i)}if(r===o)break;if(i=n,n=t[++r],e<n)break t}o=t.length;break r}if(e>=i)break e;{const a=t[1];e<a&&(r=2,i=a);for(let o=r-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,n);if(r===o)break;if(n=i,i=t[--r-1],e>=i)break t}o=r,r=0}}for(;r<o;){const n=r+o>>>1;e<t[n]?o=n:r=n+1}if(n=t[r],i=t[r-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,n);if(void 0===n)return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,i,e)}this._cachedIndex=r,this.intervalChanged_(r,i,n)}return this.interpolate_(r,i,e,n)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,r=this.sampleValues,n=this.valueSize,i=e*n;for(let e=0;e!==n;++e)t[e]=r[i+e];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Interpolant.prototype,{beforeStart_:Interpolant.prototype.copySampleValue_,afterEnd_:Interpolant.prototype.copySampleValue_}),CubicInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:CubicInterpolant,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(e,t,r){const n=this.parameterPositions;let i=e-2,o=e+1,a=n[i],s=n[o];if(void 0===a)switch(this.getSettings_().endingStart){case 2401:i=e,a=2*t-r;break;case 2402:i=n.length-2,a=t+n[i]-n[i+1];break;default:i=e,a=r}if(void 0===s)switch(this.getSettings_().endingEnd){case 2401:o=e,s=2*r-t;break;case 2402:o=1,s=r+n[1]-n[0];break;default:o=e-1,s=t}const l=.5*(r-t),c=this.valueSize;this._weightPrev=l/(t-a),this._weightNext=l/(s-r),this._offsetPrev=i*c,this._offsetNext=o*c},interpolate_:function(e,t,r,n){const i=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=e*a,l=s-a,c=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(r-t)/(n-t),m=p*p,f=m*p,g=-h*f+2*h*m-h*p,_=(1+h)*f+(-1.5-2*h)*m+(-.5+h)*p+1,y=(-1-d)*f+(1.5+d)*m+.5*p,x=d*f-d*m;for(let e=0;e!==a;++e)i[e]=g*o[c+e]+_*o[l+e]+y*o[s+e]+x*o[u+e];return i}}),LinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:LinearInterpolant,interpolate_:function(e,t,r,n){const i=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=e*a,l=s-a,c=(r-t)/(n-t),u=1-c;for(let e=0;e!==a;++e)i[e]=o[l+e]*u+o[s+e]*c;return i}}),DiscreteInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:DiscreteInterpolant,interpolate_:function(e){return this.copySampleValue_(e-1)}}),Object.assign(KeyframeTrack,{toJSON:function(e){const t=e.constructor;let r;if(void 0!==t.toJSON)r=t.toJSON(e);else{r={name:e.name,times:AnimationUtils.convertArray(e.times,Array),values:AnimationUtils.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(r.interpolation=t)}return r.type=e.ValueTypeName,r}}),Object.assign(KeyframeTrack.prototype,{constructor:KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(e){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new LinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new CubicInterpolant(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e){const t=this.times;for(let r=0,n=t.length;r!==n;++r)t[r]+=e}return this},scale:function(e){if(1!==e){const t=this.times;for(let r=0,n=t.length;r!==n;++r)t[r]*=e}return this},trim:function(e,t){const r=this.times,n=r.length;let i=0,o=n-1;for(;i!==n&&r[i]<e;)++i;for(;-1!==o&&r[o]>t;)--o;if(++o,0!==i||o!==n){i>=o&&(o=Math.max(o,1),i=o-1);const e=this.getValueSize();this.times=AnimationUtils.arraySlice(r,i,o),this.values=AnimationUtils.arraySlice(this.values,i*e,o*e)}return this},validate:function(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const r=this.times,n=this.values,i=r.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let t=0;t!==i;t++){const n=r[t];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,n),e=!1;break}if(null!==o&&o>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,n,o),e=!1;break}o=n}if(void 0!==n&&AnimationUtils.isTypedArray(n))for(let t=0,r=n.length;t!==r;++t){const r=n[t];if(isNaN(r)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,r),e=!1;break}}return e},optimize:function(){const e=AnimationUtils.arraySlice(this.times),t=AnimationUtils.arraySlice(this.values),r=this.getValueSize(),n=2302===this.getInterpolation(),i=e.length-1;let o=1;for(let a=1;a<i;++a){let i=!1;const s=e[a];if(s!==e[a+1]&&(1!==a||s!==s[0]))if(n)i=!0;else{const e=a*r,n=e-r,o=e+r;for(let a=0;a!==r;++a){const r=t[e+a];if(r!==t[n+a]||r!==t[o+a]){i=!0;break}}}if(i){if(a!==o){e[o]=e[a];const n=a*r,i=o*r;for(let e=0;e!==r;++e)t[i+e]=t[n+e]}++o}}if(i>0){e[o]=e[i];for(let e=i*r,n=o*r,a=0;a!==r;++a)t[n+a]=t[e+a];++o}return o!==e.length?(this.times=AnimationUtils.arraySlice(e,0,o),this.values=AnimationUtils.arraySlice(t,0,o*r)):(this.times=e,this.values=t),this},clone:function(){const e=AnimationUtils.arraySlice(this.times,0),t=AnimationUtils.arraySlice(this.values,0),r=new(0,this.constructor)(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}),BooleanKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),ColorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:ColorKeyframeTrack,ValueTypeName:"color"}),NumberKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:NumberKeyframeTrack,ValueTypeName:"number"}),QuaternionLinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:QuaternionLinearInterpolant,interpolate_:function(e,t,r,n){const i=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=(r-t)/(n-t);let l=e*a;for(let e=l+a;l!==e;l+=4)Quaternion.slerpFlat(i,0,o,l-a,o,l,s);return i}}),QuaternionKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(e){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),StringKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),VectorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:VectorKeyframeTrack,ValueTypeName:"vector"}),Object.assign(AnimationClip,{parse:function(e){const t=[],r=e.tracks,n=1/(e.fps||1);for(let e=0,i=r.length;e!==i;++e)t.push(parseKeyframeTrack(r[e]).scale(n));const i=new AnimationClip(e.name,e.duration,t,e.blendMode);return i.uuid=e.uuid,i},toJSON:function(e){const t=[],r=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,n=r.length;e!==n;++e)t.push(KeyframeTrack.toJSON(r[e]));return n},CreateFromMorphTargetSequence:function(e,t,r,n){const i=t.length,o=[];for(let e=0;e<i;e++){let a=[],s=[];a.push((e+i-1)%i,e,(e+1)%i),s.push(0,1,0);const l=AnimationUtils.getKeyframeOrder(a);a=AnimationUtils.sortedArray(a,1,l),s=AnimationUtils.sortedArray(s,1,l),n||0!==a[0]||(a.push(i),s.push(s[0])),o.push(new NumberKeyframeTrack(".morphTargetInfluences["+t[e].name+"]",a,s).scale(1/r))}return new AnimationClip(e,-1,o)},findByName:function(e,t){let r=e;if(!Array.isArray(e)){const t=e;r=t.geometry&&t.geometry.animations||t.animations}for(let e=0;e<r.length;e++)if(r[e].name===t)return r[e];return null},CreateClipsFromMorphTargetSequences:function(e,t,r){const n={},i=/^([\w-]*?)([\d]+)$/;for(let t=0,r=e.length;t<r;t++){const r=e[t],o=r.name.match(i);if(o&&o.length>1){const e=o[1];let t=n[e];t||(n[e]=t=[]),t.push(r)}}const o=[];for(const e in n)o.push(AnimationClip.CreateFromMorphTargetSequence(e,n[e],t,r));return o},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const addNonemptyTrack=function(e,t,r,n,i){if(0!==r.length){const o=[],a=[];AnimationUtils.flattenJSON(r,o,a,n),0!==o.length&&i.push(new e(t,o,a))}},r=[],n=e.name||"default",i=e.fps||30,o=e.blendMode;let a=e.length||-1;const s=e.hierarchy||[];for(let e=0;e<s.length;e++){const n=s[e].keys;if(n&&0!==n.length)if(n[0].morphTargets){const e={};let t;for(t=0;t<n.length;t++)if(n[t].morphTargets)for(let r=0;r<n[t].morphTargets.length;r++)e[n[t].morphTargets[r]]=-1;for(const i in e){const e=[],o=[];for(let r=0;r!==n[t].morphTargets.length;++r){const r=n[t];e.push(r.time),o.push(r.morphTarget===i?1:0)}r.push(new NumberKeyframeTrack(".morphTargetInfluence["+i+"]",e,o))}a=e.length*(i||1)}else{const i=".bones["+t[e].name+"]";addNonemptyTrack(VectorKeyframeTrack,i+".position",n,"pos",r),addNonemptyTrack(QuaternionKeyframeTrack,i+".quaternion",n,"rot",r),addNonemptyTrack(VectorKeyframeTrack,i+".scale",n,"scl",r)}}if(0===r.length)return null;return new AnimationClip(n,a,r,o)}}),Object.assign(AnimationClip.prototype,{resetDuration:function(){let e=0;for(let t=0,r=this.tracks.length;t!==r;++t){const r=this.tracks[t];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this},trim:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new AnimationClip(this.name,this.duration,e,this.blendMode)},toJSON:function(){return AnimationClip.toJSON(this)}});const Cache={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function LoadingManager(e,t,r){const n=this;let i=!1,o=0,a=0,s=void 0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){a++,!1===i&&void 0!==n.onStart&&n.onStart(e,o,a),i=!0},this.itemEnd=function(e){o++,void 0!==n.onProgress&&n.onProgress(e,o,a),o===a&&(i=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,r=l.length;t<r;t+=2){const r=l[t],n=l[t+1];if(r.global&&(r.lastIndex=0),r.test(e))return n}return null}}const DefaultLoadingManager=new LoadingManager;function Loader$1(e){this.manager=void 0!==e?e:DefaultLoadingManager,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Loader$1.prototype,{load:function(){},loadAsync:function(e,t){const r=this;return new Promise((function(n,i){r.load(e,n,t,i)}))},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const loading={};function FileLoader(e){Loader$1.call(this,e)}function AnimationLoader(e){Loader$1.call(this,e)}function CompressedTextureLoader(e){Loader$1.call(this,e)}function ImageLoader(e){Loader$1.call(this,e)}function CubeTextureLoader(e){Loader$1.call(this,e)}function DataTextureLoader(e){Loader$1.call(this,e)}function TextureLoader(e){Loader$1.call(this,e)}function Curve(){this.type="Curve",this.arcLengthDivisions=200}function EllipseCurve(e,t,r,n,i,o,a,s){Curve.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=r||1,this.yRadius=n||1,this.aStartAngle=i||0,this.aEndAngle=o||2*Math.PI,this.aClockwise=a||!1,this.aRotation=s||0}function ArcCurve(e,t,r,n,i,o){EllipseCurve.call(this,e,t,r,r,n,i,o),this.type="ArcCurve"}function CubicPoly(){let e=0,t=0,r=0,n=0;function init(i,o,a,s){e=i,t=a,r=-3*i+3*o-2*a-s,n=2*i-2*o+a+s}return{initCatmullRom:function(e,t,r,n,i){init(t,r,i*(r-e),i*(n-t))},initNonuniformCatmullRom:function(e,t,r,n,i,o,a){let s=(t-e)/i-(r-e)/(i+o)+(r-t)/o,l=(r-t)/o-(n-t)/(o+a)+(n-r)/a;s*=o,l*=o,init(t,r,s,l)},calc:function(i){const o=i*i;return e+t*i+r*o+n*(o*i)}}}FileLoader.prototype=Object.assign(Object.create(Loader$1.prototype),{constructor:FileLoader,load:function(e,t,r,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,o=Cache.get(e);if(void 0!==o)return i.manager.itemStart(e),setTimeout((function(){t&&t(o),i.manager.itemEnd(e)}),0),o;if(void 0!==loading[e])return void loading[e].push({onLoad:t,onProgress:r,onError:n});const a=e.match(/^data:(.*?)(;base64)?,(.*)$/);let s;if(a){const r=a[1],o=!!a[2];let s=a[3];s=decodeURIComponent(s),o&&(s=atob(s));try{let n;const o=(this.responseType||"").toLowerCase();switch(o){case"arraybuffer":case"blob":const e=new Uint8Array(s.length);for(let t=0;t<s.length;t++)e[t]=s.charCodeAt(t);n="blob"===o?new Blob([e.buffer],{type:r}):e.buffer;break;case"document":const t=new DOMParser;n=t.parseFromString(s,r);break;case"json":n=JSON.parse(s);break;default:n=s}setTimeout((function(){t&&t(n),i.manager.itemEnd(e)}),0)}catch(t){setTimeout((function(){n&&n(t),i.manager.itemError(e),i.manager.itemEnd(e)}),0)}}else{loading[e]=[],loading[e].push({onLoad:t,onProgress:r,onError:n}),s=new XMLHttpRequest,s.open("GET",e,!0),s.addEventListener("load",(function(t){const r=this.response,n=loading[e];if(delete loading[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Cache.add(e,r);for(let e=0,t=n.length;e<t;e++){const t=n[e];t.onLoad&&t.onLoad(r)}i.manager.itemEnd(e)}else{for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onError&&r.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)}}),!1),s.addEventListener("progress",(function(t){const r=loading[e];for(let e=0,n=r.length;e<n;e++){const n=r[e];n.onProgress&&n.onProgress(t)}}),!1),s.addEventListener("error",(function(t){const r=loading[e];delete loading[e];for(let e=0,n=r.length;e<n;e++){const n=r[e];n.onError&&n.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)}),!1),s.addEventListener("abort",(function(t){const r=loading[e];delete loading[e];for(let e=0,n=r.length;e<n;e++){const n=r[e];n.onError&&n.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)}),!1),void 0!==this.responseType&&(s.responseType=this.responseType),void 0!==this.withCredentials&&(s.withCredentials=this.withCredentials),s.overrideMimeType&&s.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const e in this.requestHeader)s.setRequestHeader(e,this.requestHeader[e]);s.send(null)}return i.manager.itemStart(e),s},setResponseType:function(e){return this.responseType=e,this},setMimeType:function(e){return this.mimeType=e,this}}),AnimationLoader.prototype=Object.assign(Object.create(Loader$1.prototype),{constructor:AnimationLoader,load:function(e,t,r,n){const i=this,o=new FileLoader(i.manager);o.setPath(i.path),o.setRequestHeader(i.requestHeader),o.setWithCredentials(i.withCredentials),o.load(e,(function(r){try{t(i.parse(JSON.parse(r)))}catch(t){n?n(t):console.error(t),i.manager.itemError(e)}}),r,n)},parse:function(e){const t=[];for(let r=0;r<e.length;r++){const n=AnimationClip.parse(e[r]);t.push(n)}return t}}),CompressedTextureLoader.prototype=Object.assign(Object.create(Loader$1.prototype),{constructor:CompressedTextureLoader,load:function(e,t,r,n){const i=this,o=[],a=new CompressedTexture,s=new FileLoader(this.manager);s.setPath(this.path),s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setWithCredentials(i.withCredentials);let l=0;function loadTexture(c){s.load(e[c],(function(e){const r=i.parse(e,!0);o[c]={width:r.width,height:r.height,format:r.format,mipmaps:r.mipmaps},l+=1,6===l&&(1===r.mipmapCount&&(a.minFilter=1006),a.image=o,a.format=r.format,a.needsUpdate=!0,t&&t(a))}),r,n)}if(Array.isArray(e))for(let t=0,r=e.length;t<r;++t)loadTexture(t);else s.load(e,(function(e){const r=i.parse(e,!0);if(r.isCubemap){const e=r.mipmaps.length/r.mipmapCount;for(let t=0;t<e;t++){o[t]={mipmaps:[]};for(let e=0;e<r.mipmapCount;e++)o[t].mipmaps.push(r.mipmaps[t*r.mipmapCount+e]),o[t].format=r.format,o[t].width=r.width,o[t].height=r.height}a.image=o}else a.image.width=r.width,a.image.height=r.height,a.mipmaps=r.mipmaps;1===r.mipmapCount&&(a.minFilter=1006),a.format=r.format,a.needsUpdate=!0,t&&t(a)}),r,n);return a}}),ImageLoader.prototype=Object.assign(Object.create(Loader$1.prototype),{constructor:ImageLoader,load:function(e,t,r,n){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,o=Cache.get(e);if(void 0!==o)return i.manager.itemStart(e),setTimeout((function(){t&&t(o),i.manager.itemEnd(e)}),0),o;const a=document.createElementNS("http://www.w3.org/1999/xhtml","img");function onImageLoad(){a.removeEventListener("load",onImageLoad,!1),a.removeEventListener("error",onImageError,!1),Cache.add(e,this),t&&t(this),i.manager.itemEnd(e)}function onImageError(t){a.removeEventListener("load",onImageLoad,!1),a.removeEventListener("error",onImageError,!1),n&&n(t),i.manager.itemError(e),i.manager.itemEnd(e)}return a.addEventListener("load",onImageLoad,!1),a.addEventListener("error",onImageError,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),i.manager.itemStart(e),a.src=e,a}}),CubeTextureLoader.prototype=Object.assign(Object.create(Loader$1.prototype),{constructor:CubeTextureLoader,load:function(e,t,r,n){const i=new CubeTexture,o=new ImageLoader(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function loadTexture(r){o.load(e[r],(function(e){i.images[r]=e,a++,6===a&&(i.needsUpdate=!0,t&&t(i))}),void 0,n)}for(let t=0;t<e.length;++t)loadTexture(t);return i}}),DataTextureLoader.prototype=Object.assign(Object.create(Loader$1.prototype),{constructor:DataTextureLoader,load:function(e,t,r,n){const i=this,o=new DataTexture,a=new FileLoader(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(i.withCredentials),a.load(e,(function(e){const r=i.parse(e);r&&(void 0!==r.image?o.image=r.image:void 0!==r.data&&(o.image.width=r.width,o.image.height=r.height,o.image.data=r.data),o.wrapS=void 0!==r.wrapS?r.wrapS:1001,o.wrapT=void 0!==r.wrapT?r.wrapT:1001,o.magFilter=void 0!==r.magFilter?r.magFilter:1006,o.minFilter=void 0!==r.minFilter?r.minFilter:1006,o.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,void 0!==r.format&&(o.format=r.format),void 0!==r.type&&(o.type=r.type),void 0!==r.mipmaps&&(o.mipmaps=r.mipmaps,o.minFilter=1008),1===r.mipmapCount&&(o.minFilter=1006),o.needsUpdate=!0,t&&t(o,r))}),r,n),o}}),TextureLoader.prototype=Object.assign(Object.create(Loader$1.prototype),{constructor:TextureLoader,load:function(e,t,r,n){const i=new Texture,o=new ImageLoader(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,(function(r){i.image=r;const n=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);i.format=n?1022:1023,i.needsUpdate=!0,void 0!==t&&t(i)}),r,n),i}}),Object.assign(Curve.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){const r=this.getUtoTmapping(e);return this.getPoint(r,t)},getPoints:function(e=5){const t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return t},getSpacedPoints:function(e=5){const t=[];for(let r=0;r<=e;r++)t.push(this.getPointAt(r/e));return t},getLength:function(){const e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let r,n=this.getPoint(0),i=0;t.push(0);for(let o=1;o<=e;o++)r=this.getPoint(o/e),i+=r.distanceTo(n),t.push(i),n=r;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){const r=this.getLengths();let n=0;const i=r.length;let o;o=t||e*r[i-1];let a,s=0,l=i-1;for(;s<=l;)if(n=Math.floor(s+(l-s)/2),a=r[n]-o,a<0)s=n+1;else{if(!(a>0)){l=n;break}l=n-1}if(n=l,r[n]===o)return n/(i-1);const c=r[n];return(n+(o-c)/(r[n+1]-c))/(i-1)},getTangent:function(e,t){let r=e-1e-4,n=e+1e-4;r<0&&(r=0),n>1&&(n=1);const i=this.getPoint(r),o=this.getPoint(n),a=t||(i.isVector2?new Vector2:new Vector3);return a.copy(o).sub(i).normalize(),a},getTangentAt:function(e,t){const r=this.getUtoTmapping(e);return this.getTangent(r,t)},computeFrenetFrames:function(e,t){const r=new Vector3,n=[],i=[],o=[],a=new Vector3,s=new Matrix4;for(let t=0;t<=e;t++){const r=t/e;n[t]=this.getTangentAt(r,new Vector3),n[t].normalize()}i[0]=new Vector3,o[0]=new Vector3;let l=Number.MAX_VALUE;const c=Math.abs(n[0].x),u=Math.abs(n[0].y),h=Math.abs(n[0].z);c<=l&&(l=c,r.set(1,0,0)),u<=l&&(l=u,r.set(0,1,0)),h<=l&&r.set(0,0,1),a.crossVectors(n[0],r).normalize(),i[0].crossVectors(n[0],a),o[0].crossVectors(n[0],i[0]);for(let t=1;t<=e;t++){if(i[t]=i[t-1].clone(),o[t]=o[t-1].clone(),a.crossVectors(n[t-1],n[t]),a.length()>Number.EPSILON){a.normalize();const e=Math.acos(MathUtils.clamp(n[t-1].dot(n[t]),-1,1));i[t].applyMatrix4(s.makeRotationAxis(a,e))}o[t].crossVectors(n[t],i[t])}if(!0===t){let t=Math.acos(MathUtils.clamp(i[0].dot(i[e]),-1,1));t/=e,n[0].dot(a.crossVectors(i[0],i[e]))>0&&(t=-t);for(let r=1;r<=e;r++)i[r].applyMatrix4(s.makeRotationAxis(n[r],t*r)),o[r].crossVectors(n[r],i[r])}return{tangents:n,normals:i,binormals:o}},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}),EllipseCurve.prototype=Object.create(Curve.prototype),EllipseCurve.prototype.constructor=EllipseCurve,EllipseCurve.prototype.isEllipseCurve=!0,EllipseCurve.prototype.getPoint=function(e,t){const r=t||new Vector2,n=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const o=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=n;for(;i>n;)i-=n;i<Number.EPSILON&&(i=o?0:n),!0!==this.aClockwise||o||(i===n?i=-n:i-=n);const a=this.aStartAngle+e*i;let s=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),r=s-this.aX,n=l-this.aY;s=r*e-n*t+this.aX,l=r*t+n*e+this.aY}return r.set(s,l)},EllipseCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},EllipseCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},EllipseCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},ArcCurve.prototype=Object.create(EllipseCurve.prototype),ArcCurve.prototype.constructor=ArcCurve,ArcCurve.prototype.isArcCurve=!0;const tmp=new Vector3,px=new CubicPoly,py=new CubicPoly,pz=new CubicPoly;function CatmullRomCurve3(e=[],t=!1,r="centripetal",n=.5){Curve.call(this),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=r,this.tension=n}function CatmullRom(e,t,r,n,i){const o=.5*(n-t),a=.5*(i-r),s=e*e;return(2*r-2*n+o+a)*(e*s)+(-3*r+3*n-2*o-a)*s+o*e+r}function QuadraticBezierP0(e,t){const r=1-e;return r*r*t}function QuadraticBezierP1(e,t){return 2*(1-e)*e*t}function QuadraticBezierP2(e,t){return e*e*t}function QuadraticBezier(e,t,r,n){return QuadraticBezierP0(e,t)+QuadraticBezierP1(e,r)+QuadraticBezierP2(e,n)}function CubicBezierP0(e,t){const r=1-e;return r*r*r*t}function CubicBezierP1(e,t){const r=1-e;return 3*r*r*e*t}function CubicBezierP2(e,t){return 3*(1-e)*e*e*t}function CubicBezierP3(e,t){return e*e*e*t}function CubicBezier(e,t,r,n,i){return CubicBezierP0(e,t)+CubicBezierP1(e,r)+CubicBezierP2(e,n)+CubicBezierP3(e,i)}function CubicBezierCurve(e=new Vector2,t=new Vector2,r=new Vector2,n=new Vector2){Curve.call(this),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=r,this.v3=n}function CubicBezierCurve3(e=new Vector3,t=new Vector3,r=new Vector3,n=new Vector3){Curve.call(this),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=r,this.v3=n}function LineCurve(e=new Vector2,t=new Vector2){Curve.call(this),this.type="LineCurve",this.v1=e,this.v2=t}function LineCurve3(e=new Vector3,t=new Vector3){Curve.call(this),this.type="LineCurve3",this.v1=e,this.v2=t}function QuadraticBezierCurve(e=new Vector2,t=new Vector2,r=new Vector2){Curve.call(this),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=r}function QuadraticBezierCurve3(e=new Vector3,t=new Vector3,r=new Vector3){Curve.call(this),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=r}function SplineCurve(e=[]){Curve.call(this),this.type="SplineCurve",this.points=e}CatmullRomCurve3.prototype=Object.create(Curve.prototype),CatmullRomCurve3.prototype.constructor=CatmullRomCurve3,CatmullRomCurve3.prototype.isCatmullRomCurve3=!0,CatmullRomCurve3.prototype.getPoint=function(e,t=new Vector3){const r=t,n=this.points,i=n.length,o=(i-(this.closed?0:1))*e;let a,s,l=Math.floor(o),c=o-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/i)+1)*i:0===c&&l===i-1&&(l=i-2,c=1),this.closed||l>0?a=n[(l-1)%i]:(tmp.subVectors(n[0],n[1]).add(n[0]),a=tmp);const u=n[l%i],h=n[(l+1)%i];if(this.closed||l+2<i?s=n[(l+2)%i]:(tmp.subVectors(n[i-1],n[i-2]).add(n[i-1]),s=tmp),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Math.pow(a.distanceToSquared(u),e),r=Math.pow(u.distanceToSquared(h),e),n=Math.pow(h.distanceToSquared(s),e);r<1e-4&&(r=1),t<1e-4&&(t=r),n<1e-4&&(n=r),px.initNonuniformCatmullRom(a.x,u.x,h.x,s.x,t,r,n),py.initNonuniformCatmullRom(a.y,u.y,h.y,s.y,t,r,n),pz.initNonuniformCatmullRom(a.z,u.z,h.z,s.z,t,r,n)}else"catmullrom"===this.curveType&&(px.initCatmullRom(a.x,u.x,h.x,s.x,this.tension),py.initCatmullRom(a.y,u.y,h.y,s.y,this.tension),pz.initCatmullRom(a.z,u.z,h.z,s.z,this.tension));return r.set(px.calc(c),py.calc(c),pz.calc(c)),r},CatmullRomCurve3.prototype.copy=function(e){Curve.prototype.copy.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},CatmullRomCurve3.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);e.points=[];for(let t=0,r=this.points.length;t<r;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e},CatmullRomCurve3.prototype.fromJSON=function(e){Curve.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push((new Vector3).fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},CubicBezierCurve.prototype=Object.create(Curve.prototype),CubicBezierCurve.prototype.constructor=CubicBezierCurve,CubicBezierCurve.prototype.isCubicBezierCurve=!0,CubicBezierCurve.prototype.getPoint=function(e,t=new Vector2){const r=t,n=this.v0,i=this.v1,o=this.v2,a=this.v3;return r.set(CubicBezier(e,n.x,i.x,o.x,a.x),CubicBezier(e,n.y,i.y,o.y,a.y)),r},CubicBezierCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},CubicBezierCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},CubicBezierCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},CubicBezierCurve3.prototype=Object.create(Curve.prototype),CubicBezierCurve3.prototype.constructor=CubicBezierCurve3,CubicBezierCurve3.prototype.isCubicBezierCurve3=!0,CubicBezierCurve3.prototype.getPoint=function(e,t=new Vector3){const r=t,n=this.v0,i=this.v1,o=this.v2,a=this.v3;return r.set(CubicBezier(e,n.x,i.x,o.x,a.x),CubicBezier(e,n.y,i.y,o.y,a.y),CubicBezier(e,n.z,i.z,o.z,a.z)),r},CubicBezierCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},CubicBezierCurve3.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},CubicBezierCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},LineCurve.prototype=Object.create(Curve.prototype),LineCurve.prototype.constructor=LineCurve,LineCurve.prototype.isLineCurve=!0,LineCurve.prototype.getPoint=function(e,t=new Vector2){const r=t;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},LineCurve.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},LineCurve.prototype.getTangent=function(e,t){const r=t||new Vector2;return r.copy(this.v2).sub(this.v1).normalize(),r},LineCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},LineCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},LineCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},LineCurve3.prototype=Object.create(Curve.prototype),LineCurve3.prototype.constructor=LineCurve3,LineCurve3.prototype.isLineCurve3=!0,LineCurve3.prototype.getPoint=function(e,t=new Vector3){const r=t;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},LineCurve3.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},LineCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},LineCurve3.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},LineCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},QuadraticBezierCurve.prototype=Object.create(Curve.prototype),QuadraticBezierCurve.prototype.constructor=QuadraticBezierCurve,QuadraticBezierCurve.prototype.isQuadraticBezierCurve=!0,QuadraticBezierCurve.prototype.getPoint=function(e,t=new Vector2){const r=t,n=this.v0,i=this.v1,o=this.v2;return r.set(QuadraticBezier(e,n.x,i.x,o.x),QuadraticBezier(e,n.y,i.y,o.y)),r},QuadraticBezierCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},QuadraticBezierCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},QuadraticBezierCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},QuadraticBezierCurve3.prototype=Object.create(Curve.prototype),QuadraticBezierCurve3.prototype.constructor=QuadraticBezierCurve3,QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=!0,QuadraticBezierCurve3.prototype.getPoint=function(e,t=new Vector3){const r=t,n=this.v0,i=this.v1,o=this.v2;return r.set(QuadraticBezier(e,n.x,i.x,o.x),QuadraticBezier(e,n.y,i.y,o.y),QuadraticBezier(e,n.z,i.z,o.z)),r},QuadraticBezierCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},QuadraticBezierCurve3.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},QuadraticBezierCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},SplineCurve.prototype=Object.create(Curve.prototype),SplineCurve.prototype.constructor=SplineCurve,SplineCurve.prototype.isSplineCurve=!0,SplineCurve.prototype.getPoint=function(e,t=new Vector2){const r=t,n=this.points,i=(n.length-1)*e,o=Math.floor(i),a=i-o,s=n[0===o?o:o-1],l=n[o],c=n[o>n.length-2?n.length-1:o+1],u=n[o>n.length-3?n.length-1:o+2];return r.set(CatmullRom(a,s.x,l.x,c.x,u.x),CatmullRom(a,s.y,l.y,c.y,u.y)),r},SplineCurve.prototype.copy=function(e){Curve.prototype.copy.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(r.clone())}return this},SplineCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);e.points=[];for(let t=0,r=this.points.length;t<r;t++){const r=this.points[t];e.points.push(r.toArray())}return e},SplineCurve.prototype.fromJSON=function(e){Curve.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push((new Vector2).fromArray(r))}return this};var Curves=Object.freeze({__proto__:null,ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});function CurvePath(){Curve.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Path(e){CurvePath.call(this),this.type="Path",this.currentPoint=new Vector2,e&&this.setFromPoints(e)}function Shape(e){Path.call(this,e),this.uuid=MathUtils.generateUUID(),this.type="Shape",this.holes=[]}function Light(e,t=1){Object3D.call(this),this.type="Light",this.color=new Color(e),this.intensity=t}function HemisphereLight(e,t,r){Light.call(this,e,r),this.type="HemisphereLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.groundColor=new Color(t)}function LightShadow(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Vector2(512,512),this.map=null,this.mapPass=null,this.matrix=new Matrix4,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Frustum,this._frameExtents=new Vector2(1,1),this._viewportCount=1,this._viewports=[new Vector4(0,0,1,1)]}function SpotLightShadow(){LightShadow.call(this,new PerspectiveCamera(50,1,.5,500)),this.focus=1}function SpotLight(e,t,r,n,i,o){Light.call(this,e,t),this.type="SpotLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=void 0!==r?r:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==i?i:0,this.decay=void 0!==o?o:1,this.shadow=new SpotLightShadow}function PointLightShadow(){LightShadow.call(this,new PerspectiveCamera(90,1,.5,500)),this._frameExtents=new Vector2(4,2),this._viewportCount=6,this._viewports=[new Vector4(2,1,1,1),new Vector4(0,1,1,1),new Vector4(3,1,1,1),new Vector4(1,1,1,1),new Vector4(3,0,1,1),new Vector4(1,0,1,1)],this._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)],this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)]}function PointLight(e,t,r,n){Light.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=void 0!==r?r:0,this.decay=void 0!==n?n:1,this.shadow=new PointLightShadow}function OrthographicCamera(e=-1,t=1,r=1,n=-1,i=.1,o=2e3){Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=n,this.near=i,this.far=o,this.updateProjectionMatrix()}function DirectionalLightShadow(){LightShadow.call(this,new OrthographicCamera(-5,5,5,-5,.5,500))}function DirectionalLight(e,t){Light.call(this,e,t),this.type="DirectionalLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,this.shadow=new DirectionalLightShadow}function AmbientLight(e,t){Light.call(this,e,t),this.type="AmbientLight"}function RectAreaLight(e,t,r,n){Light.call(this,e,t),this.type="RectAreaLight",this.width=void 0!==r?r:10,this.height=void 0!==n?n:10}CurvePath.prototype=Object.assign(Object.create(Curve.prototype),{constructor:CurvePath,add:function(e){this.curves.push(e)},closePath:function(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new LineCurve(t,e))},getPoint:function(e){const t=e*this.getLength(),r=this.getCurveLengths();let n=0;for(;n<r.length;){if(r[n]>=t){const e=r[n]-t,i=this.curves[n],o=i.getLength(),a=0===o?0:1-e/o;return i.getPointAt(a)}n++}return null},getLength:function(){const e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let r=0,n=this.curves.length;r<n;r++)t+=this.curves[r].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e=40){const t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e=12){const t=[];let r;for(let n=0,i=this.curves;n<i.length;n++){const o=i[n],a=o&&o.isEllipseCurve?2*e:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?e*o.points.length:e,s=o.getPoints(a);for(let e=0;e<s.length;e++){const n=s[e];r&&r.equals(n)||(t.push(n),r=n)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){Curve.prototype.copy.call(this,e),this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){const e=Curve.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(let t=0,r=this.curves.length;t<r;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e},fromJSON:function(e){Curve.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){const r=e.curves[t];this.curves.push((new Curves[r.type]).fromJSON(r))}return this}}),Path.prototype=Object.assign(Object.create(CurvePath.prototype),{constructor:Path,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(let t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){const r=new LineCurve(this.currentPoint.clone(),new Vector2(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,r,n){const i=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(r,n));return this.curves.push(i),this.currentPoint.set(r,n),this},bezierCurveTo:function(e,t,r,n,i,o){const a=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(r,n),new Vector2(i,o));return this.curves.push(a),this.currentPoint.set(i,o),this},splineThru:function(e){const t=new SplineCurve([this.currentPoint.clone()].concat(e));return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,r,n,i,o){const a=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(e+a,t+s,r,n,i,o),this},absarc:function(e,t,r,n,i,o){return this.absellipse(e,t,r,r,n,i,o),this},ellipse:function(e,t,r,n,i,o,a,s){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+l,t+c,r,n,i,o,a,s),this},absellipse:function(e,t,r,n,i,o,a,s){const l=new EllipseCurve(e,t,r,n,i,o,a,s);if(this.curves.length>0){const e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this},copy:function(e){return CurvePath.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){const e=CurvePath.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return CurvePath.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}),Shape.prototype=Object.assign(Object.create(Path.prototype),{constructor:Shape,getPointsHoles:function(e){const t=[];for(let r=0,n=this.holes.length;r<n;r++)t[r]=this.holes[r].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){Path.prototype.copy.call(this,e),this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){const r=e.holes[t];this.holes.push(r.clone())}return this},toJSON:function(){const e=Path.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(let t=0,r=this.holes.length;t<r;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e},fromJSON:function(e){Path.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){const r=e.holes[t];this.holes.push((new Path).fromJSON(r))}return this}}),Light.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Light,isLight:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){const t=Object3D.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),HemisphereLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:HemisphereLight,isHemisphereLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),Object.assign(LightShadow.prototype,{_projScreenMatrix:new Matrix4,_lightPositionWorld:new Vector3,_lookTarget:new Vector3,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){const t=this.camera,r=this.matrix,n=this._projScreenMatrix,i=this._lookTarget,o=this._lightPositionWorld;o.setFromMatrixPosition(e.matrixWorld),t.position.copy(o),i.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(i),t.updateMatrixWorld(),n.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(n),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(t.projectionMatrix),r.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}),SpotLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:SpotLightShadow,isSpotLightShadow:!0,updateMatrices:function(e){const t=this.camera,r=2*MathUtils.RAD2DEG*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;r===t.fov&&n===t.aspect&&i===t.far||(t.fov=r,t.aspect=n,t.far=i,t.updateProjectionMatrix()),LightShadow.prototype.updateMatrices.call(this,e)}}),SpotLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:SpotLight,isSpotLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),PointLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:PointLightShadow,isPointLightShadow:!0,updateMatrices:function(e,t=0){const r=this.camera,n=this.matrix,i=this._lightPositionWorld,o=this._lookTarget,a=this._projScreenMatrix;i.setFromMatrixPosition(e.matrixWorld),r.position.copy(i),o.copy(r.position),o.add(this._cubeDirections[t]),r.up.copy(this._cubeUps[t]),r.lookAt(o),r.updateMatrixWorld(),n.makeTranslation(-i.x,-i.y,-i.z),a.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),this._frustum.setFromProjectionMatrix(a)}}),PointLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:PointLight,isPointLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),OrthographicCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:OrthographicCamera,isOrthographicCamera:!0,copy:function(e,t){return Camera.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,r,n,i,o){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let i=r-e,o=r+e,a=n+t,s=n-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=e*this.view.offsetX,o=i+e*this.view.width,a-=t*this.view.offsetY,s=a-t*this.view.height}this.projectionMatrix.makeOrthographic(i,o,a,s,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){const t=Object3D.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}),DirectionalLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:DirectionalLightShadow,isDirectionalLightShadow:!0,updateMatrices:function(e){LightShadow.prototype.updateMatrices.call(this,e)}}),DirectionalLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:DirectionalLight,isDirectionalLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),AmbientLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:AmbientLight,isAmbientLight:!0}),RectAreaLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:RectAreaLight,isRectAreaLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){const t=Light.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});class SphericalHarmonics3{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new Vector3)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const r=e.x,n=e.y,i=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*n),t.addScaledVector(o[2],.488603*i),t.addScaledVector(o[3],.488603*r),t.addScaledVector(o[4],r*n*1.092548),t.addScaledVector(o[5],n*i*1.092548),t.addScaledVector(o[6],.315392*(3*i*i-1)),t.addScaledVector(o[7],r*i*1.092548),t.addScaledVector(o[8],.546274*(r*r-n*n)),t}getIrradianceAt(e,t){const r=e.x,n=e.y,i=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],1.023328*n),t.addScaledVector(o[2],1.023328*i),t.addScaledVector(o[3],1.023328*r),t.addScaledVector(o[4],.858086*r*n),t.addScaledVector(o[5],.858086*n*i),t.addScaledVector(o[6],.743125*i*i-.247708),t.addScaledVector(o[7],.858086*r*i),t.addScaledVector(o[8],.429043*(r*r-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let r=0;r<9;r++)this.coefficients[r].addScaledVector(e.coefficients[r],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let r=0;r<9;r++)this.coefficients[r].lerp(e.coefficients[r],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,t=0){const r=this.coefficients;for(let n=0;n<9;n++)r[n].fromArray(e,t+3*n);return this}toArray(e=[],t=0){const r=this.coefficients;for(let n=0;n<9;n++)r[n].toArray(e,t+3*n);return e}static getBasisAt(e,t){const r=e.x,n=e.y,i=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*i,t[3]=.488603*r,t[4]=1.092548*r*n,t[5]=1.092548*n*i,t[6]=.315392*(3*i*i-1),t[7]=1.092548*r*i,t[8]=.546274*(r*r-n*n)}}function LightProbe(e,t){Light.call(this,void 0,t),this.type="LightProbe",this.sh=void 0!==e?e:new SphericalHarmonics3}function MaterialLoader(e){Loader$1.call(this,e),this.textures={}}LightProbe.prototype=Object.assign(Object.create(Light.prototype),{constructor:LightProbe,isLightProbe:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.sh.copy(e.sh),this},fromJSON:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this},toJSON:function(e){const t=Light.prototype.toJSON.call(this,e);return t.object.sh=this.sh.toArray(),t}}),MaterialLoader.prototype=Object.assign(Object.create(Loader$1.prototype),{constructor:MaterialLoader,load:function(e,t,r,n){const i=this,o=new FileLoader(i.manager);o.setPath(i.path),o.setRequestHeader(i.requestHeader),o.setWithCredentials(i.withCredentials),o.load(e,(function(r){try{t(i.parse(JSON.parse(r)))}catch(t){n?n(t):console.error(t),i.manager.itemError(e)}}),r,n)},parse:function(e){const t=this.textures;function getTexture(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}const r=new Materials[e.type];if(void 0!==e.uuid&&(r.uuid=e.uuid),void 0!==e.name&&(r.name=e.name),void 0!==e.color&&void 0!==r.color&&r.color.setHex(e.color),void 0!==e.roughness&&(r.roughness=e.roughness),void 0!==e.metalness&&(r.metalness=e.metalness),void 0!==e.sheen&&(r.sheen=(new Color).setHex(e.sheen)),void 0!==e.emissive&&void 0!==r.emissive&&r.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==r.specular&&r.specular.setHex(e.specular),void 0!==e.shininess&&(r.shininess=e.shininess),void 0!==e.clearcoat&&(r.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(r.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(r.fog=e.fog),void 0!==e.flatShading&&(r.flatShading=e.flatShading),void 0!==e.blending&&(r.blending=e.blending),void 0!==e.combine&&(r.combine=e.combine),void 0!==e.side&&(r.side=e.side),void 0!==e.opacity&&(r.opacity=e.opacity),void 0!==e.transparent&&(r.transparent=e.transparent),void 0!==e.alphaTest&&(r.alphaTest=e.alphaTest),void 0!==e.depthTest&&(r.depthTest=e.depthTest),void 0!==e.depthWrite&&(r.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(r.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(r.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(r.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(r.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(r.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(r.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(r.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(r.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(r.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(r.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(r.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(r.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(r.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(r.rotation=e.rotation),1!==e.linewidth&&(r.linewidth=e.linewidth),void 0!==e.dashSize&&(r.dashSize=e.dashSize),void 0!==e.gapSize&&(r.gapSize=e.gapSize),void 0!==e.scale&&(r.scale=e.scale),void 0!==e.polygonOffset&&(r.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(r.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(r.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(r.skinning=e.skinning),void 0!==e.morphTargets&&(r.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(r.morphNormals=e.morphNormals),void 0!==e.dithering&&(r.dithering=e.dithering),void 0!==e.vertexTangents&&(r.vertexTangents=e.vertexTangents),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.toneMapped&&(r.toneMapped=e.toneMapped),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const t in e.uniforms){const n=e.uniforms[t];switch(r.uniforms[t]={},n.type){case"t":r.uniforms[t].value=getTexture(n.value);break;case"c":r.uniforms[t].value=(new Color).setHex(n.value);break;case"v2":r.uniforms[t].value=(new Vector2).fromArray(n.value);break;case"v3":r.uniforms[t].value=(new Vector3).fromArray(n.value);break;case"v4":r.uniforms[t].value=(new Vector4).fromArray(n.value);break;case"m3":r.uniforms[t].value=(new Matrix3).fromArray(n.value);break;case"m4":r.uniforms[t].value=(new Matrix4).fromArray(n.value);break;default:r.uniforms[t].value=n.value}}if(void 0!==e.defines&&(r.defines=e.defines),void 0!==e.vertexShader&&(r.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(r.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(const t in e.extensions)r.extensions[t]=e.extensions[t];if(void 0!==e.shading&&(r.flatShading=1===e.shading),void 0!==e.size&&(r.size=e.size),void 0!==e.sizeAttenuation&&(r.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(r.map=getTexture(e.map)),void 0!==e.matcap&&(r.matcap=getTexture(e.matcap)),void 0!==e.alphaMap&&(r.alphaMap=getTexture(e.alphaMap)),void 0!==e.bumpMap&&(r.bumpMap=getTexture(e.bumpMap)),void 0!==e.bumpScale&&(r.bumpScale=e.bumpScale),void 0!==e.normalMap&&(r.normalMap=getTexture(e.normalMap)),void 0!==e.normalMapType&&(r.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),r.normalScale=(new Vector2).fromArray(t)}return void 0!==e.displacementMap&&(r.displacementMap=getTexture(e.displacementMap)),void 0!==e.displacementScale&&(r.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(r.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(r.roughnessMap=getTexture(e.roughnessMap)),void 0!==e.metalnessMap&&(r.metalnessMap=getTexture(e.metalnessMap)),void 0!==e.emissiveMap&&(r.emissiveMap=getTexture(e.emissiveMap)),void 0!==e.emissiveIntensity&&(r.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(r.specularMap=getTexture(e.specularMap)),void 0!==e.envMap&&(r.envMap=getTexture(e.envMap)),void 0!==e.envMapIntensity&&(r.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(r.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(r.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(r.lightMap=getTexture(e.lightMap)),void 0!==e.lightMapIntensity&&(r.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(r.aoMap=getTexture(e.aoMap)),void 0!==e.aoMapIntensity&&(r.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(r.gradientMap=getTexture(e.gradientMap)),void 0!==e.clearcoatMap&&(r.clearcoatMap=getTexture(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=getTexture(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(r.clearcoatNormalMap=getTexture(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(r.clearcoatNormalScale=(new Vector2).fromArray(e.clearcoatNormalScale)),void 0!==e.transmission&&(r.transmission=e.transmission),void 0!==e.transmissionMap&&(r.transmissionMap=getTexture(e.transmissionMap)),r},setTextures:function(e){return this.textures=e,this}});const LoaderUtils={decodeText:function(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let r=0,n=e.length;r<n;r++)t+=String.fromCharCode(e[r]);try{return decodeURIComponent(escape(t))}catch(e){return t}},extractUrlBase:function(e){const t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}};function InstancedBufferGeometry(){BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function InstancedBufferAttribute(e,t,r,n){"number"==typeof r&&(n=r,r=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),BufferAttribute.call(this,e,t,r),this.meshPerAttribute=n||1}function BufferGeometryLoader(e){Loader$1.call(this,e)}InstancedBufferGeometry.prototype=Object.assign(Object.create(BufferGeometry.prototype),{constructor:InstancedBufferGeometry,isInstancedBufferGeometry:!0,copy:function(e){return BufferGeometry.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const e=BufferGeometry.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}),InstancedBufferAttribute.prototype=Object.assign(Object.create(BufferAttribute.prototype),{constructor:InstancedBufferAttribute,isInstancedBufferAttribute:!0,copy:function(e){return BufferAttribute.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){const e=BufferAttribute.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}),BufferGeometryLoader.prototype=Object.assign(Object.create(Loader$1.prototype),{constructor:BufferGeometryLoader,load:function(e,t,r,n){const i=this,o=new FileLoader(i.manager);o.setPath(i.path),o.setRequestHeader(i.requestHeader),o.setWithCredentials(i.withCredentials),o.load(e,(function(r){try{t(i.parse(JSON.parse(r)))}catch(t){n?n(t):console.error(t),i.manager.itemError(e)}}),r,n)},parse:function(e){const t={},r={};function getInterleavedBuffer(e,n){if(void 0!==t[n])return t[n];const i=e.interleavedBuffers[n],o=function getArrayBuffer(e,t){if(void 0!==r[t])return r[t];const n=e.arrayBuffers[t],i=new Uint32Array(n).buffer;return r[t]=i,i}(e,i.buffer),a=new InterleavedBuffer(getTypedArray(i.type,o),i.stride);return a.uuid=i.uuid,t[n]=a,a}const n=e.isInstancedBufferGeometry?new InstancedBufferGeometry:new BufferGeometry,i=e.data.index;if(void 0!==i){const e=getTypedArray(i.type,i.array);n.setIndex(new BufferAttribute(e,1))}const o=e.data.attributes;for(const t in o){const r=o[t];let i;if(r.isInterleavedBufferAttribute){i=new InterleavedBufferAttribute(getInterleavedBuffer(e.data,r.data),r.itemSize,r.offset,r.normalized)}else{const e=getTypedArray(r.type,r.array);i=new(r.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute)(e,r.itemSize,r.normalized)}void 0!==r.name&&(i.name=r.name),n.setAttribute(t,i)}const a=e.data.morphAttributes;if(a)for(const t in a){const r=a[t],i=[];for(let t=0,n=r.length;t<n;t++){const n=r[t];let o;if(n.isInterleavedBufferAttribute){o=new InterleavedBufferAttribute(getInterleavedBuffer(e.data,n.data),n.itemSize,n.offset,n.normalized)}else{o=new BufferAttribute(getTypedArray(n.type,n.array),n.itemSize,n.normalized)}void 0!==n.name&&(o.name=n.name),i.push(o)}n.morphAttributes[t]=i}e.data.morphTargetsRelative&&(n.morphTargetsRelative=!0);const s=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==s)for(let e=0,t=s.length;e!==t;++e){const t=s[e];n.addGroup(t.start,t.count,t.materialIndex)}const l=e.data.boundingSphere;if(void 0!==l){const e=new Vector3;void 0!==l.center&&e.fromArray(l.center),n.boundingSphere=new Sphere(e,l.radius)}return e.name&&(n.name=e.name),e.userData&&(n.userData=e.userData),n}});class ObjectLoader extends Loader$1{constructor(e){super(e)}load(e,t,r,n){const i=this,o=""===this.path?LoaderUtils.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new FileLoader(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,(function(r){let o=null;try{o=JSON.parse(r)}catch(t){return void 0!==n&&n(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}const a=o.metadata;void 0!==a&&void 0!==a.type&&"geometry"!==a.type.toLowerCase()?i.parse(o,t):console.error("THREE.ObjectLoader: Can't load "+e)}),r,n)}parse(e,t){const r=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),o=this.parseImages(e.images,(function(){void 0!==t&&t(l)})),a=this.parseTextures(e.textures,o),s=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,i,s,r),c=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,c),void 0!==t){let e=!1;for(const t in o)if(o[t]instanceof HTMLImageElement){e=!0;break}!1===e&&t(l)}return l}parseShapes(e){const t={};if(void 0!==e)for(let r=0,n=e.length;r<n;r++){const n=(new Shape).fromJSON(e[r]);t[n.uuid]=n}return t}parseSkeletons(e,t){const r={},n={};if(t.traverse((function(e){e.isBone&&(n[e.uuid]=e)})),void 0!==e)for(let t=0,i=e.length;t<i;t++){const i=(new Skeleton).fromJSON(e[t],n);r[i.uuid]=i}return r}parseGeometries(e,t){const r={};let n;if(void 0!==e){const i=new BufferGeometryLoader;for(let o=0,a=e.length;o<a;o++){let a;const s=e[o];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new Geometries[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":a=new Geometries[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":a=new Geometries[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":a=new Geometries[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":a=new Geometries[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":a=new Geometries[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":a=new Geometries[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":a=new Geometries[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":a=new Geometries[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":a=new Geometries[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"TubeGeometry":case"TubeBufferGeometry":a=new Geometries[s.type]((new Curves[s.path.type]).fromJSON(s.path),s.tubularSegments,s.radius,s.radialSegments,s.closed);break;case"LatheGeometry":case"LatheBufferGeometry":a=new Geometries[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":a=new Geometries[s.type](s.vertices,s.indices,s.radius,s.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":n=[];for(let e=0,r=s.shapes.length;e<r;e++){const r=t[s.shapes[e]];n.push(r)}a=new Geometries[s.type](n,s.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":n=[];for(let e=0,r=s.shapes.length;e<r;e++){const r=t[s.shapes[e]];n.push(r)}const e=s.options.extrudePath;void 0!==e&&(s.options.extrudePath=(new Curves[e.type]).fromJSON(e)),a=new Geometries[s.type](n,s.options);break;case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(s);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),!0===a.isBufferGeometry&&void 0!==s.userData&&(a.userData=s.userData),r[s.uuid]=a}}return r}parseMaterials(e,t){const r={},n={};if(void 0!==e){const i=new MaterialLoader;i.setTextures(t);for(let t=0,o=e.length;t<o;t++){const o=e[t];if("MultiMaterial"===o.type){const e=[];for(let t=0;t<o.materials.length;t++){const n=o.materials[t];void 0===r[n.uuid]&&(r[n.uuid]=i.parse(n)),e.push(r[n.uuid])}n[o.uuid]=e}else void 0===r[o.uuid]&&(r[o.uuid]=i.parse(o)),n[o.uuid]=r[o.uuid]}}return n}parseAnimations(e){const t={};if(void 0!==e)for(let r=0;r<e.length;r++){const n=e[r],i=AnimationClip.parse(n);t[i.uuid]=i}return t}parseImages(e,t){const r=this,n={};let i;function deserializeImage(e){if("string"==typeof e){const t=e;return function loadImage(e){return r.manager.itemStart(e),i.load(e,(function(){r.manager.itemEnd(e)}),void 0,(function(){r.manager.itemError(e),r.manager.itemEnd(e)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:r.resourcePath+t)}return e.data?{data:getTypedArray(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){const r=new LoadingManager(t);i=new ImageLoader(r),i.setCrossOrigin(this.crossOrigin);for(let t=0,r=e.length;t<r;t++){const r=e[t],i=r.url;if(Array.isArray(i)){n[r.uuid]=[];for(let e=0,t=i.length;e<t;e++){const t=deserializeImage(i[e]);null!==t&&(t instanceof HTMLImageElement?n[r.uuid].push(t):n[r.uuid].push(new DataTexture(t.data,t.width,t.height)))}}else{const e=deserializeImage(r.url);null!==e&&(n[r.uuid]=e)}}}return n}parseTextures(e,t){function parseConstant(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const r={};if(void 0!==e)for(let n=0,i=e.length;n<i;n++){const i=e[n];let o;void 0===i.image&&console.warn('THREE.ObjectLoader: No "image" specified for',i.uuid),void 0===t[i.image]&&console.warn("THREE.ObjectLoader: Undefined image",i.image);const a=t[i.image];Array.isArray(a)?(o=new CubeTexture(a),6===a.length&&(o.needsUpdate=!0)):(o=a&&a.data?new DataTexture(a.data,a.width,a.height):new Texture(a),a&&(o.needsUpdate=!0)),o.uuid=i.uuid,void 0!==i.name&&(o.name=i.name),void 0!==i.mapping&&(o.mapping=parseConstant(i.mapping,TEXTURE_MAPPING)),void 0!==i.offset&&o.offset.fromArray(i.offset),void 0!==i.repeat&&o.repeat.fromArray(i.repeat),void 0!==i.center&&o.center.fromArray(i.center),void 0!==i.rotation&&(o.rotation=i.rotation),void 0!==i.wrap&&(o.wrapS=parseConstant(i.wrap[0],TEXTURE_WRAPPING),o.wrapT=parseConstant(i.wrap[1],TEXTURE_WRAPPING)),void 0!==i.format&&(o.format=i.format),void 0!==i.type&&(o.type=i.type),void 0!==i.encoding&&(o.encoding=i.encoding),void 0!==i.minFilter&&(o.minFilter=parseConstant(i.minFilter,TEXTURE_FILTER)),void 0!==i.magFilter&&(o.magFilter=parseConstant(i.magFilter,TEXTURE_FILTER)),void 0!==i.anisotropy&&(o.anisotropy=i.anisotropy),void 0!==i.flipY&&(o.flipY=i.flipY),void 0!==i.premultiplyAlpha&&(o.premultiplyAlpha=i.premultiplyAlpha),void 0!==i.unpackAlignment&&(o.unpackAlignment=i.unpackAlignment),r[i.uuid]=o}return r}parseObject(e,t,r,n){let i,o,a;function getGeometry(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function getMaterial(e){if(void 0!==e){if(Array.isArray(e)){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n];void 0===r[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),t.push(r[i])}return t}return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),r[e]}}switch(e.type){case"Scene":i=new Scene,void 0!==e.background&&Number.isInteger(e.background)&&(i.background=new Color(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?i.fog=new Fog(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(i.fog=new FogExp2(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":i=new PerspectiveCamera(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(i.focus=e.focus),void 0!==e.zoom&&(i.zoom=e.zoom),void 0!==e.filmGauge&&(i.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(i.filmOffset=e.filmOffset),void 0!==e.view&&(i.view=Object.assign({},e.view));break;case"OrthographicCamera":i=new OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(i.zoom=e.zoom),void 0!==e.view&&(i.view=Object.assign({},e.view));break;case"AmbientLight":i=new AmbientLight(e.color,e.intensity);break;case"DirectionalLight":i=new DirectionalLight(e.color,e.intensity);break;case"PointLight":i=new PointLight(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":i=new RectAreaLight(e.color,e.intensity,e.width,e.height);break;case"SpotLight":i=new SpotLight(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":i=new HemisphereLight(e.color,e.groundColor,e.intensity);break;case"LightProbe":i=(new LightProbe).fromJSON(e);break;case"SkinnedMesh":o=getGeometry(e.geometry),a=getMaterial(e.material),i=new SkinnedMesh(o,a),void 0!==e.bindMode&&(i.bindMode=e.bindMode),void 0!==e.bindMatrix&&i.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(i.skeleton=e.skeleton);break;case"Mesh":o=getGeometry(e.geometry),a=getMaterial(e.material),i=new Mesh(o,a);break;case"InstancedMesh":o=getGeometry(e.geometry),a=getMaterial(e.material);const t=e.count,r=e.instanceMatrix;i=new InstancedMesh(o,a,t),i.instanceMatrix=new BufferAttribute(new Float32Array(r.array),16);break;case"LOD":i=new LOD;break;case"Line":i=new Line(getGeometry(e.geometry),getMaterial(e.material));break;case"LineLoop":i=new LineLoop(getGeometry(e.geometry),getMaterial(e.material));break;case"LineSegments":i=new LineSegments(getGeometry(e.geometry),getMaterial(e.material));break;case"PointCloud":case"Points":i=new Points(getGeometry(e.geometry),getMaterial(e.material));break;case"Sprite":i=new Sprite(getMaterial(e.material));break;case"Group":i=new Group;break;case"Bone":i=new Bone;break;default:i=new Object3D}if(i.uuid=e.uuid,void 0!==e.name&&(i.name=e.name),void 0!==e.matrix?(i.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(i.matrixAutoUpdate=e.matrixAutoUpdate),i.matrixAutoUpdate&&i.matrix.decompose(i.position,i.quaternion,i.scale)):(void 0!==e.position&&i.position.fromArray(e.position),void 0!==e.rotation&&i.rotation.fromArray(e.rotation),void 0!==e.quaternion&&i.quaternion.fromArray(e.quaternion),void 0!==e.scale&&i.scale.fromArray(e.scale)),void 0!==e.castShadow&&(i.castShadow=e.castShadow),void 0!==e.receiveShadow&&(i.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(i.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(i.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(i.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&i.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(i.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(i.visible=e.visible),void 0!==e.frustumCulled&&(i.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(i.renderOrder=e.renderOrder),void 0!==e.userData&&(i.userData=e.userData),void 0!==e.layers&&(i.layers.mask=e.layers),void 0!==e.children){const o=e.children;for(let e=0;e<o.length;e++)i.add(this.parseObject(o[e],t,r,n))}if(void 0!==e.animations){const t=e.animations;for(let e=0;e<t.length;e++){const r=t[e];i.animations.push(n[r])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(i.autoUpdate=e.autoUpdate);const t=e.levels;for(let e=0;e<t.length;e++){const r=t[e],n=i.getObjectByProperty("uuid",r.object);void 0!==n&&i.addLevel(n,r.distance)}}return i}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse((function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){const r=t[e.skeleton];void 0===r?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(r,e.bindMatrix)}}))}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const TEXTURE_MAPPING={UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,CubeUVReflectionMapping:306,CubeUVRefractionMapping:307},TEXTURE_WRAPPING={RepeatWrapping:1e3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002},TEXTURE_FILTER={NearestFilter:1003,NearestMipmapNearestFilter:1004,NearestMipmapLinearFilter:1005,LinearFilter:1006,LinearMipmapNearestFilter:1007,LinearMipmapLinearFilter:1008};function ImageBitmapLoader$1(e){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Loader$1.call(this,e),this.options={premultiplyAlpha:"none"}}function ShapePath(){this.type="ShapePath",this.color=new Color,this.subPaths=[],this.currentPath=null}function Font(e){this.type="Font",this.data=e}function createPaths(e,t,r){const n=Array.from?Array.from(e):String(e).split(""),i=t/r.resolution,o=(r.boundingBox.yMax-r.boundingBox.yMin+r.underlineThickness)*i,a=[];let s=0,l=0;for(let e=0;e<n.length;e++){const t=n[e];if("\n"===t)s=0,l-=o;else{const e=createPath(t,i,s,l,r);s+=e.offsetX,a.push(e.path)}}return a}function createPath(e,t,r,n,i){const o=i.glyphs[e]||i.glyphs["?"];if(!o)return void console.error('THREE.Font: character "'+e+'" does not exists in font family '+i.familyName+".");const a=new ShapePath;let s,l,c,u,h,d,p,m;if(o.o){const e=o._cachedOutline||(o._cachedOutline=o.o.split(" "));for(let i=0,o=e.length;i<o;){switch(e[i++]){case"m":s=e[i++]*t+r,l=e[i++]*t+n,a.moveTo(s,l);break;case"l":s=e[i++]*t+r,l=e[i++]*t+n,a.lineTo(s,l);break;case"q":c=e[i++]*t+r,u=e[i++]*t+n,h=e[i++]*t+r,d=e[i++]*t+n,a.quadraticCurveTo(h,d,c,u);break;case"b":c=e[i++]*t+r,u=e[i++]*t+n,h=e[i++]*t+r,d=e[i++]*t+n,p=e[i++]*t+r,m=e[i++]*t+n,a.bezierCurveTo(h,d,p,m,c,u)}}}return{offsetX:o.ha*t,path:a}}function FontLoader$1(e){Loader$1.call(this,e)}let _context;ImageBitmapLoader$1.prototype=Object.assign(Object.create(Loader$1.prototype),{constructor:ImageBitmapLoader$1,isImageBitmapLoader:!0,setOptions:function setOptions(e){return this.options=e,this},load:function(e,t,r,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,o=Cache.get(e);if(void 0!==o)return i.manager.itemStart(e),setTimeout((function(){t&&t(o),i.manager.itemEnd(e)}),0),o;const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",fetch(e,a).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,i.options)})).then((function(r){Cache.add(e,r),t&&t(r),i.manager.itemEnd(e)})).catch((function(t){n&&n(t),i.manager.itemError(e),i.manager.itemEnd(e)})),i.manager.itemStart(e)}}),Object.assign(ShapePath.prototype,{moveTo:function(e,t){return this.currentPath=new Path,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,r,n){return this.currentPath.quadraticCurveTo(e,t,r,n),this},bezierCurveTo:function(e,t,r,n,i,o){return this.currentPath.bezierCurveTo(e,t,r,n,i,o),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function toShapesNoHoles(e){const t=[];for(let r=0,n=e.length;r<n;r++){const n=e[r],i=new Shape;i.curves=n.curves,t.push(i)}return t}function isPointInsidePolygon(e,t){const r=t.length;let n=!1;for(let i=r-1,o=0;o<r;i=o++){let r=t[i],a=t[o],s=a.x-r.x,l=a.y-r.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(r=t[o],s=-s,a=t[i],l=-l),e.y<r.y||e.y>a.y)continue;if(e.y===r.y){if(e.x===r.x)return!0}else{const t=l*(e.x-r.x)-s*(e.y-r.y);if(0===t)return!0;if(t<0)continue;n=!n}}else{if(e.y!==r.y)continue;if(a.x<=e.x&&e.x<=r.x||r.x<=e.x&&e.x<=a.x)return!0}}return n}const r=ShapeUtils.isClockWise,n=this.subPaths;if(0===n.length)return[];if(!0===t)return toShapesNoHoles(n);let i,o,a;const s=[];if(1===n.length)return o=n[0],a=new Shape,a.curves=o.curves,s.push(a),s;let l=!r(n[0].getPoints());l=e?!l:l;const c=[],u=[];let h,d,p=[],m=0;u[m]=void 0,p[m]=[];for(let t=0,a=n.length;t<a;t++)o=n[t],h=o.getPoints(),i=r(h),i=e?!i:i,i?(!l&&u[m]&&m++,u[m]={s:new Shape,p:h},u[m].s.curves=o.curves,l&&m++,p[m]=[]):p[m].push({h:o,p:h[0]});if(!u[0])return toShapesNoHoles(n);if(u.length>1){let e=!1;const t=[];for(let e=0,t=u.length;e<t;e++)c[e]=[];for(let r=0,n=u.length;r<n;r++){const n=p[r];for(let i=0;i<n.length;i++){const o=n[i];let a=!0;for(let n=0;n<u.length;n++)isPointInsidePolygon(o.p,u[n].p)&&(r!==n&&t.push({froms:r,tos:n,hole:i}),a?(a=!1,c[n].push(o)):e=!0);a&&c[r].push(o)}}t.length>0&&(e||(p=c))}for(let e=0,t=u.length;e<t;e++){a=u[e].s,s.push(a),d=p[e];for(let e=0,t=d.length;e<t;e++)a.holes.push(d[e].h)}return s}}),Object.assign(Font.prototype,{isFont:!0,generateShapes:function(e,t=100){const r=[],n=createPaths(e,t,this.data);for(let e=0,t=n.length;e<t;e++)Array.prototype.push.apply(r,n[e].toShapes());return r}}),FontLoader$1.prototype=Object.assign(Object.create(Loader$1.prototype),{constructor:FontLoader$1,load:function(e,t,r,n){const i=this,o=new FileLoader(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(i.withCredentials),o.load(e,(function(e){let r;try{r=JSON.parse(e)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),r=JSON.parse(e.substring(65,e.length-2))}const n=i.parse(r);t&&t(n)}),r,n)},parse:function(e){return new Font(e)}});const AudioContext={getContext:function(){return void 0===_context&&(_context=new(window.AudioContext||window.webkitAudioContext)),_context},setContext:function(e){_context=e}};function AudioLoader(e){Loader$1.call(this,e)}function HemisphereLightProbe(e,t,r){LightProbe.call(this,void 0,r);const n=(new Color).set(e),i=(new Color).set(t),o=new Vector3(n.r,n.g,n.b),a=new Vector3(i.r,i.g,i.b),s=Math.sqrt(Math.PI),l=s*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(s),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(l)}function AmbientLightProbe(e,t){LightProbe.call(this,void 0,t);const r=(new Color).set(e);this.sh.coefficients[0].set(r.r,r.g,r.b).multiplyScalar(2*Math.sqrt(Math.PI))}AudioLoader.prototype=Object.assign(Object.create(Loader$1.prototype),{constructor:AudioLoader,load:function(e,t,r,n){const i=this,o=new FileLoader(i.manager);o.setResponseType("arraybuffer"),o.setPath(i.path),o.setRequestHeader(i.requestHeader),o.setWithCredentials(i.withCredentials),o.load(e,(function(r){try{const e=r.slice(0);AudioContext.getContext().decodeAudioData(e,(function(e){t(e)}))}catch(t){n?n(t):console.error(t),i.manager.itemError(e)}}),r,n)}}),HemisphereLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:HemisphereLightProbe,isHemisphereLightProbe:!0,copy:function(e){return LightProbe.prototype.copy.call(this,e),this},toJSON:function(e){return LightProbe.prototype.toJSON.call(this,e)}}),AmbientLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:AmbientLightProbe,isAmbientLightProbe:!0,copy:function(e){return LightProbe.prototype.copy.call(this,e),this},toJSON:function(e){return LightProbe.prototype.toJSON.call(this,e)}});const _eyeRight=new Matrix4,_eyeLeft=new Matrix4;function StereoCamera(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new PerspectiveCamera,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new PerspectiveCamera,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(StereoCamera.prototype,{update:function(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const r=e.projectionMatrix.clone(),n=t.eyeSep/2,i=n*t.near/t.focus,o=t.near*Math.tan(MathUtils.DEG2RAD*t.fov*.5)/t.zoom;let a,s;_eyeLeft.elements[12]=-n,_eyeRight.elements[12]=n,a=-o*t.aspect+i,s=o*t.aspect+i,r.elements[0]=2*t.near/(s-a),r.elements[8]=(s+a)/(s-a),this.cameraL.projectionMatrix.copy(r),a=-o*t.aspect-i,s=o*t.aspect-i,r.elements[0]=2*t.near/(s-a),r.elements[8]=(s+a)/(s-a),this.cameraR.projectionMatrix.copy(r)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(_eyeLeft),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(_eyeRight)}});class Clock{constructor(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function now(){return("undefined"==typeof performance?Date:performance).now()}const _position$2=new Vector3,_quaternion$3=new Quaternion,_scale$1=new Vector3,_orientation=new Vector3;class AudioListener extends Object3D{constructor(){super(),this.type="AudioListener",this.context=AudioContext.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Clock}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,r=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(_position$2,_quaternion$3,_scale$1),_orientation.set(0,0,-1).applyQuaternion(_quaternion$3),t.positionX){const e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(_position$2.x,e),t.positionY.linearRampToValueAtTime(_position$2.y,e),t.positionZ.linearRampToValueAtTime(_position$2.z,e),t.forwardX.linearRampToValueAtTime(_orientation.x,e),t.forwardY.linearRampToValueAtTime(_orientation.y,e),t.forwardZ.linearRampToValueAtTime(_orientation.z,e),t.upX.linearRampToValueAtTime(r.x,e),t.upY.linearRampToValueAtTime(r.y,e),t.upZ.linearRampToValueAtTime(r.z,e)}else t.setPosition(_position$2.x,_position$2.y,_position$2.z),t.setOrientation(_orientation.x,_orientation.y,_orientation.z,r.x,r.y,r.z)}}class Audio$1 extends Object3D{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const _position$3=new Vector3,_quaternion$4=new Quaternion,_scale$2=new Vector3,_orientation$1=new Vector3;class PositionalAudio extends Audio$1{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,r){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=r,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(_position$3,_quaternion$4,_scale$2),_orientation$1.set(0,0,1).applyQuaternion(_quaternion$4);const t=this.panner;if(t.positionX){const e=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(_position$3.x,e),t.positionY.linearRampToValueAtTime(_position$3.y,e),t.positionZ.linearRampToValueAtTime(_position$3.z,e),t.orientationX.linearRampToValueAtTime(_orientation$1.x,e),t.orientationY.linearRampToValueAtTime(_orientation$1.y,e),t.orientationZ.linearRampToValueAtTime(_orientation$1.z,e)}else t.setPosition(_position$3.x,_position$3.y,_position$3.z),t.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z)}}class AudioAnalyser{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let r=0;r<t.length;r++)e+=t[r];return e/t.length}}function PropertyMixer(e,t,r){let n,i,o;switch(this.binding=e,this.valueSize=r,t){case"quaternion":n=this._slerp,i=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*r),this._workIndex=5;break;case"string":case"bool":n=this._select,i=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(5*r);break;default:n=this._lerp,i=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*r)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=i,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(PropertyMixer.prototype,{accumulate:function(e,t){const r=this.buffer,n=this.valueSize,i=e*n+n;let o=this.cumulativeWeight;if(0===o){for(let e=0;e!==n;++e)r[i+e]=r[e];o=t}else{o+=t;const e=t/o;this._mixBufferRegion(r,i,0,e,n)}this.cumulativeWeight=o},accumulateAdditive:function(e){const t=this.buffer,r=this.valueSize,n=r*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,r),this.cumulativeWeightAdditive+=e},apply:function(e){const t=this.valueSize,r=this.buffer,n=e*t+t,i=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){const e=t*this._origIndex;this._mixBufferRegion(r,n,e,1-i,t)}o>0&&this._mixBufferRegionAdditive(r,n,this._addIndex*t,1,t);for(let e=t,i=t+t;e!==i;++e)if(r[e]!==r[e+t]){a.setValue(r,n);break}},saveOriginalState:function(){const e=this.binding,t=this.buffer,r=this.valueSize,n=r*this._origIndex;e.getValue(t,n);for(let e=r,i=n;e!==i;++e)t[e]=t[n+e%r];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let r=e;r<t;r++)this.buffer[r]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let r=0;r<this.valueSize;r++)this.buffer[t+r]=this.buffer[e+r]},_select:function(e,t,r,n,i){if(n>=.5)for(let n=0;n!==i;++n)e[t+n]=e[r+n]},_slerp:function(e,t,r,n){Quaternion.slerpFlat(e,t,e,t,e,r,n)},_slerpAdditive:function(e,t,r,n,i){const o=this._workIndex*i;Quaternion.multiplyQuaternionsFlat(e,o,e,t,e,r),Quaternion.slerpFlat(e,t,e,t,e,o,n)},_lerp:function(e,t,r,n,i){const o=1-n;for(let a=0;a!==i;++a){const i=t+a;e[i]=e[i]*o+e[r+a]*n}},_lerpAdditive:function(e,t,r,n,i){for(let o=0;o!==i;++o){const i=t+o;e[i]=e[i]+e[r+o]*n}}});const _RESERVED_CHARS_RE="\\[\\]\\.:\\/",_reservedRe=new RegExp("[\\[\\]\\.:\\/]","g"),_wordChar="[^\\[\\]\\.:\\/]",_wordCharOrDot="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",_directoryRe=/((?:WC+[\/:])*)/.source.replace("WC",_wordChar),_nodeRe=/(WCOD+)?/.source.replace("WCOD",_wordCharOrDot),_objectRe=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",_wordChar),_propertyRe=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",_wordChar),_trackRe=new RegExp("^"+_directoryRe+_nodeRe+_objectRe+_propertyRe+"$"),_supportedObjectNames=["material","materials","bones"];function Composite(e,t,r){const n=r||PropertyBinding.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}function PropertyBinding(e,t,r){this.path=t,this.parsedPath=r||PropertyBinding.parseTrackName(t),this.node=PropertyBinding.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}function AnimationObjectGroup(){this.uuid=MathUtils.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let t=0,r=arguments.length;t!==r;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}Object.assign(Composite.prototype,{getValue:function(e,t){this.bind();const r=this._targetGroup.nCachedObjects_,n=this._bindings[r];void 0!==n&&n.getValue(e,t)},setValue:function(e,t){const r=this._bindings;for(let n=this._targetGroup.nCachedObjects_,i=r.length;n!==i;++n)r[n].setValue(e,t)},bind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].bind()},unbind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].unbind()}}),Object.assign(PropertyBinding,{Composite:Composite,create:function(e,t,r){return e&&e.isAnimationObjectGroup?new PropertyBinding.Composite(e,t,r):new PropertyBinding(e,t,r)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(_reservedRe,"")},parseTrackName:function(e){const t=_trackRe.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const r={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=r.nodeName&&r.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const e=r.nodeName.substring(n+1);-1!==_supportedObjectNames.indexOf(e)&&(r.nodeName=r.nodeName.substring(0,n),r.objectName=e)}if(null===r.propertyName||0===r.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return r},findNode:function(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const r=e.skeleton.getBoneByName(t);if(void 0!==r)return r}if(e.children){const searchNodeSubtree=function(e){for(let r=0;r<e.length;r++){const n=e[r];if(n.name===t||n.uuid===t)return n;const i=searchNodeSubtree(n.children);if(i)return i}return null},r=searchNodeSubtree(e.children);if(r)return r}return null}}),Object.assign(PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function getValue_direct(e,t){e[t]=this.node[this.propertyName]},function getValue_array(e,t){const r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)e[t++]=r[n]},function getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]},function setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function setValue_array(e,t){const r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++]},function setValue_array_setNeedsUpdate(e,t){const r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++];this.targetObject.needsUpdate=!0},function setValue_array_setMatrixWorldNeedsUpdate(e,t){const r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)},function setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function getValue_unbound(e,t){this.bind(),this.getValue(e,t)},setValue:function getValue_unbound(e,t){this.bind(),this.setValue(e,t)},bind:function(){let e=this.node;const t=this.parsedPath,r=t.objectName,n=t.propertyName;let i=t.propertyIndex;if(e||(e=PropertyBinding.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(r){let n=t.objectIndex;switch(r){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===n){n=t;break}break;default:if(void 0===e[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[r]}if(void 0!==n){if(void 0===e[n])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[n]}}const o=e[n];if(void 0===o){const r=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+r+"."+n+" but it wasn't found.",e)}let a=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let s=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===n){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}s=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=i}else void 0!==o.fromArray&&void 0!==o.toArray?(s=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(s=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=n;this.getValue=this.GetterByBindingType[s],this.setValue=this.SetterByBindingTypeAndVersioning[s][a]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(PropertyBinding.prototype,{_getValue_unbound:PropertyBinding.prototype.getValue,_setValue_unbound:PropertyBinding.prototype.setValue}),Object.assign(AnimationObjectGroup.prototype,{isAnimationObjectGroup:!0,add:function(){const e=this._objects,t=this._indicesByUUID,r=this._paths,n=this._parsedPaths,i=this._bindings,o=i.length;let a=void 0,s=e.length,l=this.nCachedObjects_;for(let c=0,u=arguments.length;c!==u;++c){const u=arguments[c],h=u.uuid;let d=t[h];if(void 0===d){d=s++,t[h]=d,e.push(u);for(let e=0,t=o;e!==t;++e)i[e].push(new PropertyBinding(u,r[e],n[e]))}else if(d<l){a=e[d];const s=--l,c=e[s];t[c.uuid]=d,e[d]=c,t[h]=s,e[s]=u;for(let e=0,t=o;e!==t;++e){const t=i[e],o=t[s];let a=t[d];t[d]=o,void 0===a&&(a=new PropertyBinding(u,r[e],n[e])),t[s]=a}}else e[d]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l},remove:function(){const e=this._objects,t=this._indicesByUUID,r=this._bindings,n=r.length;let i=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const a=arguments[o],s=a.uuid,l=t[s];if(void 0!==l&&l>=i){const o=i++,c=e[o];t[c.uuid]=l,e[l]=c,t[s]=o,e[o]=a;for(let e=0,t=n;e!==t;++e){const t=r[e],n=t[o],i=t[l];t[l]=n,t[o]=i}}}this.nCachedObjects_=i},uncache:function(){const e=this._objects,t=this._indicesByUUID,r=this._bindings,n=r.length;let i=this.nCachedObjects_,o=e.length;for(let a=0,s=arguments.length;a!==s;++a){const s=arguments[a].uuid,l=t[s];if(void 0!==l)if(delete t[s],l<i){const a=--i,s=e[a],c=--o,u=e[c];t[s.uuid]=l,e[l]=s,t[u.uuid]=a,e[a]=u,e.pop();for(let e=0,t=n;e!==t;++e){const t=r[e],n=t[a],i=t[c];t[l]=n,t[a]=i,t.pop()}}else{const i=--o,a=e[i];i>0&&(t[a.uuid]=l),e[l]=a,e.pop();for(let e=0,t=n;e!==t;++e){const t=r[e];t[l]=t[i],t.pop()}}}this.nCachedObjects_=i},subscribe_:function(e,t){const r=this._bindingsIndicesByPath;let n=r[e];const i=this._bindings;if(void 0!==n)return i[n];const o=this._paths,a=this._parsedPaths,s=this._objects,l=s.length,c=this.nCachedObjects_,u=new Array(l);n=i.length,r[e]=n,o.push(e),a.push(t),i.push(u);for(let r=c,n=s.length;r!==n;++r){const n=s[r];u[r]=new PropertyBinding(n,e,t)}return u},unsubscribe_:function(e){const t=this._bindingsIndicesByPath,r=t[e];if(void 0!==r){const n=this._paths,i=this._parsedPaths,o=this._bindings,a=o.length-1,s=o[a];t[e[a]]=r,o[r]=s,o.pop(),i[r]=i[a],i.pop(),n[r]=n[a],n.pop()}}});class AnimationAction{constructor(e,t,r=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=r,this.blendMode=n;const i=t.tracks,o=i.length,a=new Array(o),s={endingStart:2400,endingEnd:2400};for(let e=0;e!==o;++e){const t=i[e].createInterpolant(null);a[e]=t,t.settings=s}this._interpolantSettings=s,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,r){if(e.fadeOut(t),this.fadeIn(t),r){const r=this._clip.duration,n=e._clip.duration,i=n/r,o=r/n;e.warp(1,i,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,r){return e.crossFadeFrom(this,t,r)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,r){const n=this._mixer,i=n.time,o=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);const s=a.parameterPositions,l=a.sampleValues;return s[0]=i,s[1]=i+r,l[0]=e/o,l[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,r,n){if(!this.enabled)return void this._updateWeight(e);const i=this._startTime;if(null!==i){const n=(e-i)*r;if(n<0||0===r)return;this._startTime=null,t=r*n}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const e=this._interpolants,t=this._propertyBindings;switch(this.blendMode){case 2501:for(let r=0,n=e.length;r!==n;++r)e[r].evaluate(o),t[r].accumulateAdditive(a);break;case 2500:default:for(let r=0,i=e.length;r!==i;++r)e[r].evaluate(o),t[r].accumulate(n,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const r=this._weightInterpolant;if(null!==r){const n=r.evaluate(e)[0];t*=n,e>r.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const r=this._timeScaleInterpolant;if(null!==r){t*=r.evaluate(e)[0],e>r.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,r=this.loop;let n=this.time+e,i=this._loopCount;const o=2202===r;if(0===e)return-1===i?n:o&&1==(1&i)?t-n:n;if(2200===r){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else{if(!(n<0)){this.time=n;break e}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===i&&(e>=0?(i=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),n>=t||n<0){const r=Math.floor(n/t);n-=t*r,i+=Math.abs(r);const a=this.repetitions-i;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===a){const t=e<0;this._setEndings(t,!t,o)}else this._setEndings(!1,!1,o);this._loopCount=i,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:r})}}else this.time=n;if(o&&1==(1&i))return t-n}return n}_setEndings(e,t,r){const n=this._interpolantSettings;r?(n.endingStart=2401,n.endingEnd=2401):(n.endingStart=e?this.zeroSlopeAtStart?2401:2400:2402,n.endingEnd=t?this.zeroSlopeAtEnd?2401:2400:2402)}_scheduleFading(e,t,r){const n=this._mixer,i=n.time;let o=this._weightInterpolant;null===o&&(o=n._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,s=o.sampleValues;return a[0]=i,s[0]=t,a[1]=i+e,s[1]=r,this}}function AnimationMixer(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}AnimationMixer.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:AnimationMixer,_bindAction:function(e,t){const r=e._localRoot||this._root,n=e._clip.tracks,i=n.length,o=e._propertyBindings,a=e._interpolants,s=r.uuid,l=this._bindingsByRootAndName;let c=l[s];void 0===c&&(c={},l[s]=c);for(let e=0;e!==i;++e){const i=n[e],l=i.name;let u=c[l];if(void 0!==u)o[e]=u;else{if(u=o[e],void 0!==u){null===u._cacheIndex&&(++u.referenceCount,this._addInactiveBinding(u,s,l));continue}const n=t&&t._propertyBindings[e].binding.parsedPath;u=new PropertyMixer(PropertyBinding.create(r,l,n),i.ValueTypeName,i.getValueSize()),++u.referenceCount,this._addInactiveBinding(u,s,l),o[e]=u}a[e].resultBuffer=u.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,r=e._clip.uuid,n=this._actionsByClip[r];this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,r,t)}const t=e._propertyBindings;for(let e=0,r=t.length;e!==r;++e){const r=t[e];0==r.useCount++&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,r=t.length;e!==r;++e){const r=t[e];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,r){const n=this._actions,i=this._actionsByClip;let o=i[t];if(void 0===o)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=o;else{const t=o.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=n.length,n.push(e),o.actionByRoot[r]=e},_removeInactiveAction:function(e){const t=this._actions,r=t[t.length-1],n=e._cacheIndex;r._cacheIndex=n,t[n]=r,t.pop(),e._cacheIndex=null;const i=e._clip.uuid,o=this._actionsByClip,a=o[i],s=a.knownActions,l=s[s.length-1],c=e._byClipCacheIndex;l._byClipCacheIndex=c,s[c]=l,s.pop(),e._byClipCacheIndex=null;delete a.actionByRoot[(e._localRoot||this._root).uuid],0===s.length&&delete o[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){const t=e._propertyBindings;for(let e=0,r=t.length;e!==r;++e){const r=t[e];0==--r.referenceCount&&this._removeInactiveBinding(r)}},_lendAction:function(e){const t=this._actions,r=e._cacheIndex,n=this._nActiveActions++,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i},_takeBackAction:function(e){const t=this._actions,r=e._cacheIndex,n=--this._nActiveActions,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i},_addInactiveBinding:function(e,t,r){const n=this._bindingsByRootAndName,i=this._bindings;let o=n[t];void 0===o&&(o={},n[t]=o),o[r]=e,e._cacheIndex=i.length,i.push(e)},_removeInactiveBinding:function(e){const t=this._bindings,r=e.binding,n=r.rootNode.uuid,i=r.path,o=this._bindingsByRootAndName,a=o[n],s=t[t.length-1],l=e._cacheIndex;s._cacheIndex=l,t[l]=s,t.pop(),delete a[i],0===Object.keys(a).length&&delete o[n]},_lendBinding:function(e){const t=this._bindings,r=e._cacheIndex,n=this._nActiveBindings++,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i},_takeBackBinding:function(e){const t=this._bindings,r=e._cacheIndex,n=--this._nActiveBindings,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i},_lendControlInterpolant:function(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let r=e[t];return void 0===r&&(r=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),r.__cacheIndex=t,e[t]=r),r},_takeBackControlInterpolant:function(e){const t=this._controlInterpolants,r=e.__cacheIndex,n=--this._nActiveControlInterpolants,i=t[n];e.__cacheIndex=n,t[n]=e,i.__cacheIndex=r,t[r]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,r){const n=t||this._root,i=n.uuid;let o="string"==typeof e?AnimationClip.findByName(n,e):e;const a=null!==o?o.uuid:e,s=this._actionsByClip[a];let l=null;if(void 0===r&&(r=null!==o?o.blendMode:2500),void 0!==s){const e=s.actionByRoot[i];if(void 0!==e&&e.blendMode===r)return e;l=s.knownActions[0],null===o&&(o=l._clip)}if(null===o)return null;const c=new AnimationAction(this,o,t,r);return this._bindAction(c,l),this._addInactiveAction(c,a,i),c},existingAction:function(e,t){const r=t||this._root,n=r.uuid,i="string"==typeof e?AnimationClip.findByName(r,e):e,o=i?i.uuid:e,a=this._actionsByClip[o];return void 0!==a&&a.actionByRoot[n]||null},stopAllAction:function(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this},update:function(e){e*=this.timeScale;const t=this._actions,r=this._nActiveActions,n=this.time+=e,i=Math.sign(e),o=this._accuIndex^=1;for(let a=0;a!==r;++a){t[a]._update(n,e,i,o)}const a=this._bindings,s=this._nActiveBindings;for(let e=0;e!==s;++e)a[e].apply(o);return this},setTime:function(e){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){const t=this._actions,r=e.uuid,n=this._actionsByClip,i=n[r];if(void 0!==i){const e=i.knownActions;for(let r=0,n=e.length;r!==n;++r){const n=e[r];this._deactivateAction(n);const i=n._cacheIndex,o=t[t.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,o._cacheIndex=i,t[i]=o,t.pop(),this._removeInactiveBindingsForAction(n)}delete n[r]}},uncacheRoot:function(e){const t=e.uuid,r=this._actionsByClip;for(const e in r){const n=r[e].actionByRoot[t];void 0!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}const n=this._bindingsByRootAndName[t];if(void 0!==n)for(const e in n){const t=n[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}},uncacheAction:function(e,t){const r=this.existingAction(e,t);null!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}});class Uniform{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Uniform(void 0===this.value.clone?this.value:this.value.clone())}}function InstancedInterleavedBuffer(e,t,r){InterleavedBuffer.call(this,e,t),this.meshPerAttribute=r||1}function GLBufferAttribute(e,t,r,n,i){this.buffer=e,this.type=t,this.itemSize=r,this.elementSize=n,this.count=i,this.version=0}function Raycaster(e,t,r,n){this.ray=new Ray(e,t),this.near=r||0,this.far=n||1/0,this.camera=null,this.layers=new Layers,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function ascSort(e,t){return e.distance-t.distance}function intersectObject(e,t,r,n){if(e.layers.test(t.layers)&&e.raycast(t,r),!0===n){const n=e.children;for(let e=0,i=n.length;e<i;e++)intersectObject(n[e],t,r,!0)}}InstancedInterleavedBuffer.prototype=Object.assign(Object.create(InterleavedBuffer.prototype),{constructor:InstancedInterleavedBuffer,isInstancedInterleavedBuffer:!0,copy:function(e){return InterleavedBuffer.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){const t=InterleavedBuffer.prototype.clone.call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(e){const t=InterleavedBuffer.prototype.toJSON.call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}),Object.defineProperty(GLBufferAttribute.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(GLBufferAttribute.prototype,{isGLBufferAttribute:!0,setBuffer:function(e){return this.buffer=e,this},setType:function(e,t){return this.type=e,this.elementSize=t,this},setItemSize:function(e){return this.itemSize=e,this},setCount:function(e){return this.count=e,this}}),Object.assign(Raycaster.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)},intersectObject:function(e,t,r){const n=r||[];return intersectObject(e,this,n,t),n.sort(ascSort),n},intersectObjects:function(e,t,r){const n=r||[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),n;for(let r=0,i=e.length;r<i;r++)intersectObject(e[r],this,n,t);return n.sort(ascSort),n}});class Spherical{constructor(e=1,t=0,r=0){return this.radius=e,this.phi=t,this.theta=r,this}set(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this}clone(){return(new this.constructor).copy(this)}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,r){return this.radius=Math.sqrt(e*e+t*t+r*r),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,r),this.phi=Math.acos(MathUtils.clamp(t/this.radius,-1,1))),this}}class Cylindrical{constructor(e,t,r){return this.radius=void 0!==e?e:1,this.theta=void 0!==t?t:0,this.y=void 0!==r?r:0,this}set(e,t,r){return this.radius=e,this.theta=t,this.y=r,this}clone(){return(new this.constructor).copy(this)}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,r){return this.radius=Math.sqrt(e*e+r*r),this.theta=Math.atan2(e,r),this.y=t,this}}const _vector$8=new Vector2;class Box2{constructor(e,t){Object.defineProperty(this,"isBox2",{value:!0}),this.min=void 0!==e?e:new Vector2(1/0,1/0),this.max=void 0!==t?t:new Vector2(-1/0,-1/0)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const r=_vector$8.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new Vector2),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new Vector2),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new Vector2),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new Vector2),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return _vector$8.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const _startP=new Vector3,_startEnd=new Vector3;class Line3{constructor(e,t){this.start=void 0!==e?e:new Vector3,this.end=void 0!==t?t:new Vector3}set(e,t){return this.start.copy(e),this.end.copy(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new Vector3),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new Vector3),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new Vector3),this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){_startP.subVectors(e,this.start),_startEnd.subVectors(this.end,this.start);const r=_startEnd.dot(_startEnd);let n=_startEnd.dot(_startP)/r;return t&&(n=MathUtils.clamp(n,0,1)),n}closestPointToPoint(e,t,r){const n=this.closestPointToPointParameter(e,t);return void 0===r&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),r=new Vector3),this.delta(r).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}function ImmediateRenderObject(e){Object3D.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}ImmediateRenderObject.prototype=Object.create(Object3D.prototype),ImmediateRenderObject.prototype.constructor=ImmediateRenderObject,ImmediateRenderObject.prototype.isImmediateRenderObject=!0;const _vector$9=new Vector3;class SpotLightHelper extends Object3D{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const r=new BufferGeometry,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1,r=32;e<r;e++,t++){const i=e/r*Math.PI*2,o=t/r*Math.PI*2;n.push(Math.cos(i),Math.sin(i),1,Math.cos(o),Math.sin(o),1)}r.setAttribute("position",new Float32BufferAttribute(n,3));const i=new LineBasicMaterial({fog:!1,toneMapped:!1});this.cone=new LineSegments(r,i),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),_vector$9.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(_vector$9),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const _vector$a=new Vector3,_boneMatrix=new Matrix4,_matrixWorldInv=new Matrix4;class SkeletonHelper extends LineSegments{constructor(e){const t=getBoneList(e),r=new BufferGeometry,n=[],i=[],o=new Color(0,0,1),a=new Color(0,1,0);for(let e=0;e<t.length;e++){const r=t[e];r.parent&&r.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),i.push(o.r,o.g,o.b),i.push(a.r,a.g,a.b))}r.setAttribute("position",new Float32BufferAttribute(n,3)),r.setAttribute("color",new Float32BufferAttribute(i,3));super(r,new LineBasicMaterial({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,r=this.geometry,n=r.getAttribute("position");_matrixWorldInv.copy(this.root.matrixWorld).invert();for(let e=0,r=0;e<t.length;e++){const i=t[e];i.parent&&i.parent.isBone&&(_boneMatrix.multiplyMatrices(_matrixWorldInv,i.matrixWorld),_vector$a.setFromMatrixPosition(_boneMatrix),n.setXYZ(r,_vector$a.x,_vector$a.y,_vector$a.z),_boneMatrix.multiplyMatrices(_matrixWorldInv,i.parent.matrixWorld),_vector$a.setFromMatrixPosition(_boneMatrix),n.setXYZ(r+1,_vector$a.x,_vector$a.y,_vector$a.z),r+=2)}r.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function getBoneList(e){const t=[];e&&e.isBone&&t.push(e);for(let r=0;r<e.children.length;r++)t.push.apply(t,getBoneList(e.children[r]));return t}class PointLightHelper extends Mesh{constructor(e,t,r){super(new SphereBufferGeometry(t,4,2),new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.light.updateMatrixWorld(),this.color=r,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const _vector$b=new Vector3,_color1=new Color,_color2=new Color;class HemisphereLightHelper extends Object3D{constructor(e,t,r){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r;const n=new OctahedronBufferGeometry(t);n.rotateY(.5*Math.PI),this.material=new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const i=n.getAttribute("position"),o=new Float32Array(3*i.count);n.setAttribute("color",new BufferAttribute(o,3)),this.add(new Mesh(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");_color1.copy(this.light.color),_color2.copy(this.light.groundColor);for(let e=0,r=t.count;e<r;e++){const n=e<r/2?_color1:_color2;t.setXYZ(e,n.r,n.g,n.b)}t.needsUpdate=!0}e.lookAt(_vector$b.setFromMatrixPosition(this.light.matrixWorld).negate())}}class GridHelper extends LineSegments{constructor(e=10,t=10,r=4473924,n=8947848){r=new Color(r),n=new Color(n);const i=t/2,o=e/t,a=e/2,s=[],l=[];for(let e=0,c=0,u=-a;e<=t;e++,u+=o){s.push(-a,0,u,a,0,u),s.push(u,0,-a,u,0,a);const t=e===i?r:n;t.toArray(l,c),c+=3,t.toArray(l,c),c+=3,t.toArray(l,c),c+=3,t.toArray(l,c),c+=3}const c=new BufferGeometry;c.setAttribute("position",new Float32BufferAttribute(s,3)),c.setAttribute("color",new Float32BufferAttribute(l,3));super(c,new LineBasicMaterial({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class PolarGridHelper extends LineSegments{constructor(e=10,t=16,r=8,n=64,i=4473924,o=8947848){i=new Color(i),o=new Color(o);const a=[],s=[];for(let r=0;r<=t;r++){const n=r/t*(2*Math.PI),l=Math.sin(n)*e,c=Math.cos(n)*e;a.push(0,0,0),a.push(l,0,c);const u=1&r?i:o;s.push(u.r,u.g,u.b),s.push(u.r,u.g,u.b)}for(let t=0;t<=r;t++){const l=1&t?i:o,c=e-e/r*t;for(let e=0;e<n;e++){let t=e/n*(2*Math.PI),r=Math.sin(t)*c,i=Math.cos(t)*c;a.push(r,0,i),s.push(l.r,l.g,l.b),t=(e+1)/n*(2*Math.PI),r=Math.sin(t)*c,i=Math.cos(t)*c,a.push(r,0,i),s.push(l.r,l.g,l.b)}}const l=new BufferGeometry;l.setAttribute("position",new Float32BufferAttribute(a,3)),l.setAttribute("color",new Float32BufferAttribute(s,3));super(l,new LineBasicMaterial({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const _v1$6=new Vector3,_v2$3=new Vector3,_v3$1=new Vector3;class DirectionalLightHelper extends Object3D{constructor(e,t,r){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r,void 0===t&&(t=1);let n=new BufferGeometry;n.setAttribute("position",new Float32BufferAttribute([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const i=new LineBasicMaterial({fog:!1,toneMapped:!1});this.lightPlane=new Line(n,i),this.add(this.lightPlane),n=new BufferGeometry,n.setAttribute("position",new Float32BufferAttribute([0,0,0,0,0,1],3)),this.targetLine=new Line(n,i),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){_v1$6.setFromMatrixPosition(this.light.matrixWorld),_v2$3.setFromMatrixPosition(this.light.target.matrixWorld),_v3$1.subVectors(_v2$3,_v1$6),this.lightPlane.lookAt(_v2$3),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(_v2$3),this.targetLine.scale.z=_v3$1.length()}}const _vector$c=new Vector3,_camera=new Camera;class CameraHelper extends LineSegments{constructor(e){const t=new BufferGeometry,r=new LineBasicMaterial({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],i=[],o={},a=new Color(16755200),s=new Color(16711680),l=new Color(43775),c=new Color(16777215),u=new Color(3355443);function addLine(e,t,r){addPoint(e,r),addPoint(t,r)}function addPoint(e,t){n.push(0,0,0),i.push(t.r,t.g,t.b),void 0===o[e]&&(o[e]=[]),o[e].push(n.length/3-1)}addLine("n1","n2",a),addLine("n2","n4",a),addLine("n4","n3",a),addLine("n3","n1",a),addLine("f1","f2",a),addLine("f2","f4",a),addLine("f4","f3",a),addLine("f3","f1",a),addLine("n1","f1",a),addLine("n2","f2",a),addLine("n3","f3",a),addLine("n4","f4",a),addLine("p","n1",s),addLine("p","n2",s),addLine("p","n3",s),addLine("p","n4",s),addLine("u1","u2",l),addLine("u2","u3",l),addLine("u3","u1",l),addLine("c","t",c),addLine("p","c",u),addLine("cn1","cn2",u),addLine("cn3","cn4",u),addLine("cf1","cf2",u),addLine("cf3","cf4",u),t.setAttribute("position",new Float32BufferAttribute(n,3)),t.setAttribute("color",new Float32BufferAttribute(i,3)),super(t,r),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}update(){const e=this.geometry,t=this.pointMap;_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),setPoint("c",t,e,_camera,0,0,-1),setPoint("t",t,e,_camera,0,0,1),setPoint("n1",t,e,_camera,-1,-1,-1),setPoint("n2",t,e,_camera,1,-1,-1),setPoint("n3",t,e,_camera,-1,1,-1),setPoint("n4",t,e,_camera,1,1,-1),setPoint("f1",t,e,_camera,-1,-1,1),setPoint("f2",t,e,_camera,1,-1,1),setPoint("f3",t,e,_camera,-1,1,1),setPoint("f4",t,e,_camera,1,1,1),setPoint("u1",t,e,_camera,.7,1.1,-1),setPoint("u2",t,e,_camera,-.7,1.1,-1),setPoint("u3",t,e,_camera,0,2,-1),setPoint("cf1",t,e,_camera,-1,0,1),setPoint("cf2",t,e,_camera,1,0,1),setPoint("cf3",t,e,_camera,0,-1,1),setPoint("cf4",t,e,_camera,0,1,1),setPoint("cn1",t,e,_camera,-1,0,-1),setPoint("cn2",t,e,_camera,1,0,-1),setPoint("cn3",t,e,_camera,0,-1,-1),setPoint("cn4",t,e,_camera,0,1,-1),e.getAttribute("position").needsUpdate=!0}}function setPoint(e,t,r,n,i,o,a){_vector$c.set(i,o,a).unproject(n);const s=t[e];if(void 0!==s){const e=r.getAttribute("position");for(let t=0,r=s.length;t<r;t++)e.setXYZ(s[t],_vector$c.x,_vector$c.y,_vector$c.z)}}const _box$3=new Box3;class BoxHelper extends LineSegments{constructor(e,t=16776960){const r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),i=new BufferGeometry;i.setIndex(new BufferAttribute(r,1)),i.setAttribute("position",new BufferAttribute(n,3)),super(i,new LineBasicMaterial({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&_box$3.setFromObject(this.object),_box$3.isEmpty())return;const t=_box$3.min,r=_box$3.max,n=this.geometry.attributes.position,i=n.array;i[0]=r.x,i[1]=r.y,i[2]=r.z,i[3]=t.x,i[4]=r.y,i[5]=r.z,i[6]=t.x,i[7]=t.y,i[8]=r.z,i[9]=r.x,i[10]=t.y,i[11]=r.z,i[12]=r.x,i[13]=r.y,i[14]=t.z,i[15]=t.x,i[16]=r.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=r.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return LineSegments.prototype.copy.call(this,e),this.object=e.object,this}}class Box3Helper extends LineSegments{constructor(e,t=16776960){const r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new BufferGeometry;n.setIndex(new BufferAttribute(r,1)),n.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(n,new LineBasicMaterial({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class PlaneHelper extends Line{constructor(e,t=1,r=16776960){const n=r,i=new BufferGeometry;i.setAttribute("position",new Float32BufferAttribute([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),super(i,new LineBasicMaterial({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const o=new BufferGeometry;o.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),o.computeBoundingSphere(),this.add(new Mesh(o,new MeshBasicMaterial({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?1:0,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const _axis=new Vector3;let _lineGeometry,_coneGeometry;class ArrowHelper extends Object3D{constructor(e,t,r,n,i,o){super(),this.type="ArrowHelper",void 0===e&&(e=new Vector3(0,0,1)),void 0===t&&(t=new Vector3(0,0,0)),void 0===r&&(r=1),void 0===n&&(n=16776960),void 0===i&&(i=.2*r),void 0===o&&(o=.2*i),void 0===_lineGeometry&&(_lineGeometry=new BufferGeometry,_lineGeometry.setAttribute("position",new Float32BufferAttribute([0,0,0,0,1,0],3)),_coneGeometry=new CylinderBufferGeometry(0,.5,1,5,1),_coneGeometry.translate(0,-.5,0)),this.position.copy(t),this.line=new Line(_lineGeometry,new LineBasicMaterial({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r,i,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{_axis.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(_axis,t)}}setLength(e,t,r){void 0===t&&(t=.2*e),void 0===r&&(r=.2*t),this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class AxesHelper extends LineSegments{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],r=new BufferGeometry;r.setAttribute("position",new Float32BufferAttribute(t,3)),r.setAttribute("color",new Float32BufferAttribute([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(r,new LineBasicMaterial({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}}const _floatView=new Float32Array(1),_int32View=new Int32Array(_floatView.buffer),DataUtils={toHalfFloat:function(e){_floatView[0]=e;const t=_int32View[0];let r=t>>16&32768,n=t>>12&2047;const i=t>>23&255;return i<103?r:i>142?(r|=31744,r|=(255==i?0:1)&&8388607&t,r):i<113?(n|=2048,r|=(n>>114-i)+(n>>113-i&1),r):(r|=i-112<<10|n>>1,r+=1&n,r)}},LOD_MIN=4,LOD_MAX=8,SIZE_MAX=Math.pow(2,8),EXTRA_LOD_SIGMA=[.125,.215,.35,.446,.526,.582],TOTAL_LODS=5+EXTRA_LOD_SIGMA.length,MAX_SAMPLES=20,ENCODINGS={3e3:0,3001:1,3002:2,3004:3,3005:4,3006:5,3007:6},_flatCamera=new OrthographicCamera,{_lodPlanes:_lodPlanes,_sizeLods:_sizeLods,_sigmas:_sigmas}=_createPlanes(),_clearColor=new Color;let _oldTarget=null;const PHI=(1+Math.sqrt(5))/2,INV_PHI=1/PHI,_axisDirections=[new Vector3(1,1,1),new Vector3(-1,1,1),new Vector3(1,1,-1),new Vector3(-1,1,-1),new Vector3(0,PHI,INV_PHI),new Vector3(0,PHI,-INV_PHI),new Vector3(INV_PHI,0,PHI),new Vector3(-INV_PHI,0,PHI),new Vector3(PHI,INV_PHI,0),new Vector3(-PHI,INV_PHI,0)];class PMREMGenerator{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=_getBlurShader(20),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,r=.1,n=100){_oldTarget=this._renderer.getRenderTarget();const i=this._allocateTargets();return this._sceneToCubeUV(e,r,n,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=_getCubemapShader(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=_getEquirectShader(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<_lodPlanes.length;e++)_lodPlanes[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(_oldTarget),e.scissorTest=!1,_setViewport(e,0,0,e.width,e.height)}_fromTexture(e){_oldTarget=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){const t={magFilter:1003,minFilter:1003,generateMipmaps:!1,type:1009,format:1023,encoding:_isLDR(e)?e.encoding:3002,depthBuffer:!1},r=_createRenderTarget(t);return r.depthBuffer=!e,this._pingPongRenderTarget=_createRenderTarget(t),r}_compileMaterial(e){const t=new Mesh(_lodPlanes[0],e);this._renderer.compile(t,_flatCamera)}_sceneToCubeUV(e,t,r,n){const i=new PerspectiveCamera(90,1,t,r),o=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],s=this._renderer,l=s.outputEncoding,c=s.toneMapping;s.getClearColor(_clearColor);const u=s.getClearAlpha();s.toneMapping=0,s.outputEncoding=3e3;let h=e.background;if(h&&h.isColor){h.convertSRGBToLinear();const t=Math.max(h.r,h.g,h.b),r=Math.min(Math.max(Math.ceil(Math.log2(t)),-128),127);h=h.multiplyScalar(Math.pow(2,-r));const n=(r+128)/255;s.setClearColor(h,n),e.background=null}for(let t=0;t<6;t++){const r=t%3;0==r?(i.up.set(0,o[t],0),i.lookAt(a[t],0,0)):1==r?(i.up.set(0,0,o[t]),i.lookAt(0,a[t],0)):(i.up.set(0,o[t],0),i.lookAt(0,0,a[t])),_setViewport(n,r*SIZE_MAX,t>2?SIZE_MAX:0,SIZE_MAX,SIZE_MAX),s.setRenderTarget(n),s.render(e,i)}s.toneMapping=c,s.outputEncoding=l,s.setClearColor(_clearColor,u)}_textureToCubeUV(e,t){const r=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=_getCubemapShader()):null==this._equirectShader&&(this._equirectShader=_getEquirectShader());const n=e.isCubeTexture?this._cubemapShader:this._equirectShader,i=new Mesh(_lodPlanes[0],n),o=n.uniforms;o.envMap.value=e,e.isCubeTexture||o.texelSize.value.set(1/e.image.width,1/e.image.height),o.inputEncoding.value=ENCODINGS[e.encoding],o.outputEncoding.value=ENCODINGS[t.texture.encoding],_setViewport(t,0,0,3*SIZE_MAX,2*SIZE_MAX),r.setRenderTarget(t),r.render(i,_flatCamera)}_applyPMREM(e){const t=this._renderer,r=t.autoClear;t.autoClear=!1;for(let t=1;t<TOTAL_LODS;t++){const r=Math.sqrt(_sigmas[t]*_sigmas[t]-_sigmas[t-1]*_sigmas[t-1]),n=_axisDirections[(t-1)%_axisDirections.length];this._blur(e,t-1,t,r,n)}t.autoClear=r}_blur(e,t,r,n,i){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,r,n,"latitudinal",i),this._halfBlur(o,e,r,r,n,"longitudinal",i)}_halfBlur(e,t,r,n,i,o,a){const s=this._renderer,l=this._blurMaterial;"latitudinal"!==o&&"longitudinal"!==o&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new Mesh(_lodPlanes[n],l),u=l.uniforms,h=_sizeLods[r]-1,d=isFinite(i)?Math.PI/(2*h):2*Math.PI/39,p=i/d,m=isFinite(i)?1+Math.floor(3*p):20;m>20&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let e=0;e<20;++e){const t=e/p,r=Math.exp(-t*t/2);f.push(r),0==e?g+=r:e<m&&(g+=2*r)}for(let e=0;e<f.length;e++)f[e]=f[e]/g;u.envMap.value=e.texture,u.samples.value=m,u.weights.value=f,u.latitudinal.value="latitudinal"===o,a&&(u.poleAxis.value=a),u.dTheta.value=d,u.mipInt.value=8-r,u.inputEncoding.value=ENCODINGS[e.texture.encoding],u.outputEncoding.value=ENCODINGS[e.texture.encoding];const _=_sizeLods[n];_setViewport(t,3*Math.max(0,SIZE_MAX-2*_),(0===n?0:2*SIZE_MAX)+2*_*(n>4?n-8+4:0),3*_,2*_),s.setRenderTarget(t),s.render(c,_flatCamera)}}function _isLDR(e){return void 0!==e&&1009===e.type&&(3e3===e.encoding||3001===e.encoding||3007===e.encoding)}function _createPlanes(){const e=[],t=[],r=[];let n=8;for(let i=0;i<TOTAL_LODS;i++){const o=Math.pow(2,n);t.push(o);let a=1/o;i>4?a=EXTRA_LOD_SIGMA[i-8+4-1]:0==i&&(a=0),r.push(a);const s=1/(o-1),l=-s/2,c=1+s/2,u=[l,l,c,l,c,c,l,l,c,c,l,c],h=6,d=6,p=3,m=2,f=1,g=new Float32Array(p*d*h),_=new Float32Array(m*d*h),y=new Float32Array(f*d*h);for(let e=0;e<h;e++){const t=e%3*2/3-1,r=e>2?0:-1,n=[t,r,0,t+2/3,r,0,t+2/3,r+1,0,t,r,0,t+2/3,r+1,0,t,r+1,0];g.set(n,p*d*e),_.set(u,m*d*e);const i=[e,e,e,e,e,e];y.set(i,f*d*e)}const x=new BufferGeometry;x.setAttribute("position",new BufferAttribute(g,p)),x.setAttribute("uv",new BufferAttribute(_,m)),x.setAttribute("faceIndex",new BufferAttribute(y,f)),e.push(x),n>4&&n--}return{_lodPlanes:e,_sizeLods:t,_sigmas:r}}function _createRenderTarget(e){const t=new WebGLRenderTarget(3*SIZE_MAX,3*SIZE_MAX,e);return t.texture.mapping=306,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function _setViewport(e,t,r,n,i){e.viewport.set(t,r,n,i),e.scissor.set(t,r,n,i)}function _getBlurShader(e){return new RawShaderMaterial({name:"SphericalGaussianBlur",defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:new Float32Array(e)},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:new Vector3(0,1,0)},inputEncoding:{value:ENCODINGS[3e3]},outputEncoding:{value:ENCODINGS[3e3]}},vertexShader:_getCommonVertexShader(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}function _getEquirectShader(){return new RawShaderMaterial({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:new Vector2(1,1)},inputEncoding:{value:ENCODINGS[3e3]},outputEncoding:{value:ENCODINGS[3e3]}},vertexShader:_getCommonVertexShader(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}function _getCubemapShader(){return new RawShaderMaterial({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ENCODINGS[3e3]},outputEncoding:{value:ENCODINGS[3e3]}},vertexShader:_getCommonVertexShader(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${_getEncodings()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}function _getCommonVertexShader(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function _getEncodings(){return"\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t"}function Face4(e,t,r,n,i,o,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new Face3(e,t,r,i,o,a)}const LineStrip=0,LinePieces=1,NoColors=0,FaceColors=1,VertexColors=2;function MeshFaceMaterial(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function MultiMaterial(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function PointCloud(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Points(e,t)}function Particle(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Sprite(e)}function ParticleSystem(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Points(e,t)}function PointCloudMaterial(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function ParticleBasicMaterial(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function ParticleSystemMaterial(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function Vertex(e,t,r){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new Vector3(e,t,r)}function DynamicBufferAttribute(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new BufferAttribute(e,t).setUsage(35048)}function Int8Attribute(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Int8BufferAttribute(e,t)}function Uint8Attribute(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Uint8BufferAttribute(e,t)}function Uint8ClampedAttribute(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Uint8ClampedBufferAttribute(e,t)}function Int16Attribute(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Int16BufferAttribute(e,t)}function Uint16Attribute(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Uint16BufferAttribute(e,t)}function Int32Attribute(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Int32BufferAttribute(e,t)}function Uint32Attribute(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Uint32BufferAttribute(e,t)}function Float32Attribute(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Float32BufferAttribute(e,t)}function Float64Attribute(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Float64BufferAttribute(e,t)}function ClosedSplineCurve3(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom",this.closed=!0}function SplineCurve3(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom"}function Spline(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom"}function AxisHelper(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new AxesHelper(e)}function BoundingBoxHelper(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new BoxHelper(e,t)}function EdgesHelper(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new LineSegments(new EdgesGeometry(e.geometry),new LineBasicMaterial({color:void 0!==t?t:16777215}))}function WireframeHelper(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new LineSegments(new WireframeGeometry(e.geometry),new LineBasicMaterial({color:void 0!==t?t:16777215}))}function XHRLoader(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new FileLoader(e)}function BinaryTextureLoader(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new DataTextureLoader(e)}function WebGLRenderTargetCube(e,t,r){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new WebGLCubeRenderTarget(e,r)}Curve.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(Curve.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Object.assign(CurvePath.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=new Geometry;for(let r=0,n=e.length;r<n;r++){const n=e[r];t.vertices.push(new Vector3(n.x,n.y,n.z||0))}return t}}),Object.assign(Path.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}}),ClosedSplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype),SplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype),Spline.prototype=Object.create(CatmullRomCurve3.prototype),Object.assign(Spline.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),GridHelper.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},SkeletonHelper.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(Loader$1.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),LoaderUtils.extractUrlBase(e)}}),Loader$1.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(Box2.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(Box3.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(Sphere.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),Frustum.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Line3.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Object.assign(MathUtils,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),MathUtils.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),MathUtils.ceilPowerOfTwo(e)}}),Object.assign(Matrix3.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},getInverse:function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()}}),Object.assign(Matrix4.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Vector3).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,r,n,i,o){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,n,r,i,o)},getInverse:function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()}}),Plane.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},Object.assign(Quaternion.prototype,{multiplyVector3:function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},inverse:function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()}}),Object.assign(Ray.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(Triangle.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}}),Object.assign(Triangle,{barycoordFromPoint:function(e,t,r,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Triangle.getBarycoord(e,t,r,n,i)},normal:function(e,t,r,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Triangle.getNormal(e,t,r,n)}}),Object.assign(Shape.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ExtrudeGeometry(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ShapeGeometry(this,e)}}),Object.assign(Vector2.prototype,{fromAttribute:function(e,t,r){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,r){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Vector4.prototype,{fromAttribute:function(e,t,r){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Geometry.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.assign(Object3D.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(Object3D.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(Mesh.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(Mesh.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(LOD.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Skeleton.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),SkinnedMesh.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Curve.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),PerspectiveCamera.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Light.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(BufferAttribute.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),35048===this.usage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(35048)}}}),Object.assign(BufferAttribute.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?35048:35044),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(BufferGeometry.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new BufferAttribute(arguments[1],arguments[2])))},addDrawCall:function(e,t,r){void 0!==r&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(InstancedBufferGeometry.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}}),Object.defineProperties(Raycaster.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}}),Object.defineProperties(InterleavedBuffer.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),35048===this.usage},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}}),Object.assign(InterleavedBuffer.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?35048:35044),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(ExtrudeBufferGeometry.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.assign(Scene.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}}),Object.defineProperties(Uniform.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Material.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Color}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(MeshPhongMaterial.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(MeshPhysicalMaterial.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(e){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=e}}}),Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.assign(WebGLRenderer.prototype,{clearTarget:function(e,t,r,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,r,n)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?3001:3e3}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(WebGLShadowMap.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Object.defineProperties(Audio$1.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return(new AudioLoader).load(e,(function(e){t.setBuffer(e)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),AudioAnalyser.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},CubeCamera.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},CubeCamera.prototype.clear=function(e,t,r,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,r,n)};const GeometryUtils={merge:function(e,t,r){let n;console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),t.isMesh&&(t.matrixAutoUpdate&&t.updateMatrix(),n=t.matrix,t=t.geometry),e.merge(t,n,r)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}};function CanvasRenderer(){console.error("THREE.CanvasRenderer has been removed")}function JSONLoader(){console.error("THREE.JSONLoader has been removed.")}ImageUtils.crossOrigin=void 0,ImageUtils.loadTexture=function(e,t,r,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new TextureLoader;i.setCrossOrigin(this.crossOrigin);const o=i.load(e,r,void 0,n);return t&&(o.mapping=t),o},ImageUtils.loadTextureCube=function(e,t,r,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new CubeTextureLoader;i.setCrossOrigin(this.crossOrigin);const o=i.load(e,r,void 0,n);return t&&(o.mapping=t),o},ImageUtils.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ImageUtils.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const SceneUtils={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function LensFlare(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"124"}}));class TextureLoader$1 extends Loader{constructor(e,t){super(e,t),this.defaultOptions={imageOrientation:"flipY",premultiplyAlpha:"none"},this.options=this.defaultOptions}load(e,t){e=Assets.getPath(e);const r=Assets.get(e),n=new Texture;let i;return n.encoding=3001,i=r?Promise.resolve(r):Device.agent.includes("chrome")?Thread.threads?ImageBitmapLoaderThread.load(e,Assets.options,this.options):fetch(e,Assets.options).then(e=>e.blob()).then(e=>createImageBitmap(e,this.options)):Assets.loadImage(e),i.then(r=>{if(r.error)throw new Error(r.error);n.image=r,n.format=/jpe?g/.test(e)?1022:1023,MathUtils.isPowerOfTwo(r.width)&&MathUtils.isPowerOfTwo(r.height)||(n.minFilter=1006,n.generateMipmaps=!1),n.needsUpdate=!0,n.onUpdate=()=>{r.close&&r.close(),n.onUpdate=null},Assets.add(e,n),this.increment(),t&&t(n)}).catch(e=>{this.increment(),t&&t(e)}),this.total++,n}setOptions(e){return this.options=Object.assign(this.defaultOptions,e),this}}function getFullscreenTriangle(){const e=new BufferGeometry,t=new Float32Array([-1,-1,3,-1,-1,3]),r=new Float32Array([0,0,2,0,0,2]);return e.setAttribute("position",new BufferAttribute(t,2)),e.setAttribute("uv",new BufferAttribute(r,2)),e}function getFrustum(e,t=0){const r=MathUtils.degToRad(e.fov),n=2*Math.tan(r/2)*(e.position.z-t);return{width:n*e.aspect,height:n}}var vertexShader="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",spherize="\n/**\n * This is a port to GLSL of the GEGL Spherize image processing operation.\n *\n * Author: pschroen\n *\n * GEGL Spherize:\n *   http://gegl.org/operations/gegl-spherize.html\n *   https://docs.gimp.org/2.10/en/gimp-filter-spherize.html\n *\n * GEGL is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * GEGL is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with GEGL; if not, see <https://www.gnu.org/licenses/>.\n *\n * Copyright (C) 2017 Ell\n */\n\n#define G_PI    3.1415926535897932384626433832795028841971693993751\n#define G_PI_2  1.5707963267948966192313216916397514420985846996876\n#define EPSILON 1e-10\n\nvec4 spherize(sampler2D image, vec2 uv, vec2 center, vec2 direction, float angle_of_view, float curvature, float amount) {\n    direction = 2.0 * direction;\n\n    float coangle_of_view_2 = max(180.0 - angle_of_view, 0.01) * G_PI / 360.0;\n    float focal_length      = tan(coangle_of_view_2);\n    float curvature_sign    = curvature > 0.0 ? 1.0 : -1.0;\n    float cap_angle_2       = abs(curvature) * coangle_of_view_2;\n    float cap_radius        = 1.0 / sin(cap_angle_2);\n    float cap_depth         = curvature_sign * cap_radius * cos(cap_angle_2);\n    float factor            = abs(amount);\n\n    float f     = focal_length;\n    float f2    = f * f;\n    float r     = cap_radius;\n    float r_inv = 1.0 / r;\n    float r2    = r * r;\n    float p     = cap_depth;\n    float f_p   = f + p;\n    float f_p2  = f_p * f_p;\n    float f_pf  = f_p * f;\n    float a     = cap_angle_2;\n    float a_inv = 1.0 / a;\n    float sgn   = curvature_sign;\n\n    bool perspective = angle_of_view > EPSILON;\n    bool inverse     = amount < 0.0;\n\n    float x = direction.x * (uv.x - center.x);\n    float y = direction.y * (uv.y - center.y);\n\n    float d2 = x * x + y * y;\n\n    if (d2 > EPSILON && d2 < 1.0 - EPSILON) {\n        float d = sqrt(d2);\n        float src_d = d;\n\n        if (!inverse) {\n            float d2_f2 = d2 + f2;\n\n            if (perspective)\n                src_d = (f_pf - sgn * sqrt(d2_f2 * r2 - f_p2 * d2)) * d / d2_f2;\n\n            src_d = (G_PI_2 - acos(src_d * r_inv)) * a_inv;\n        } else {\n            src_d = r * cos(G_PI_2 - src_d * a);\n\n            if (perspective)\n                src_d = f * src_d / (f_p - sgn * sqrt(r2 - src_d * src_d));\n        }\n\n        if (factor < 1.0)\n            src_d = d + (src_d - d) * factor;\n\n        uv.x = direction.x > 0.0 ? center.x + src_d * x / (direction.x * d) : uv.x;\n        uv.y = direction.y > 0.0 ? center.y + src_d * y / (direction.y * d) : uv.y;\n    }\n\n    return texture2D(image, uv);\n}\n\nvec4 spherize(sampler2D image, vec2 uv, vec2 center, vec2 direction) {\n    return spherize(image, uv, center, direction, 0.0, 1.0, 1.0);\n}\n\nvec4 spherize(sampler2D image, vec2 uv, vec2 direction) {\n    return spherize(image, uv, vec2(0.5, 0.5), direction, 0.0, 1.0, 1.0);\n}\n\nvec4 spherize(sampler2D image, vec2 uv) {\n    return spherize(image, uv, vec2(0.5, 0.5), vec2(1.0, 1.0), 0.0, 1.0, 1.0);\n}\n",fragmentShader=`\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform vec2 uDirection;\n\nvarying vec2 vUv;\n\n${spherize}\n\nvoid main() {\n    gl_FragColor = spherize(tMap, vUv, uDirection);\n}\n`;class SpherizeImage{constructor(e,t){this.renderer=e,this.scene=new Scene,this.camera=new OrthographicCamera(-1,1,1,-1,0,1),this.geometry=getFullscreenTriangle(),this.material=new RawShaderMaterial({uniforms:{tMap:new Uniform(null),uDirection:new Uniform(t)},vertexShader:vertexShader,fragmentShader:fragmentShader,blending:0,depthWrite:!1,depthTest:!1}),this.screen=new Mesh(this.geometry,this.material),this.screen.frustumCulled=!1,this.scene.add(this.screen),this.output=new WebGLRenderTarget(1,1,{depthBuffer:!1})}setSize(e,t){this.width=e,this.height=t,this.output.setSize(e,t)}convert(e,t){this.setSize(e.width,e.height);const r=new Texture(e);r.minFilter=1006,r.encoding=3001,r.generateMipmaps=!1,r.needsUpdate=!0,this.material.uniforms.tMap.value=r;const n=this.renderer.getRenderTarget();this.renderer.setRenderTarget(this.output),!1===this.renderer.autoClear&&this.renderer.clear(),this.renderer.render(this.scene,this.camera),this.renderer.setRenderTarget(n),r.dispose();const i=new Uint8Array(this.width*this.height*4);this.renderer.readRenderTargetPixels(this.output,0,0,this.width,this.height,i);const o=new ImageData(new Uint8ClampedArray(i),this.width,this.height),a=document.createElement("canvas"),s=a.getContext("2d");return a.width=t.double?2*this.width:this.width,a.height=this.height,s.putImageData(o,0,0),t.double&&s.putImageData(o,this.width,0),a}destroy(){this.output.dispose(),this.material.dispose(),this.geometry.dispose();for(const e in this)this[e]=null;return null}}class SpherizeTextureLoader extends Loader{constructor(e,t=SpherizeTextureLoader.RADIAL){super(),this.spherize=new SpherizeImage(e,t),this.textureLoader=new TextureLoader$1,this.textureLoader.setOptions({imageOrientation:"none"}),this.defaultOptions={double:!1},this.options=this.defaultOptions}load(e,t){const r=this.textureLoader.load(e,e=>{e.image=this.spherize.convert(e.image,this.options),e.needsUpdate=!0,this.increment(),t&&t(e)});return this.total++,r}setOptions(e){return this.options=Object.assign(this.defaultOptions,e),this}destroy(){return this.textureLoader.destroy(),this.spherize.destroy(),super.destroy()}}SpherizeTextureLoader.RADIAL=new Vector2(1,1),SpherizeTextureLoader.HORIZONTAL=new Vector2(1,0),SpherizeTextureLoader.VERTICAL=new Vector2(0,1),SpherizeTextureLoader.NONE=new Vector2(0,0);class SphericalCubeTextureLoader extends Loader{constructor(e,t=!1){super(),this.renderer=e,this.textureLoader=new SpherizeTextureLoader(e,SpherizeTextureLoader.VERTICAL),this.textureLoader.setOptions({double:t}),this.defaultOptions={size:1024},this.options=this.defaultOptions}load(e,t){const r=[];for(let e=0;e<6;e++)r[e]=new Texture;return this.textureLoader.load(e,e=>{e.magFilter=1003,e.minFilter=1003;const n=new WebGLCubeRenderTarget(this.options.size,{depthBuffer:!1}).fromEquirectangularTexture(this.renderer,e);e.dispose();const i=n.width;for(let e=0;e<6;e++){const t=new Uint8Array(i*i*4);this.renderer.readRenderTargetPixels(n,0,0,i,i,t,e);const o=new ImageData(new Uint8ClampedArray(t),i,i),a=document.createElement("canvas"),s=a.getContext("2d");a.width=i,a.height=i,s.putImageData(o,0,0);const l=r[e];l.image=a,l.needsUpdate=!0}n.dispose(),this.increment(),t&&t(r)}),this.total++,r}setOptions(e){return this.options=Object.assign(this.defaultOptions,e),this}destroy(){return this.textureLoader.destroy(),super.destroy()}}class EnvironmentTextureLoader extends Loader{constructor(e){super(),this.textureLoader=new TextureLoader$1,this.pmremGenerator=new PMREMGenerator(e),this.pmremGenerator.compileEquirectangularShader()}load(e,t){this.textureLoader.load(e,e=>{const r=this.pmremGenerator.fromEquirectangular(e);e.dispose(),this.increment(),t&&t(r.texture)}),this.total++}destroy(){return this.pmremGenerator.dispose(),this.textureLoader.destroy(),super.destroy()}}class TextGeometry$1{constructor({font:e,text:t,width:r=1/0,align:n="left",size:i=1,letterSpacing:o=0,lineHeight:a=1.4,wordSpacing:s=0,wordBreak:l=!1}={}){this.font=e,this.text=t,this.width=r,this.align=n,this.size=i,this.letterSpacing=o,this.lineHeight=a,this.wordSpacing=s,this.wordBreak=l,this.newline=/\n/,this.whitespace=/\s/,this.parseFont(),this.createGeometry()}parseFont(){this.glyphs={},this.font.chars.forEach(e=>this.glyphs[e.char]=e)}createGeometry(){this.fontHeight=this.font.common.lineHeight,this.baseline=this.font.common.base,this.scale=this.size/this.baseline;const e=this.text.replace(/[ \n]/g,"").length;this.buffers={position:new Float32Array(4*e*3),uv:new Float32Array(4*e*2),id:new Float32Array(4*e),index:new Uint16Array(6*e)};for(let t=0;t<e;t++)this.buffers.id[t]=t,this.buffers.index.set([4*t,4*t+2,4*t+1,4*t+1,4*t+2,4*t+3],6*t);this.layout()}layout(){const e=[];let t=0,r=0,n=0,i=newLine();function newLine(){const i={width:0,glyphs:[]};return e.push(i),r=t,n=0,i}let o=0;for(;t<this.text.length&&o<100;){o++;const e=this.text[t];if(!i.width&&this.whitespace.test(e)){t++,r=t,n=0;continue}if(this.newline.test(e)){t++,i=newLine();continue}const a=this.glyphs[e]||this.glyphs[" "];if(i.glyphs.length){const e=i.glyphs[i.glyphs.length-1][0],t=this.getKernPairOffset(a.id,e.id)*this.scale;i.width+=t,n+=t}i.glyphs.push([a,i.width]);let s=0;if(this.whitespace.test(e)?(r=t,n=0,s+=this.wordSpacing*this.size):s+=this.letterSpacing*this.size,s+=a.xadvance*this.scale,i.width+=s,n+=s,i.width>this.width){if(this.wordBreak&&i.glyphs.length>1){i.width-=s,i.glyphs.pop(),i=newLine();continue}if(!this.wordBreak&&n!==i.width){const e=t-r+1;i.glyphs.splice(-e,e),t=r,i.width-=n,i=newLine();continue}}t++}i.width||e.pop(),this.populateBuffers(e)}populateBuffers(e){const t=this.font.common.scaleW,r=this.font.common.scaleH;let n=.07*this.size,i=0;this.numLines=e.length,this.width=0,this.height=0;for(let o=0;o<this.numLines;o++){const a=e[o];for(let e=0,o=a.glyphs.length;e<o;e++){const o=a.glyphs[e][0];let s=a.glyphs[e][1];if("center"===this.align?s-=.5*a.width:"right"===this.align&&(s-=a.width),this.whitespace.test(o.char))continue;s+=o.xoffset*this.scale,n-=o.yoffset*this.scale;const l=o.width*this.scale,c=o.height*this.scale;this.buffers.position.set([s,n-c,0,s,n,0,s+l,n-c,0,s+l,n,0],4*i*3);const u=o.x/t,h=o.width/t,d=1-o.y/r,p=o.height/r;this.buffers.uv.set([u,d-p,u,d,u+h,d-p,u+h,d],4*i*2),n+=o.yoffset*this.scale,i++}n-=this.size*this.lineHeight,this.width=Math.max(a.width,this.width),this.height+=this.size*this.lineHeight}}getKernPairOffset(e,t){for(let r=0,n=this.font.kernings.length;r<n;r++){const n=this.font.kernings[r];if(!(n.first<e)&&!(n.second<t))return n.first>e||n.first===e&&n.second>t?0:n.amount}return 0}resize(e){this.width=e.width,this.layout()}update(e){this.text=e.text,this.createGeometry()}}class TextGeometryLoaderThread{static init(){Thread.upload((function loadGeometry({path:e,init:t,params:r,id:n}){fetch(e,t).then(e=>e.json()).then(e=>{r.font=e;const{buffers:t,numLines:i,width:o,height:a}=new TextGeometry$1(r);postMessage({id:n,message:{buffers:t,numLines:i,width:o,height:a}})}).catch(e=>{e instanceof Error&&(e=e.name+": "+e.message),postMessage({id:n,message:{error:e}})})}))}static load(e,t,r){return e=absolute(Assets.getPath(e)),Thread.shared().loadGeometry({path:e,init:t,params:r})}}class TextGeometryLoader extends Loader{constructor(){super(),this.defaultOptions={},this.options=this.defaultOptions}load(e,t){let r;r=Thread.threads?TextGeometryLoaderThread.load(e,Assets.options,this.options):fetch(e,Assets.options).then(e=>e.json()).then(e=>{this.options.font=e;const{buffers:t,numLines:r,width:n,height:i}=new TextGeometry$1(this.options);return{buffers:t,numLines:r,width:n,height:i}}),r.then(e=>{if(e.error)throw new Error(e.error);const r=new BufferGeometry;r.setAttribute("position",new BufferAttribute(e.buffers.position,3)),r.setAttribute("uv",new BufferAttribute(e.buffers.uv,2)),r.setAttribute("id",new BufferAttribute(e.buffers.id,1)),r.setIndex(new BufferAttribute(e.buffers.index,1)),this.increment(),t&&t({text:e,geometry:r})}).catch(e=>{this.increment(),t&&t(e)}),this.total++}setOptions(e){return this.options=Object.assign(this.defaultOptions,e),this}}var AudioContext$1,OBJLoader=function(){var e=/^[og]\s*(.+)?/,t=/^mtllib /,r=/^usemtl /,n=/^usemap /,i=new Vector3,o=new Vector3,a=new Vector3,s=new Vector3,l=new Vector3;function ParserState(){var e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=!1!==t);var r=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:!1!==t,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(e,t){var r=this._finalize(!1);r&&(r.inherited||r.groupCount<=0)&&this.materials.splice(r.index,1);var n={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==r?r.smooth:this.smooth,groupStart:void 0!==r?r.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){var t={index:"number"==typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(n),n},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){var t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(var r=this.materials.length-1;r>=0;r--)this.materials[r].groupCount<=0&&this.materials.splice(r,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}},r&&r.name&&"function"==typeof r.clone){var n=r.clone(0);n.inherited=!0,this.object.materials.push(n)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){var r=parseInt(e,10);return 3*(r>=0?r-1:r+t/3)},parseNormalIndex:function(e,t){var r=parseInt(e,10);return 3*(r>=0?r-1:r+t/3)},parseUVIndex:function(e,t){var r=parseInt(e,10);return 2*(r>=0?r-1:r+t/2)},addVertex:function(e,t,r){var n=this.vertices,i=this.object.geometry.vertices;i.push(n[e+0],n[e+1],n[e+2]),i.push(n[t+0],n[t+1],n[t+2]),i.push(n[r+0],n[r+1],n[r+2])},addVertexPoint:function(e){var t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){var t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,r){var n=this.normals,i=this.object.geometry.normals;i.push(n[e+0],n[e+1],n[e+2]),i.push(n[t+0],n[t+1],n[t+2]),i.push(n[r+0],n[r+1],n[r+2])},addFaceNormal:function(e,t,r){var n=this.vertices,c=this.object.geometry.normals;i.fromArray(n,e),o.fromArray(n,t),a.fromArray(n,r),l.subVectors(a,o),s.subVectors(i,o),l.cross(s),l.normalize(),c.push(l.x,l.y,l.z),c.push(l.x,l.y,l.z),c.push(l.x,l.y,l.z)},addColor:function(e,t,r){var n=this.colors,i=this.object.geometry.colors;void 0!==n[e]&&i.push(n[e+0],n[e+1],n[e+2]),void 0!==n[t]&&i.push(n[t+0],n[t+1],n[t+2]),void 0!==n[r]&&i.push(n[r+0],n[r+1],n[r+2])},addUV:function(e,t,r){var n=this.uvs,i=this.object.geometry.uvs;i.push(n[e+0],n[e+1]),i.push(n[t+0],n[t+1]),i.push(n[r+0],n[r+1])},addDefaultUV:function(){var e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){var t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,r,n,i,o,a,s,l){var c=this.vertices.length,u=this.parseVertexIndex(e,c),h=this.parseVertexIndex(t,c),d=this.parseVertexIndex(r,c);if(this.addVertex(u,h,d),this.addColor(u,h,d),void 0!==a&&""!==a){var p=this.normals.length;u=this.parseNormalIndex(a,p),h=this.parseNormalIndex(s,p),d=this.parseNormalIndex(l,p),this.addNormal(u,h,d)}else this.addFaceNormal(u,h,d);if(void 0!==n&&""!==n){var m=this.uvs.length;u=this.parseUVIndex(n,m),h=this.parseUVIndex(i,m),d=this.parseUVIndex(o,m),this.addUV(u,h,d),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";for(var t=this.vertices.length,r=0,n=e.length;r<n;r++){var i=this.parseVertexIndex(e[r],t);this.addVertexPoint(i),this.addColor(i)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";for(var r=this.vertices.length,n=this.uvs.length,i=0,o=e.length;i<o;i++)this.addVertexLine(this.parseVertexIndex(e[i],r));var a=0;for(o=t.length;a<o;a++)this.addUVLine(this.parseUVIndex(t[a],n))}};return e.startObject("",!1),e}function OBJLoader(e){Loader$1.call(this,e),this.materials=null}return OBJLoader.prototype=Object.assign(Object.create(Loader$1.prototype),{constructor:OBJLoader,load:function(e,t,r,n){var i=this,o=new FileLoader(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,(function(r){try{t(i.parse(r))}catch(t){n?n(t):console.error(t),i.manager.itemError(e)}}),r,n)},setMaterials:function(e){return this.materials=e,this},parse:function(i){var o=new ParserState;-1!==i.indexOf("\r\n")&&(i=i.replace(/\r\n/g,"\n")),-1!==i.indexOf("\\\n")&&(i=i.replace(/\\\n/g,""));for(var a=i.split("\n"),s="",l="",c=[],u="function"==typeof"".trimLeft,h=0,d=a.length;h<d;h++)if(s=a[h],0!==(s=u?s.trimLeft():s.trim()).length&&"#"!==(l=s.charAt(0)))if("v"===l){var p=s.split(/\s+/);switch(p[0]){case"v":o.vertices.push(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3])),p.length>=7?o.colors.push(parseFloat(p[4]),parseFloat(p[5]),parseFloat(p[6])):o.colors.push(void 0,void 0,void 0);break;case"vn":o.normals.push(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3]));break;case"vt":o.uvs.push(parseFloat(p[1]),parseFloat(p[2]))}}else if("f"===l){for(var m=s.substr(1).trim().split(/\s+/),f=[],g=0,_=m.length;g<_;g++){var y=m[g];if(y.length>0){var x=y.split("/");f.push(x)}}var b=f[0];for(g=1,_=f.length-1;g<_;g++){var w=f[g],M=f[g+1];o.addFace(b[0],w[0],M[0],b[1],w[1],M[1],b[2],w[2],M[2])}}else if("l"===l){var S=s.substring(1).trim().split(" "),T=[],A=[];if(-1===s.indexOf("/"))T=S;else for(var E=0,C=S.length;E<C;E++){var L=S[E].split("/");""!==L[0]&&T.push(L[0]),""!==L[1]&&A.push(L[1])}o.addLineGeometry(T,A)}else if("p"===l){var P=s.substr(1).trim().split(" ");o.addPointGeometry(P)}else if(null!==(c=e.exec(s))){var R=(" "+c[0].substr(1).trim()).substr(1);o.startObject(R)}else if(r.test(s))o.object.startMaterial(s.substring(7).trim(),o.materialLibraries);else if(t.test(s))o.materialLibraries.push(s.substring(7).trim());else if(n.test(s))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===l){if((c=s.split(" ")).length>1){var B=c[1].trim().toLowerCase();o.object.smooth="0"!==B&&"off"!==B}else o.object.smooth=!0;(j=o.object.currentMaterial())&&(j.smooth=o.object.smooth)}else{if("\0"===s)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+s+'"')}o.finalize();var D=new Group;if(D.materialLibraries=[].concat(o.materialLibraries),!0===!(1===o.objects.length&&0===o.objects[0].geometry.vertices.length))for(h=0,d=o.objects.length;h<d;h++){var O=o.objects[h],I=O.geometry,U=O.materials,N="Line"===I.type,V="Points"===I.type,F=!1;if(0!==I.vertices.length){(Y=new BufferGeometry).setAttribute("position",new Float32BufferAttribute(I.vertices,3)),I.normals.length>0&&Y.setAttribute("normal",new Float32BufferAttribute(I.normals,3)),I.colors.length>0&&(F=!0,Y.setAttribute("color",new Float32BufferAttribute(I.colors,3))),!0===I.hasUVIndices&&Y.setAttribute("uv",new Float32BufferAttribute(I.uvs,2));for(var G,z=[],k=0,H=U.length;k<H;k++){var W=(X=U[k]).name+"_"+X.smooth+"_"+F,j=o.materials[W];if(null!==this.materials)if(j=this.materials.create(X.name),!N||!j||j instanceof LineBasicMaterial){if(V&&j&&!(j instanceof PointsMaterial)){var $=new PointsMaterial({size:10,sizeAttenuation:!1});Material.prototype.copy.call($,j),$.color.copy(j.color),$.map=j.map,j=$}}else{var q=new LineBasicMaterial;Material.prototype.copy.call(q,j),q.color.copy(j.color),j=q}void 0===j&&((j=N?new LineBasicMaterial:V?new PointsMaterial({size:1,sizeAttenuation:!1}):new MeshPhongMaterial).name=X.name,j.flatShading=!X.smooth,j.vertexColors=F,o.materials[W]=j),z.push(j)}if(z.length>1){for(k=0,H=U.length;k<H;k++){var X=U[k];Y.addGroup(X.groupStart,X.groupCount,k)}G=N?new LineSegments(Y,z):V?new Points(Y,z):new Mesh(Y,z)}else G=N?new LineSegments(Y,z[0]):V?new Points(Y,z[0]):new Mesh(Y,z[0]);G.name=O.name,D.add(G)}}else if(o.vertices.length>0){var Y;j=new PointsMaterial({size:1,sizeAttenuation:!1});(Y=new BufferGeometry).setAttribute("position",new Float32BufferAttribute(o.vertices,3)),o.colors.length>0&&void 0!==o.colors[0]&&(Y.setAttribute("color",new Float32BufferAttribute(o.colors,3)),j.vertexColors=!0);var Z=new Points(Y,j);D.add(Z)}return D}}),OBJLoader}();class OBJLoaderThread{static init(){Thread.upload((function loadGeometry({path:e,id:t}){(new OBJLoader).load(e,e=>{const r=e.children[0].geometry.getAttribute("position").array;postMessage({id:t,message:r})},null,e=>{e instanceof Error?e=e.name+": "+e.message:e instanceof ProgressEvent&&(e=e.target.status+": "+e.target.statusText),postMessage({id:t,message:{error:e}})})}))}static load(e){return e=absolute(Assets.getPath(e)),Thread.shared().loadGeometry({path:e})}}class Component{constructor(){this.events=new EventEmitter,this.children=[],this.timeouts=[]}add(e){if(this.children)return e.destroy&&(this.children.push(e),e.parent=this),e.group&&this.group&&this.group.add&&this.group.add(e.group),e}remove(e){if(!this.children)return;e.group&&this.group&&this.group.remove&&this.group.remove(e.group);const t=this.children.indexOf(e);~t&&this.children.splice(t,1)}tween(e,t,r,n,i,o){return tween(this,e,t,r,n,i,o)}clearTween(){return clearTween(this),this}delayedCall(e,t,...r){if(!this.timeouts)return;const n=delayedCall(e,()=>{this.clearTimeout(n),t(...r)});return this.timeouts.push(n),n}clearTimeout(e){if(!this.timeouts)return;clearTween(e);const t=this.timeouts.indexOf(e);~t&&this.timeouts.splice(t,1)}clearTimeouts(){if(this.timeouts){for(let e=this.timeouts.length-1;e>=0;e--)this.clearTimeout(this.timeouts[e]);this.timeouts.length=0}}destroy(){if(this.children){this.parent&&this.parent.remove&&this.parent.remove(this),this.clearTimeouts(),this.clearTween(),this.events.destroy();for(let e=this.children.length-1;e>=0;e--)this.children[e]&&this.children[e].destroy&&this.children[e].destroy();for(const e in this)this[e]=null;return null}}}class LinkedList{constructor(){this.nodes=[],this.first=null,this.last=null,this.current=null}push(e){const t={object:e,prev:null,next:null};this.nodes.push(t),this.first?(t.next=this.first,t.prev=this.last,this.last.next=t,this.last=t):t.next=t.prev=this.last=this.first=t}remove(e){let t,r;for(let n=0,i=this.nodes.length;n<i;n++)if(this.nodes[n].object===e){t=this.nodes[n],r=n;break}t&&(1===this.nodes.length?this.empty():t===this.first?(this.first=t.next,this.last.next=this.first,this.first.prev=this.last):t===this.last?(this.last=t.prev,this.last.next=this.first,this.first.prev=this.last):(t.prev.next=t.next,t.next.prev=t.prev),this.nodes.splice(r,1))}empty(){this.nodes.length=0,this.first=null,this.last=null,this.current=null}start(){return this.current=this.first,this.current.object}next(){if(this.current)return this.current=this.current.next,this.current.object}destroy(){for(let e=this.nodes.length-1;e>=0;e--)this.nodes[e].object&&this.nodes[e].object.destroy&&this.nodes[e].object.destroy();for(const e in this)this[e]=null;return null}}class ObjectPool{constructor(e,t=10){if(this.type=e,this.array=[],e)for(let r=0;r<t;r++)this.array.push(new e)}get(){return this.array.shift()||(this.type?new this.type:null)}empty(){this.array.length=0}put(e){this.array.push(e)}insert(e){Array.isArray(e)||(e=[e]),this.array.push(...e)}length(){return this.array.length}destroy(){for(let e=this.array.length-1;e>=0;e--)this.array[e]&&this.array[e].destroy&&this.array[e].destroy();for(const e in this)this[e]=null;return null}}class WebAudioParam{constructor(e,t,r,n){this.parent=e,this.node=t,this.param=r,this.alpha=n,this.parent[this.node]&&this.parent[this.node][this.param].setValueAtTime(this.alpha,this.parent.context.currentTime)}get value(){return this.alpha}set value(e){this.alpha!==e&&(this.parent[this.node]&&(this.parent[this.node][this.param].cancelScheduledValues(this.parent.context.currentTime),this.parent[this.node][this.param].setTargetAtTime(e,this.parent.context.currentTime,.1)),this.alpha=e)}fade(e,t){this.parent[this.node]&&(this.parent[this.node][this.param].cancelScheduledValues(this.parent.context.currentTime),this.parent[this.node][this.param].setTargetAtTime(e,this.parent.context.currentTime,.001*t))}}class Sound{constructor(e,t,r,n){this.parent=e,this.context=e.context,this.id=t,this.buffer=r,this.loop=!1,this.playing=!1,this.output=this.context.createGain(),this.output.connect(e.input),this.context.createStereoPanner&&!n&&(this.stereo=this.context.createStereoPanner(),this.stereo.connect(this.output)),this.gain=new WebAudioParam(this,"output","gain",1),this.stereoPan=new WebAudioParam(this,"stereo","pan",0),this.playbackRate=new WebAudioParam(this,"source","playbackRate",1),this.input=this.stereo||this.output,Device.mobile&&"running"!==this.context.state||this.load()}load(){if(this.buffer instanceof ArrayBuffer){const e=new Promise((e,t)=>{this.context.decodeAudioData(this.buffer.slice(),t=>e(t),t)}).then(e=>{this.buffer=e});this.ready=()=>e}else this.ready=()=>Promise.resolve()}play(){this.ready||this.load(),this.context.resume().then(this.ready).then(()=>{if(this.output){if(this.output.gain.setValueAtTime(this.gain.value,this.context.currentTime),this.stereo&&this.stereo.pan.setValueAtTime(this.stereoPan.value,this.context.currentTime),this.element)this.element.loop=this.loop,this.element.play();else{if(this.stopping&&this.loop)return void(this.stopping=!1);this.source=this.context.createBufferSource(),this.source.buffer=this.buffer,this.source.loop=this.loop,this.source.start(),this.source.playbackRate.setValueAtTime(this.playbackRate.value,this.context.currentTime),this.source.connect(this.input)}this.playing=!0}})}stop(){this.element?this.element.pause():this.source&&this.source.stop(),this.playing=!1}destroy(){this.element?(this.element.pause(),this.element.src="",this.source.disconnect()):this.source&&(this.source.stop(),this.source.buffer=null,this.source.disconnect());for(const e in this)this[e]=null;return null}}"undefined"!=typeof window&&(AudioContext$1=window.AudioContext||window.webkitAudioContext);class WebAudio{static init(e={}){if(this.context){this.sounds={},this.output=this.context.createGain(),this.output.connect(this.context.destination),this.gain=new WebAudioParam(this,"output","gain",1),this.input=this.output;for(const t in e)this.add(this,basename(t),e[t])}}static add(e,t,r,n){if(!this.context)return;let i;if("string"==typeof e&&(n=r,r=t,t=e,e=this),"string"==typeof r){i=new Sound(e,t,null,n);const o=new Audio;o.crossOrigin=Assets.crossOrigin,o.autoplay=!1,o.loop=i.loop,o.src=Assets.getPath(r),i.source=this.context.createMediaElementSource(o),i.source.connect(i.input),i.element=o}else i=new Sound(e,t,r,n);return this.sounds[t]=i,i}static remove(e){if(!this.context)return;const t=this.sounds[e];t&&t.destroy(),delete this.sounds[e]}static clone(e,t,r,n){if(!this.context)return;"string"==typeof e&&(n=r,r=t,t=e,e=this);const i=this.sounds[t];return i?this.add(e,r,i.buffer,n):i}static trigger(e){if(!this.context)return;"suspended"===this.context.state&&this.context.resume();const t=this.sounds[e];return t&&t.play(),t}static play(e,t=1,r){if(!this.context)return;"number"!=typeof t&&(r=t,t=1);const n=this.sounds[e];return n&&(n.gain.alpha=t,n.loop=!!r,this.trigger(e)),n}static fadeInAndPlay(e,t,r,n,i,o=0,a,s){if(!this.context)return;"number"!=typeof o&&(s=a,a=o,o=0);const l=this.sounds[e];return l&&(l.gain.alpha=0,l.loop=!!r,this.trigger(e),l.ready().then(()=>{tween(l.gain,{value:t},n,i,o,a,s)})),l}static fadeOutAndStop(e,t,r,n=0,i,o){if(!this.context)return;"number"!=typeof n&&(o=i,i=n,n=0);const a=this.sounds[e];return a&&(a.ready().then(()=>{tween(a.gain,{value:0},t,r,n,()=>{a.stopping&&(a.stopping=!1,a.stop(),i&&i())},o)}),a.stopping=!0),a}static mute(){this.context&&this.gain.fade(0,300)}static unmute(){this.context&&this.gain.fade(1,500)}static resume(){this.context&&"suspended"===this.context.state&&this.context.resume()}static destroy(){if(this.context){for(const e in this.sounds)this.sounds[e]&&this.sounds[e].destroy&&this.sounds[e].destroy();this.context.close();for(const e in this)this[e]=null;return null}}}WebAudio.context=AudioContext$1?new AudioContext$1:null;var ImprovedNoise=function(){for(var e=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],t=0;t<256;t++)e[256+t]=e[t];function fade(e){return e*e*e*(e*(6*e-15)+10)}function lerp(e,t,r){return t+e*(r-t)}function grad(e,t,r,n){var i=15&e,o=i<8?t:r,a=i<4?r:12==i||14==i?t:n;return(0==(1&i)?o:-o)+(0==(2&i)?a:-a)}return{noise:function(t,r,n){var i=Math.floor(t),o=Math.floor(r),a=Math.floor(n),s=255&i,l=255&o,c=255&a,u=(t-=i)-1,h=(r-=o)-1,d=(n-=a)-1,p=fade(t),m=fade(r),f=fade(n),g=e[s]+l,_=e[g]+c,y=e[g+1]+c,x=e[s+1]+l,b=e[x]+c,w=e[x+1]+c;return lerp(f,lerp(m,lerp(p,grad(e[_],t,r,n),grad(e[b],u,r,n)),lerp(p,grad(e[y],t,h,n),grad(e[w],u,h,n))),lerp(m,lerp(p,grad(e[_+1],t,r,d),grad(e[b+1],u,r,d)),lerp(p,grad(e[y+1],t,h,d),grad(e[w+1],u,h,d))))}}};class Wobble{constructor(e){this.position=e,this.origin=new Vector3,this.target=new Vector3,this.perlin=new ImprovedNoise,this.amplitude=new Vector3(1,1,1),this.frequency=new Vector3(1,1,1),this.scale=1,this.lerpSpeed=.02,this.position&&this.origin.copy(this.position)}update(e){this.target.x=this.perlin.noise(e*this.frequency.x,1,1)*this.amplitude.x,this.target.y=this.perlin.noise(1,e*this.frequency.y,1)*this.amplitude.y,this.target.z=this.perlin.noise(1,1,e*this.frequency.z)*this.amplitude.z,this.target.multiplyScalar(this.scale),this.target.add(this.origin),this.position&&this.position.lerp(this.target,this.lerpSpeed)}}var vertexShader$1="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$1="\nprecision highp float;\n\nuniform sampler2D tMap;\n\nuniform float uFalloff;\nuniform float uAlpha;\nuniform float uDissipation;\n\nuniform float uAspect;\nuniform vec2 uMouse;\nuniform vec2 uVelocity;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vec4 color = texture2D(tMap, vUv) * uDissipation;\n\n    vec2 cursor = vUv - uMouse;\n    cursor.x *= uAspect;\n\n    vec3 stamp = vec3(uVelocity * vec2(1, -1), 1.0 - pow(1.0 - min(1.0, length(uVelocity)), 3.0));\n    float falloff = smoothstep(uFalloff, 0.0, length(cursor)) * uAlpha;\n\n    color.rgb = mix(color.rgb, stamp, vec3(falloff));\n\n    gl_FragColor = color;\n}\n";class Flowmap{constructor(e,{size:t=128,falloff:r=.15,alpha:n=1,dissipation:i=.98}={}){this.renderer=e,this.mouse=new Vector2,this.velocity=new Vector2,this.renderTargetRead=new WebGLRenderTarget(t,t,{type:1016,anisotropy:0,depthBuffer:!1}),this.renderTargetWrite=this.renderTargetRead.clone(),this.uniform=new Uniform(this.renderTargetRead.texture),this.material=new RawShaderMaterial({uniforms:{tMap:this.uniform,uFalloff:new Uniform(r),uAlpha:new Uniform(n),uDissipation:new Uniform(i),uAspect:new Uniform(1),uMouse:new Uniform(this.mouse),uVelocity:new Uniform(this.velocity)},vertexShader:vertexShader$1,fragmentShader:fragmentShader$1,depthTest:!1}),this.screenScene=new Scene,this.screenCamera=new OrthographicCamera(-1,1,1,-1,0,1),this.screenGeometry=getFullscreenTriangle(),this.screen=new Mesh(this.screenGeometry,this.material),this.screen.frustumCulled=!1,this.screenScene.add(this.screen)}update(){const e=this.renderer.getRenderTarget(),t=this.renderer.autoClear;this.renderer.autoClear=!1,this.renderer.setRenderTarget(this.renderTargetWrite),this.renderer.render(this.screenScene,this.screenCamera);const r=this.renderTargetRead;this.renderTargetRead=this.renderTargetWrite,this.renderTargetWrite=r,this.uniform.value=this.renderTargetRead.texture,this.renderer.autoClear=t,this.renderer.setRenderTarget(e)}destroy(){this.renderTargetWrite.dispose(),this.renderTargetRead.dispose(),this.material.dispose(),this.screenGeometry.dispose();for(const e in this)this[e]=null;return null}}var vertexShader$2="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",blur13="\nvec4 blur13(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.411764705882353) * direction;\n  vec2 off2 = vec2(3.2941176470588234) * direction;\n  vec2 off3 = vec2(5.176470588235294) * direction;\n  color += texture2D(image, uv) * 0.1964825501511404;\n  color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n  color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n  color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n  color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n  color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n  color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n  return color;\n}\n",fragmentShader$2=`\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform vec2 uDirection;\nuniform vec2 uResolution;\n\nvarying vec2 vUv;\n\n${blur13}\n\nvoid main() {\n    gl_FragColor = blur13(tMap, vUv, uResolution, uDirection);\n}\n`;class FastGaussianBlurMaterial extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null),uDirection:new Uniform(new Vector2(1,0)),uResolution:new Uniform(new Vector2)},vertexShader:vertexShader$2,fragmentShader:fragmentShader$2,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$3="\nattribute vec2 uv;\nattribute vec3 position;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nuniform mat3 uMapTransform;\nuniform mat4 uMatrix;\n\nvarying vec2 vUv;\nvarying vec4 vCoord;\n\nvoid main() {\n    vUv = (uMapTransform * vec3(uv, 1.0)).xy;\n    vCoord = uMatrix * vec4(position, 1.0);\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",blendOverlay="\nfloat blendOverlay(float x, float y) {\n    return (x < 0.5) ? (2.0 * x * y) : (1.0 - 2.0 * (1.0 - x) * (1.0 - y));\n}\n\nvec4 blendOverlay(vec4 x, vec4 y, float opacity) {\n    vec4 z = vec4(blendOverlay(x.r, y.r), blendOverlay(x.g, y.g), blendOverlay(x.b, y.b), blendOverlay(x.a, y.a));\n    return z * opacity + x * (1.0 - opacity);\n}\n",random$2="\nfloat random(vec2 co) {\n    float a = 12.9898;\n    float b = 78.233;\n    float c = 43758.5453;\n    float dt = dot(co.xy, vec2(a, b));\n    float sn = mod(dt, 3.14);\n    return fract(sin(sn) * c);\n}\n",dither=`\n${random$2}\n\nvec3 dither(vec3 color) {\n    // Calculate grid position\n    float grid_position = random(gl_FragCoord.xy);\n\n    // Shift the individual colors differently, thus making it even harder to see the dithering pattern\n    vec3 dither_shift_RGB = vec3(0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0);\n\n    // Modify shift acording to grid position\n    dither_shift_RGB = mix(2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position);\n\n    // Shift the color by dither_shift\n    return color + dither_shift_RGB;\n}\n`,fragmentShader$3=`\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform sampler2D tReflection;\nuniform vec3 uColor;\n\n#ifdef USE_FOG\n    uniform vec3 uFogColor;\n    uniform float uFogNear;\n    uniform float uFogFar;\n#endif\n\nvarying vec2 vUv;\nvarying vec4 vCoord;\n\n${blendOverlay}\n${dither}\n\nvoid main() {\n    vec4 base = texture2DProj(tReflection, vCoord);\n    vec4 blend = texture2D(tMap, vUv);\n\n    gl_FragColor = vec4(mix(base.rgb * 0.2, base.rgb, blend.r), 1.0);\n\n    base = gl_FragColor;\n    blend = vec4(uColor, 1.0);\n\n    gl_FragColor = blendOverlay(base, blend, 1.0);\n\n    #ifdef USE_FOG\n        float fogDepth = gl_FragCoord.z / gl_FragCoord.w;\n        float fogFactor = smoothstep(uFogNear, uFogFar, fogDepth);\n\n        gl_FragColor.rgb = mix(gl_FragColor.rgb, uFogColor, fogFactor);\n    #endif\n\n    #ifdef DITHERING\n        gl_FragColor.rgb = dither(gl_FragColor.rgb);\n    #endif\n}\n`;class Reflector extends Mesh{constructor(e,{color:t=new Color(8355711),width:r=512,height:n=512,clipBias:i=0,blurIterations:o=8,map:a=null,fog:s=null,dithering:l=!1}={}){super(e),this.clipBias=i,this.blurIterations=o,this.reflectorPlane=new Plane,this.normal=new Vector3,this.reflectorWorldPosition=new Vector3,this.cameraWorldPosition=new Vector3,this.rotationMatrix=new Matrix4,this.lookAtPosition=new Vector3(0,0,-1),this.clipPlane=new Vector4,this.view=new Vector3,this.target=new Vector3,this.q=new Vector4,this.textureMatrix=new Matrix4,this.virtualCamera=new PerspectiveCamera,this.renderTarget=new WebGLRenderTarget(r,n,{format:1022,anisotropy:0,depthBuffer:!1}),this.renderTargetRead=this.renderTarget.clone(),this.renderTargetWrite=this.renderTarget.clone(),this.renderTarget.texture.format=1023,this.renderTarget.texture.anisotropy=1,this.renderTarget.depthBuffer=!0,this.uniform=new Uniform(this.renderTargetRead.texture);const c={defines:{},uniforms:{tMap:new Uniform(null),tReflection:this.blurIterations>0?this.uniform:new Uniform(this.renderTarget.texture),uMapTransform:new Uniform(new Matrix3),uMatrix:new Uniform(this.textureMatrix),uColor:new Uniform(t instanceof Color?t:new Color(t))},vertexShader:vertexShader$3,fragmentShader:fragmentShader$3};a&&(a.updateMatrix(),c.uniforms=Object.assign(c.uniforms,{tMap:new Uniform(a),uMapTransform:new Uniform(a.matrix)})),s&&(c.defines=Object.assign(c.defines,{USE_FOG:""}),c.uniforms=Object.assign(c.uniforms,{uFogColor:new Uniform(s.color),uFogNear:new Uniform(s.near),uFogFar:new Uniform(s.far)})),l&&(c.defines=Object.assign(c.defines,{DITHERING:""})),this.material=new RawShaderMaterial(c),this.blurMaterial=new FastGaussianBlurMaterial,this.blurMaterial.uniforms.uResolution.value.set(r,n),this.screenScene=new Scene,this.screenCamera=new OrthographicCamera(-1,1,1,-1,0,1),this.screenGeometry=getFullscreenTriangle(),this.screen=new Mesh(this.screenGeometry,this.blurMaterial),this.screen.frustumCulled=!1,this.screenScene.add(this.screen)}onBeforeRender(e,t,r){if(this.reflectorWorldPosition.setFromMatrixPosition(this.matrixWorld),this.cameraWorldPosition.setFromMatrixPosition(r.matrixWorld),this.rotationMatrix.extractRotation(this.matrixWorld),this.normal.set(0,0,1),this.normal.applyMatrix4(this.rotationMatrix),this.view.subVectors(this.reflectorWorldPosition,this.cameraWorldPosition),this.view.dot(this.normal)>0)return;this.view.reflect(this.normal).negate(),this.view.add(this.reflectorWorldPosition),this.rotationMatrix.extractRotation(r.matrixWorld),this.lookAtPosition.set(0,0,-1),this.lookAtPosition.applyMatrix4(this.rotationMatrix),this.lookAtPosition.add(this.cameraWorldPosition),this.target.subVectors(this.reflectorWorldPosition,this.lookAtPosition),this.target.reflect(this.normal).negate(),this.target.add(this.reflectorWorldPosition),this.virtualCamera.position.copy(this.view),this.virtualCamera.up.set(0,1,0),this.virtualCamera.up.applyMatrix4(this.rotationMatrix),this.virtualCamera.up.reflect(this.normal),this.virtualCamera.lookAt(this.target),this.virtualCamera.far=r.far,this.virtualCamera.updateMatrixWorld(),this.virtualCamera.projectionMatrix.copy(r.projectionMatrix),this.textureMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),this.textureMatrix.multiply(this.virtualCamera.projectionMatrix),this.textureMatrix.multiply(this.virtualCamera.matrixWorldInverse),this.textureMatrix.multiply(this.matrixWorld),this.reflectorPlane.setFromNormalAndCoplanarPoint(this.normal,this.reflectorWorldPosition),this.reflectorPlane.applyMatrix4(this.virtualCamera.matrixWorldInverse),this.clipPlane.set(this.reflectorPlane.normal.x,this.reflectorPlane.normal.y,this.reflectorPlane.normal.z,this.reflectorPlane.constant);const n=this.virtualCamera.projectionMatrix;this.q.x=(Math.sign(this.clipPlane.x)+n.elements[8])/n.elements[0],this.q.y=(Math.sign(this.clipPlane.y)+n.elements[9])/n.elements[5],this.q.z=-1,this.q.w=(1+n.elements[10])/n.elements[14],this.clipPlane.multiplyScalar(2/this.clipPlane.dot(this.q)),n.elements[2]=this.clipPlane.x,n.elements[6]=this.clipPlane.y,n.elements[10]=this.clipPlane.z+1-this.clipBias,n.elements[14]=this.clipPlane.w,this.visible=!1;const i=e.getRenderTarget(),o=e.xr.enabled,a=e.shadowMap.autoUpdate;e.xr.enabled=!1,e.shadowMap.autoUpdate=!1,e.setRenderTarget(this.renderTarget),e.state.buffers.depth.setMask(!0),!1===e.autoClear&&e.clear(),e.render(t,this.virtualCamera);const s=this.blurIterations;for(let t=0;t<s;t++){this.blurMaterial.uniforms.tMap.value=0===t?this.renderTarget.texture:this.renderTargetRead.texture;const r=.5*(s-t-1);this.blurMaterial.uniforms.uDirection.value.set(t%2==0?r:0,t%2==0?0:r),e.setRenderTarget(this.renderTargetWrite),!1===e.autoClear&&e.clear(),e.render(this.screenScene,this.screenCamera);const n=this.renderTargetRead;this.renderTargetRead=this.renderTargetWrite,this.renderTargetWrite=n,this.uniform.value=this.renderTargetRead.texture}e.xr.enabled=o,e.shadowMap.autoUpdate=a,e.setRenderTarget(i),this.visible=!0}destroy(){this.renderTargetWrite.dispose(),this.renderTargetRead.dispose(),this.renderTarget.dispose(),this.blurMaterial.dispose(),this.material.dispose(),this.screenGeometry.dispose();for(const e in this)this[e]=null;return null}}class WebAudio3D extends Group{constructor(){super(),WebAudio.context&&(this.context=WebAudio.context,this.worldPosition=new Vector3,this.worldQuaternion=new Quaternion,this.worldScale=new Vector3,this.worldOrientation=new Vector3,this.listener=this.context.listener,this.listener.positionX&&(this.audioPositionX=new WebAudioParam(this,"listener","positionX",0),this.audioPositionY=new WebAudioParam(this,"listener","positionY",0),this.audioPositionZ=new WebAudioParam(this,"listener","positionZ",0),this.audioForwardX=new WebAudioParam(this,"listener","forwardX",0),this.audioForwardY=new WebAudioParam(this,"listener","forwardY",0),this.audioForwardZ=new WebAudioParam(this,"listener","forwardZ",-1),this.audioUpX=new WebAudioParam(this,"listener","upX",0),this.audioUpY=new WebAudioParam(this,"listener","upY",1),this.audioUpZ=new WebAudioParam(this,"listener","upZ",0)))}updateMatrixWorld(e){super.updateMatrixWorld(e),WebAudio.context&&(this.matrixWorld.decompose(this.worldPosition,this.worldQuaternion,this.worldScale),this.worldOrientation.set(0,0,-1).applyQuaternion(this.worldQuaternion),this.listener.positionX?(this.audioPositionX.value=this.worldPosition.x,this.audioPositionY.value=this.worldPosition.y,this.audioPositionZ.value=this.worldPosition.z,this.audioForwardX.value=this.worldOrientation.x,this.audioForwardY.value=this.worldOrientation.y,this.audioForwardZ.value=this.worldOrientation.z,this.audioUpX.value=this.up.x,this.audioUpY.value=this.up.y,this.audioUpZ.value=this.up.z):(this.listener.setPosition(this.worldPosition.x,this.worldPosition.y,this.worldPosition.z),this.listener.setOrientation(this.worldOrientation.x,this.worldOrientation.y,this.worldOrientation.z,this.up.x,this.up.y,this.up.z)))}}class Sound3D extends Group{constructor(e,t,r){super(),WebAudio.context&&("string"!=typeof t&&(r=t,t=e,e=null),this.context=WebAudio.context,e?(this.camera=e,this.cameraWorldPosition=new Vector3,this.worldPosition=new Vector3,this.audioDistance=1,this.audioNearDistance=e.near,this.audioFarDistance=e.far,this.output=this.context.createGain(),this.output.connect(WebAudio.input),this.gain=new WebAudioParam(this,"output","gain",1),this.context.createStereoPanner&&(this.screenSpacePosition=new Vector3,this.stereo=this.context.createStereoPanner(),this.stereo.connect(this.output),this.stereoPan=new WebAudioParam(this,"stereo","pan",0)),this.input=this.stereo||this.output):(this.worldPosition=new Vector3,this.worldQuaternion=new Quaternion,this.worldScale=new Vector3,this.worldOrientation=new Vector3,this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(WebAudio.input),this.panner.positionX&&(this.audioPositionX=new WebAudioParam(this,"panner","positionX",0),this.audioPositionY=new WebAudioParam(this,"panner","positionY",0),this.audioPositionZ=new WebAudioParam(this,"panner","positionZ",0),this.audioOrientationX=new WebAudioParam(this,"panner","orientationX",0),this.audioOrientationY=new WebAudioParam(this,"panner","orientationY",0),this.audioOrientationZ=new WebAudioParam(this,"panner","orientationZ",1)),this.output=this.panner,this.input=this.output),this.sound=r?WebAudio.add(this,t,r,!0):WebAudio.clone(this,t,guid(),!0))}updateMatrixWorld(e){super.updateMatrixWorld(e),WebAudio.context&&(this.camera?(this.cameraWorldPosition.setFromMatrixPosition(this.camera.matrixWorld),this.worldPosition.setFromMatrixPosition(this.matrixWorld),this.gain.value=1-range(this.cameraWorldPosition.distanceTo(this.worldPosition)-this.audioDistance,this.audioNearDistance,this.audioFarDistance,0,1,!0),this.stereo&&(this.screenSpacePosition.copy(this.worldPosition).project(this.camera),isNaN(this.screenSpacePosition.x)?this.stereoPan.value=0:this.stereoPan.value=clamp$1(this.screenSpacePosition.x,-1,1))):(this.matrixWorld.decompose(this.worldPosition,this.worldQuaternion,this.worldScale),this.worldOrientation.set(0,0,1).applyQuaternion(this.worldQuaternion),this.panner.positionX?(this.audioPositionX.value=this.worldPosition.x,this.audioPositionY.value=this.worldPosition.y,this.audioPositionZ.value=this.worldPosition.z,this.audioOrientationX.value=this.worldOrientation.x,this.audioOrientationY.value=this.worldOrientation.y,this.audioOrientationZ.value=this.worldOrientation.z):(this.panner.setPosition(this.worldPosition.x,this.worldPosition.y,this.worldPosition.z),this.panner.setOrientation(this.worldOrientation.x,this.worldOrientation.y,this.worldOrientation.z))))}destroy(){WebAudio.remove(this.sound.id)}}var vertexShader$4="\nattribute vec3 position;\nattribute vec3 normal;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat3 normalMatrix;\n\nvarying vec3 vNormal;\n\nvoid main() {\n    vNormal = normalMatrix * normal;\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",fragmentShader$4="\nprecision highp float;\n\nvarying vec3 vNormal;\n\nvoid main() {\n    gl_FragColor = vec4(vNormal, 1.0);\n}\n";class NormalMaterial extends RawShaderMaterial{constructor(){super({vertexShader:vertexShader$4,fragmentShader:fragmentShader$4})}}var vertexShader$5="\nattribute vec3 position;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nvoid main() {\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",fragmentShader$5="\nprecision highp float;\n\nuniform vec3 uColor;\n\nvoid main() {\n    gl_FragColor = vec4(uColor, 1.0);\n}\n";class ColorMaterial extends RawShaderMaterial{constructor(e){super({uniforms:{uColor:new Uniform(e instanceof Color?e:new Color(e))},vertexShader:vertexShader$5,fragmentShader:fragmentShader$5})}}var vertexShader$6="\nattribute vec2 uv;\nattribute vec3 position;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",fragmentShader$6="\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform float uAlpha;\n\nvarying vec2 vUv;\n\nvoid main() {\n    gl_FragColor = texture2D(tMap, vUv);\n    gl_FragColor.a *= uAlpha;\n}\n";class BasicMaterial extends RawShaderMaterial{constructor(e){super({uniforms:{tMap:new Uniform(e),uAlpha:new Uniform(1)},vertexShader:vertexShader$6,fragmentShader:fragmentShader$6,transparent:!0})}}var vertexShader$7="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$7="\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform sampler2D tFlow;\n\nvarying vec2 vUv;\n\nvoid main() {\n    // R and G values are velocity in the X and Y direction\n    // B value is the velocity length\n    vec3 flow = texture2D(tFlow, vUv).rgb;\n\n    // Use flow to adjust the UV lookup of a texture\n    vec2 uv = vUv;\n    uv += flow.rg * 0.05;\n\n    gl_FragColor = texture2D(tMap, uv);\n}\n";class FlowMaterial extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null),tFlow:new Uniform(null)},vertexShader:vertexShader$7,fragmentShader:fragmentShader$7,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$8="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$8="\nprecision highp float;\n\nuniform sampler2D tMap;\n\nvarying vec2 vUv;\n\nvoid main() {\n    gl_FragColor = texture2D(tMap, vUv);\n}\n";class CopyMaterial extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null)},vertexShader:vertexShader$8,fragmentShader:fragmentShader$8,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$9="\nattribute vec2 uv;\nattribute vec3 position;\n\nuniform vec2 uResolution;\n\nvarying vec2 v_rgbNW;\nvarying vec2 v_rgbNE;\nvarying vec2 v_rgbSW;\nvarying vec2 v_rgbSE;\nvarying vec2 v_rgbM;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    vec2 fragCoord = uv * uResolution;\n    vec2 inverseVP = 1.0 / uResolution.xy;\n    v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\n    v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\n    v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\n    v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\n    v_rgbM = vec2(fragCoord * inverseVP);\n\n    gl_Position = vec4(position, 1.0);\n}\n",fxaa="\n#ifndef FXAA_REDUCE_MIN\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\n#endif\n#ifndef FXAA_REDUCE_MUL\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\n#endif\n#ifndef FXAA_SPAN_MAX\n    #define FXAA_SPAN_MAX     8.0\n#endif\n\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\n            vec2 v_rgbNW, vec2 v_rgbNE,\n            vec2 v_rgbSW, vec2 v_rgbSE,\n            vec2 v_rgbM) {\n    vec4 color;\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\n    vec4 texColor = texture2D(tex, v_rgbM);\n    vec3 rgbM  = texColor.xyz;\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot(rgbM,  luma);\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n\n    mediump vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n              dir * rcpDirMin)) * inverseVP;\n\n    vec3 rgbA = 0.5 * (\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\n\n    float lumaB = dot(rgbB, luma);\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\n        color = vec4(rgbA, texColor.a);\n    else\n        color = vec4(rgbB, texColor.a);\n    return color;\n}\n",fragmentShader$9=`\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform vec2 uResolution;\n\nvarying vec2 v_rgbNW;\nvarying vec2 v_rgbNE;\nvarying vec2 v_rgbSW;\nvarying vec2 v_rgbSE;\nvarying vec2 v_rgbM;\n\nvarying vec2 vUv;\n\n${fxaa}\n\nvoid main() {\n    gl_FragColor = fxaa(tMap, vUv * uResolution, uResolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n}\n`;class FXAAMaterial extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null),uResolution:new Uniform(new Vector2)},vertexShader:vertexShader$9,fragmentShader:fragmentShader$9,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$a="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",simplex2d="\n//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n    + i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n",badtv=`\n${simplex2d}\n\nvec4 getBadTV(sampler2D image, vec2 uv, float time, float distortion, float distortion2, float speed, float rollSpeed) {\n    vec2 p = uv;\n    float ty = time * speed;\n    float yt = p.y - ty;\n\n    // Smooth distortion\n    float offset = snoise(vec2(yt * 3.0, 0.0)) * 0.2;\n\n    // Boost distortion\n    offset = offset * distortion * offset * distortion * offset;\n\n    // Add fine grain distortion\n    offset += snoise(vec2(yt * 50.0, 0.0)) * distortion2 * 0.001;\n\n    // Combine distortion on X with roll on Y\n    return texture2D(image, vec2(fract(p.x + offset), fract(p.y - time * rollSpeed)));\n}\n`,fragmentShader$a=`\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform float uDistortion;\nuniform float uDistortion2;\nuniform float uSpeed;\nuniform float uRollSpeed;\nuniform float uTime;\n\nvarying vec2 vUv;\n\n${badtv}\n\nvoid main() {\n    gl_FragColor = getBadTV(tMap, vUv, uTime, uDistortion, uDistortion2, uSpeed, uRollSpeed);\n}\n`;class BadTVMaterial extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null),uDistortion:new Uniform(3),uDistortion2:new Uniform(5),uSpeed:new Uniform(.2),uRollSpeed:new Uniform(.1),uTime:new Uniform(0)},vertexShader:vertexShader$a,fragmentShader:fragmentShader$a,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$b="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",rgbshift="\nvec4 getRGB(sampler2D image, vec2 uv, float angle, float amount) {\n    vec2 offset = vec2(cos(angle), sin(angle)) * amount;\n    vec4 r = texture2D(image, uv + offset);\n    vec4 g = texture2D(image, uv);\n    vec4 b = texture2D(image, uv - offset);\n    return vec4(r.r, g.g, b.b, g.a);\n}\n",fragmentShader$b=`\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform float uAngle;\nuniform float uAmount;\n\nvarying vec2 vUv;\n\n${rgbshift}\n\nvoid main() {\n    gl_FragColor = getRGB(tMap, vUv, uAngle, uAmount);\n}\n`;class RGBMaterial extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null),uAngle:new Uniform(0),uAmount:new Uniform(.005)},vertexShader:vertexShader$b,fragmentShader:fragmentShader$b,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$c="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$c=`\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform float uIntensity;\nuniform float uTime;\n\nvarying vec2 vUv;\n\n${random$2}\n\nvoid main(){\n    // Sample the source\n    vec4 color = texture2D(tMap, vUv);\n\n    // Make some noise\n    float dx = random(vUv + uTime);\n\n    // Add noise\n    vec3 cResult = color.rgb + color.rgb * clamp(0.1 + dx, 0.0, 1.0);\n\n    // Interpolate between source and result by intensity\n    cResult = color.rgb + clamp(uIntensity, 0.0, 1.0) * (cResult - color.rgb);\n\n    gl_FragColor =  vec4(cResult, color.a);\n}\n`;class FilmGrainMaterial extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null),uIntensity:new Uniform(.5),uTime:new Uniform(0)},vertexShader:vertexShader$c,fragmentShader:fragmentShader$c,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$d="\nattribute vec2 uv;\nattribute vec3 position;\n\nuniform vec2 uResolution;\n\nvarying vec2 v_rgbNW;\nvarying vec2 v_rgbNE;\nvarying vec2 v_rgbSW;\nvarying vec2 v_rgbSE;\nvarying vec2 v_rgbM;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    vec2 fragCoord = uv * uResolution;\n    vec2 inverseVP = 1.0 / uResolution.xy;\n    v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\n    v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\n    v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\n    v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\n    v_rgbM = vec2(fragCoord * inverseVP);\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$d=`\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform float uIntensity;\nuniform vec2 uResolution;\nuniform float uTime;\n\nvarying vec2 v_rgbNW;\nvarying vec2 v_rgbNE;\nvarying vec2 v_rgbSW;\nvarying vec2 v_rgbSE;\nvarying vec2 v_rgbM;\n\nvarying vec2 vUv;\n\n${fxaa}\n${random$2}\n\nvoid main(){\n    // Sample the source\n    vec4 color = fxaa(tMap, vUv * uResolution, uResolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n\n    // Make some noise\n    float dx = random(vUv + uTime);\n\n    // Add noise\n    vec3 cResult = color.rgb + color.rgb * clamp(0.1 + dx, 0.0, 1.0);\n\n    // Interpolate between source and result by intensity\n    cResult = color.rgb + clamp(uIntensity, 0.0, 1.0) * (cResult - color.rgb);\n\n    gl_FragColor =  vec4(cResult, color.a);\n}\n`;class FilmGrainFXAAMaterial extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null),uIntensity:new Uniform(.5),uResolution:new Uniform(new Vector2),uTime:new Uniform(0)},vertexShader:vertexShader$d,fragmentShader:fragmentShader$d,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$e="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",blur="\nvec4 blur(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n    vec2 pixel = vec2(1) / resolution;\n\n    vec4 color = vec4(0.0);\n    color += texture2D(image, uv - 4.0 * pixel * direction) * 0.051;\n    color += texture2D(image, uv - 3.0 * pixel * direction) * 0.0918;\n    color += texture2D(image, uv - 2.0 * pixel * direction) * 0.12245;\n    color += texture2D(image, uv - 1.0 * pixel * direction) * 0.1531;\n    color += texture2D(image, uv) * 0.1633;\n    color += texture2D(image, uv + 1.0 * pixel * direction) * 0.1531;\n    color += texture2D(image, uv + 2.0 * pixel * direction) * 0.12245;\n    color += texture2D(image, uv + 3.0 * pixel * direction) * 0.0918;\n    color += texture2D(image, uv + 4.0 * pixel * direction) * 0.051;\n\n    return color;\n}\n",fragmentShader$e=`\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform float uBluriness;\nuniform vec2 uDirection;\nuniform vec2 uResolution;\n\nvarying vec2 vUv;\n\n${blur}\n\nvoid main() {\n    gl_FragColor = blur(tMap, vUv, uResolution, uBluriness * uDirection);\n}\n`;class BlurMaterial extends RawShaderMaterial{constructor(e=new Vector2(.5,.5)){super({uniforms:{tMap:new Uniform(null),uBluriness:new Uniform(1),uDirection:new Uniform(e),uResolution:new Uniform(new Vector2)},vertexShader:vertexShader$e,fragmentShader:fragmentShader$e,blending:0,depthWrite:!1,depthTest:!1})}}const BlurDirectionX=new Vector2(1,0),BlurDirectionY=new Vector2(0,1);var vertexShader$f="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$f="\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform float uLuminosityThreshold;\nuniform float uSmoothWidth;\nuniform vec3 uDefaultColor;\nuniform float uDefaultOpacity;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vec4 texel = texture2D(tMap, vUv);\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float v = dot(texel.xyz, luma);\n    vec4 outputColor = vec4(uDefaultColor.rgb, uDefaultOpacity);\n    float alpha = smoothstep(uLuminosityThreshold, uLuminosityThreshold + uSmoothWidth, v);\n\n    gl_FragColor = mix(outputColor, texel, alpha);\n}\n";class LuminosityMaterial extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null),uLuminosityThreshold:new Uniform(1),uSmoothWidth:new Uniform(1),uDefaultColor:new Uniform(new Color(0)),uDefaultOpacity:new Uniform(0)},vertexShader:vertexShader$f,fragmentShader:fragmentShader$f,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$g="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",blur$1="\n#define MAX_KERNEL_RADIUS 11\n\nfloat gaussianPdf(float x, float sigma) {\n    return 0.39894 * exp(-0.5 * x * x / (sigma * sigma)) / sigma;\n}\n\nvec4 blur(sampler2D image, vec2 uv, vec2 resolution, vec2 direction, int kernelRadius, int sigma) {\n    vec2 invSize = 1.0 / resolution;\n    float fSigma = float(sigma);\n    float weightSum = gaussianPdf(0.0, fSigma);\n    vec3 diffuseSum = texture2D(image, uv).rgb * weightSum;\n\n    for (int i = 1; i < MAX_KERNEL_RADIUS; i++) {\n        if (i >= kernelRadius) break;\n        float x = float(i);\n        float w = gaussianPdf(x, fSigma);\n        vec2 uvOffset = direction * invSize * x;\n        vec3 sample1 = texture2D(image, uv + uvOffset).rgb;\n        vec3 sample2 = texture2D(image, uv - uvOffset).rgb;\n        diffuseSum += (sample1 + sample2) * w;\n        weightSum += 2.0 * w;\n    }\n\n    return vec4(diffuseSum / weightSum, 1.0);\n}\n\nvec4 blur(sampler2D image, vec2 uv, vec2 resolution, vec2 direction, int kernelRadius) {\n    return blur(image, uv, resolution, direction, kernelRadius, kernelRadius);\n}\n",fragmentShader$g=`\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform vec2 uDirection;\nuniform vec2 uResolution;\n\nvarying vec2 vUv;\n\n${blur$1}\n\nvoid main() {\n    gl_FragColor = blur(tMap, vUv, uResolution, uDirection, KERNEL_RADIUS, SIGMA);\n}\n`;class UnrealBloomBlurMaterial extends RawShaderMaterial{constructor(e){super({defines:{KERNEL_RADIUS:e,SIGMA:e},uniforms:{tMap:new Uniform(null),uDirection:new Uniform(new Vector2(.5,.5)),uResolution:new Uniform(new Vector2)},vertexShader:vertexShader$g,fragmentShader:fragmentShader$g,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$h="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$h="\nprecision highp float;\n\nuniform sampler2D tBlur1;\nuniform sampler2D tBlur2;\nuniform sampler2D tBlur3;\nuniform sampler2D tBlur4;\nuniform sampler2D tBlur5;\nuniform float uBloomStrength;\nuniform float uBloomRadius;\nuniform float uBloomFactors[NUM_MIPS];\nuniform vec3 uBloomTintColors[NUM_MIPS];\n\nvarying vec2 vUv;\n\nfloat lerpBloomFactor(float factor) {\n    return mix(factor, 1.2 - factor, uBloomRadius);\n}\n\nvoid main() {\n    gl_FragColor = uBloomStrength * (lerpBloomFactor(uBloomFactors[0]) * vec4(uBloomTintColors[0], 1.0) * texture2D(tBlur1, vUv) +\n                                     lerpBloomFactor(uBloomFactors[1]) * vec4(uBloomTintColors[1], 1.0) * texture2D(tBlur2, vUv) +\n                                     lerpBloomFactor(uBloomFactors[2]) * vec4(uBloomTintColors[2], 1.0) * texture2D(tBlur3, vUv) +\n                                     lerpBloomFactor(uBloomFactors[3]) * vec4(uBloomTintColors[3], 1.0) * texture2D(tBlur4, vUv) +\n                                     lerpBloomFactor(uBloomFactors[4]) * vec4(uBloomTintColors[4], 1.0) * texture2D(tBlur5, vUv));\n}\n";class UnrealBloomCompositeMaterial extends RawShaderMaterial{constructor(e){super({defines:{NUM_MIPS:e},uniforms:{tBlur1:new Uniform(null),tBlur2:new Uniform(null),tBlur3:new Uniform(null),tBlur4:new Uniform(null),tBlur5:new Uniform(null),uBloomStrength:new Uniform(1),uBloomRadius:new Uniform(0),uBloomFactors:new Uniform(null),uBloomTintColors:new Uniform(null)},vertexShader:vertexShader$h,fragmentShader:fragmentShader$h,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$i="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$i=`\nprecision highp float;\n\nuniform sampler2D tBlur1;\nuniform sampler2D tBlur2;\nuniform sampler2D tBlur3;\nuniform sampler2D tBlur4;\nuniform sampler2D tBlur5;\nuniform float uBloomFactors[NUM_MIPS];\n\nvarying vec2 vUv;\n\n${dither}\n\nvoid main() {\n    gl_FragColor = uBloomFactors[0] * texture2D(tBlur1, vUv) +\n                   uBloomFactors[1] * texture2D(tBlur2, vUv) +\n                   uBloomFactors[2] * texture2D(tBlur3, vUv) +\n                   uBloomFactors[3] * texture2D(tBlur4, vUv) +\n                   uBloomFactors[4] * texture2D(tBlur5, vUv);\n\n    gl_FragColor.rgb = dither(gl_FragColor.rgb);\n}\n`;class BloomCompositeMaterial extends RawShaderMaterial{constructor(e){super({defines:{NUM_MIPS:e},uniforms:{tBlur1:new Uniform(null),tBlur2:new Uniform(null),tBlur3:new Uniform(null),tBlur4:new Uniform(null),tBlur5:new Uniform(null),uBloomFactors:new Uniform(null)},vertexShader:vertexShader$i,fragmentShader:fragmentShader$i,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$j="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$j="\nprecision highp float;\n\nuniform sampler2D tScene;\nuniform sampler2D tBloom;\n\nvarying vec2 vUv;\n\nvoid main() {\n    gl_FragColor = texture2D(tScene, vUv);\n\n    gl_FragColor.rgb += texture2D(tBloom, vUv).rgb;\n}\n";class SceneCompositeMaterial extends RawShaderMaterial{constructor(){super({uniforms:{tScene:new Uniform(null),tBloom:new Uniform(null)},vertexShader:vertexShader$j,fragmentShader:fragmentShader$j,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$k="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",blur$2="\nconst int NUM_TAPS = 12;\n\nvec4 poissonSample(sampler2D image, vec2 uv, vec2 resolution, float radius, vec4 basis) {\n    float max_siz = radius;\n    vec2 fTaps_Poisson[NUM_TAPS];\n\n    fTaps_Poisson[0]  = vec2(-.326,-.406);\n    fTaps_Poisson[1]  = vec2(-.840,-.074);\n    fTaps_Poisson[2]  = vec2(-.696, .457);\n    fTaps_Poisson[3]  = vec2(-.203, .621);\n    fTaps_Poisson[4]  = vec2( .962,-.195);\n    fTaps_Poisson[5]  = vec2( .473,-.480);\n    fTaps_Poisson[6]  = vec2( .519, .767);\n    fTaps_Poisson[7]  = vec2( .185,-.893);\n    fTaps_Poisson[8]  = vec2( .507, .064);\n    fTaps_Poisson[9]  = vec2( .896, .412);\n    fTaps_Poisson[10] = vec2(-.322,-.933);\n    fTaps_Poisson[11] = vec2(-.792,-.598);\n\n    vec4 sum = vec4(0);\n\n    for (int i = 0; i < NUM_TAPS; i++) {\n        vec2 ofs = fTaps_Poisson[i];\n        ofs = vec2(dot(ofs, basis.xz), dot(ofs, basis.yw));\n        vec2 texcoord = uv + max_siz * ofs / resolution.xy;\n        sum += texture2D(image, texcoord, -10.0);\n    }\n\n    return sum / float(NUM_TAPS);\n}\n",blueNoise="\nfloat getBlueNoise(sampler2D tex, vec2 coord, vec2 size, vec2 offset) {\n    return texture2D(tex, coord * size + offset).r;\n}\n\nfloat getBlueNoise(sampler2D tex, vec2 coord, vec2 size) {\n    return getBlueNoise(tex, coord, size, vec2(0));\n}\n",fragmentShader$k=`\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform sampler2D tBlueNoise;\nuniform vec2 uBlueNoiseTexelSize;\nuniform float uRadius;\nuniform vec2 uResolution;\nuniform float uTime;\n\nvarying vec2 vUv;\n\nvec2 rot2d(vec2 p, float a) {\n    vec2 sc = vec2(sin(a), cos(a));\n    return vec2(dot(p, vec2(sc.y, -sc.x)), dot(p, sc.xy));\n}\n\n${blur$2}\n${blueNoise}\n\nvoid main() {\n    float rnd = getBlueNoise(tBlueNoise, gl_FragCoord.xy, uBlueNoiseTexelSize, vec2(fract(uTime)));\n    vec4 basis = vec4(rot2d(vec2(1, 0), rnd), rot2d(vec2(0, 1), rnd));\n\n    gl_FragColor = poissonSample(tMap, vUv, uResolution, uRadius, basis);\n}\n`;class PoissonDiscBlurMaterial extends RawShaderMaterial{constructor({blueNoisePath:e="assets/textures/blue_noise.png"}={}){const t=(new TextureLoader$1).load(e);t.wrapS=1e3,t.wrapT=1e3,t.magFilter=1003,t.minFilter=1003,t.generateMipmaps=!1,super({uniforms:{tMap:new Uniform(null),tBlueNoise:new Uniform(t),uBlueNoiseTexelSize:new Uniform(new Vector2(1/256,1/256)),uRadius:new Uniform(42),uResolution:new Uniform(new Vector2),uTime:new Uniform(0)},vertexShader:vertexShader$k,fragmentShader:fragmentShader$k,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$l="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$l="\nprecision highp float;\n\nuniform vec3 cameraPosition;\n\nuniform sampler2D tMap;\nuniform sampler2D tDepth;\nuniform float uVelocityFactor;\nuniform float uDelta;\nuniform mat4 uClipToWorldMatrix;\nuniform mat4 uWorldToClipMatrix;\nuniform mat4 uPreviousWorldToClipMatrix;\nuniform vec3 uCameraMove;\n\nvarying vec2 vUv;\n\nvoid main() {\n    float fragCoordZ = texture2D(tDepth, vUv).x;\n\n    // Viewport position at this pixel in the range -1 to 1\n    vec4 clipPosition = vec4(vUv.x * 2.0 - 1.0, vUv.y * 2.0 - 1.0, fragCoordZ * 2.0 - 1.0, 1.0);\n\n    vec4 worldPosition = uClipToWorldMatrix * clipPosition;\n    worldPosition /= worldPosition.w;\n\n    vec4 previousWorldPosition = worldPosition;\n    previousWorldPosition.xyz -= uCameraMove;\n\n    vec4 previousClipPosition = uPreviousWorldToClipMatrix * worldPosition;\n    previousClipPosition /= previousClipPosition.w;\n    vec4 translatedClipPosition = uWorldToClipMatrix * previousWorldPosition;\n    translatedClipPosition /= translatedClipPosition.w;\n\n    vec2 velocity = uVelocityFactor * (clipPosition - previousClipPosition).xy / uDelta * 16.67;\n    velocity *= clamp(length(worldPosition.xyz - cameraPosition) / 1000.0, 0.0, 1.0);\n    velocity += uVelocityFactor * (clipPosition - translatedClipPosition).xy / uDelta * 16.67;\n\n    vec4 finalColor = vec4(0.0);\n    vec2 offset = vec2(0.0);\n    float weight = 0.0;\n    const int samples = 20;\n\n    for (int i = 0; i < samples; i++) {\n        offset = velocity * (float(i) / (float(samples) - 1.0) - 0.5);\n        finalColor += texture2D(tMap, vUv + offset);\n    }\n\n    finalColor /= float(samples);\n\n    gl_FragColor = vec4(finalColor.rgb, 1.0);\n}\n";class CameraMotionBlurMaterial extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null),tDepth:new Uniform(null),uVelocityFactor:new Uniform(1),uDelta:new Uniform(16.67),uClipToWorldMatrix:new Uniform(new Matrix4),uWorldToClipMatrix:new Uniform(new Matrix4),uPreviousWorldToClipMatrix:new Uniform(new Matrix4),uCameraMove:new Uniform(new Vector3)},vertexShader:vertexShader$l,fragmentShader:fragmentShader$l,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$m="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$m="\nprecision highp float;\n\n#define PI          3.14\n#define TWO_PI      6.28\n#define MAX_SAMPLES 28.0\n\nuniform sampler2D tMap;\nuniform float uScale;\nuniform vec2 uResolution;\n\nvarying vec2 vUv;\n\nconst float blurRadMax = 0.08;\nconst float blurCircles = 4.0;\n\nvoid main() {\n    float blurRadius = blurRadMax * uScale;\n\n    float totalSamples = 0.0;\n    vec3 colAcum = vec3(0.0);\n\n    for (float currentCircle = 0.0; currentCircle < blurCircles; currentCircle++) {\n        float samplesForCurrentCircle = (pow(currentCircle + 1.0, 2.0) - pow(currentCircle, 2.0)) * 4.0;\n        float currentRadius = (blurRadius / blurCircles) * (currentCircle + 0.5);\n\n        for (float currentSample = 0.0; currentSample < MAX_SAMPLES; currentSample++) {\n            if (currentSample >= samplesForCurrentCircle) break;\n\n            vec2 samplePoint = vec2(0.0, currentRadius);\n            float angle = TWO_PI * ((currentSample + 0.5) / samplesForCurrentCircle);\n\n            float s = sin(angle);\n            float c = cos(angle);\n            mat2 m = mat2(c, -s, s, c);\n            samplePoint = m * samplePoint;\n\n            samplePoint *= vec2(uResolution.y / uResolution.x, 1.0);\n\n            totalSamples++;\n            colAcum += texture2D(tMap, vUv + samplePoint, blurRadius * 30.0).rgb;\n        }\n    }\n\n    gl_FragColor = vec4(colAcum / totalSamples, 1.0);\n}\n";class BokehBlurMaterial1 extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null),uScale:new Uniform(1),uResolution:new Uniform(new Vector2)},vertexShader:vertexShader$m,fragmentShader:fragmentShader$m,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$n="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$n="\nprecision highp float;\n\n#define PI          3.14\n#define TWO_PI      6.28\n#define MAX_SAMPLES 20.0\n\nuniform sampler2D tMap;\nuniform float uScale;\nuniform vec2 uResolution;\n\nvarying vec2 vUv;\n\nconst float blurRadMax = 0.08;\nconst float blurCircles = 3.0;\n\nvoid main() {\n    float blurRadius = blurRadMax * uScale * 0.3;\n\n    float totalSamples = 0.0;\n    vec3 colAcum = vec3(0.0);\n\n    for (float currentCircle = 0.0; currentCircle < blurCircles; currentCircle++) {\n        float samplesForCurrentCircle = (pow(currentCircle + 1.0, 2.0) - pow(currentCircle, 2.0)) * 4.0;\n        float currentRadius = (blurRadius / blurCircles) * (currentCircle + 0.5);\n\n        for (float currentSample = 0.0; currentSample < MAX_SAMPLES; currentSample++) {\n            if (currentSample >= samplesForCurrentCircle) break;\n\n            vec2 samplePoint = vec2(0.0, currentRadius);\n            float angle = TWO_PI * ((currentSample + 0.5) / samplesForCurrentCircle);\n\n            float s = sin(angle);\n            float c = cos(angle);\n            mat2 m = mat2(c, -s, s, c);\n            samplePoint = m * samplePoint;\n\n            samplePoint *= vec2(uResolution.y / uResolution.x, 1.0);\n\n            totalSamples++;\n            colAcum = max(colAcum, texture2D(tMap, vUv + samplePoint).rgb);\n        }\n    }\n\n    gl_FragColor = vec4(colAcum, 1.0);\n}\n";class BokehBlurMaterial2 extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null),uScale:new Uniform(1),uResolution:new Uniform(new Vector2)},vertexShader:vertexShader$n,fragmentShader:fragmentShader$n,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$o="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$o="\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform float uRedOffset;\nuniform float uGreenOffset;\nuniform float uBlueOffset;\nuniform float uIntensity;\n\nvarying vec2 vUv;\n\nvoid main() {\n    float ro = uRedOffset * uIntensity;\n    float go = uGreenOffset * uIntensity;\n    float bo = uBlueOffset * uIntensity;\n\n    float r = texture2D(tMap, vUv * (1.0 + ro) - (ro / 2.0)).r;\n    float g = texture2D(tMap, vUv * (1.0 + go) - (go / 2.0)).g;\n    float b = texture2D(tMap, vUv * (1.0 + bo) - (bo / 2.0)).b;\n\n    gl_FragColor = vec4(r, g, b, 1.0);\n}\n";class ChromaticAberrationMaterial extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null),uRedOffset:new Uniform(-.004),uGreenOffset:new Uniform(.0015),uBlueOffset:new Uniform(0),uIntensity:new Uniform(1.5)},vertexShader:vertexShader$o,fragmentShader:fragmentShader$o,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$p="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$p=`\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform float uTime;\n\nvarying vec2 vUv;\n\n${simplex2d}\n\nvoid main() {\n    vec2 uv = vUv;\n\n    // Create large, incidental noise waves\n    float noise = max(0.0, snoise(vec2(uTime * 2.0, uv.y * 0.3)) - 0.3) * 0.15;\n\n    // Offset by smaller, constant noise waves\n    noise += (snoise(vec2(uTime * 20.0, uv.y * 2.4)) - 0.5) * 0.0375;\n\n    // Apply the noise as X displacement for every line\n    float xpos = uv.x - noise * noise * 0.25;\n    gl_FragColor = texture2D(tMap, vec2(xpos, uv.y));\n\n    // Mix in some random interference for lines\n    gl_FragColor.rgb = mix(gl_FragColor.rgb, vec3(0.0), noise * 0.3).rgb;\n\n    // Apply a line pattern every 4 pixels\n    if (floor(mod(gl_FragCoord.y * 0.25, 2.0)) == 0.0) {\n        gl_FragColor.rgb *= 1.0 - (0.15 * noise);\n    }\n}\n`;class VideoGlitchMaterial extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null),uTime:new Uniform(0)},vertexShader:vertexShader$p,fragmentShader:fragmentShader$p,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$q="\nattribute vec2 uv;\nattribute vec3 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = vec4(position, 1.0);\n}\n",fragmentShader$q="\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform sampler2D tDepth1;\nuniform sampler2D tDepth2;\n\nvarying vec2 vUv;\n\nvoid main() {\n    float d1 = texture2D(tDepth1, vUv).r;\n    float d2 = texture2D(tDepth2, vUv).r;\n\n    if (d1 < d2) {\n        discard;\n    }\n\n    gl_FragColor = texture2D(tMap, vUv);\n}\n";class DepthMaskMaterial extends RawShaderMaterial{constructor(){super({uniforms:{tMap:new Uniform(null),tDepth1:new Uniform(null),tDepth2:new Uniform(null)},vertexShader:vertexShader$q,fragmentShader:fragmentShader$q,blending:0,depthWrite:!1,depthTest:!1})}}var vertexShader$r="\nattribute vec2 uv;\nattribute vec3 position;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",fragmentShader$r="\n#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform vec3 uColor;\nuniform float uAlpha;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vec3 tex = texture2D(tMap, vUv).rgb;\n    float signedDist = max(min(tex.r, tex.g), min(max(tex.r, tex.g), tex.b)) - 0.5;\n    float d = fwidth(signedDist);\n    float alpha = smoothstep(-d, d, signedDist);\n\n    if (alpha < 0.01) discard;\n\n    gl_FragColor.rgb = uColor;\n    gl_FragColor.a = alpha * uAlpha;\n}\n";class TextMaterial extends RawShaderMaterial{constructor({texture:e,color:t}={}){super({uniforms:{tMap:new Uniform(e),uColor:new Uniform(t instanceof Color?t:new Color(t)),uAlpha:new Uniform(1)},vertexShader:vertexShader$r,fragmentShader:fragmentShader$r,transparent:!0})}}var SimplexNoise=function(e){null==e&&(e=Math),this.grad3=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]],this.grad4=[[0,1,1,1],[0,1,1,-1],[0,1,-1,1],[0,1,-1,-1],[0,-1,1,1],[0,-1,1,-1],[0,-1,-1,1],[0,-1,-1,-1],[1,0,1,1],[1,0,1,-1],[1,0,-1,1],[1,0,-1,-1],[-1,0,1,1],[-1,0,1,-1],[-1,0,-1,1],[-1,0,-1,-1],[1,1,0,1],[1,1,0,-1],[1,-1,0,1],[1,-1,0,-1],[-1,1,0,1],[-1,1,0,-1],[-1,-1,0,1],[-1,-1,0,-1],[1,1,1,0],[1,1,-1,0],[1,-1,1,0],[1,-1,-1,0],[-1,1,1,0],[-1,1,-1,0],[-1,-1,1,0],[-1,-1,-1,0]],this.p=[];for(var t=0;t<256;t++)this.p[t]=Math.floor(256*e.random());this.perm=[];for(t=0;t<512;t++)this.perm[t]=this.p[255&t];this.simplex=[[0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0],[0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,3,1,0],[1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0],[2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]};SimplexNoise.prototype.dot=function(e,t,r){return e[0]*t+e[1]*r},SimplexNoise.prototype.dot3=function(e,t,r,n){return e[0]*t+e[1]*r+e[2]*n},SimplexNoise.prototype.dot4=function(e,t,r,n,i){return e[0]*t+e[1]*r+e[2]*n+e[3]*i},SimplexNoise.prototype.noise=function(e,t){var r,n,i=(e+t)*(.5*(Math.sqrt(3)-1)),o=Math.floor(e+i),a=Math.floor(t+i),s=(3-Math.sqrt(3))/6,l=(o+a)*s,c=e-(o-l),u=t-(a-l);c>u?(r=1,n=0):(r=0,n=1);var h=c-r+s,d=u-n+s,p=c-1+2*s,m=u-1+2*s,f=255&o,g=255&a,_=this.perm[f+this.perm[g]]%12,y=this.perm[f+r+this.perm[g+n]]%12,x=this.perm[f+1+this.perm[g+1]]%12,b=.5-c*c-u*u,w=.5-h*h-d*d,M=.5-p*p-m*m;return 70*((b<0?0:(b*=b)*b*this.dot(this.grad3[_],c,u))+(w<0?0:(w*=w)*w*this.dot(this.grad3[y],h,d))+(M<0?0:(M*=M)*M*this.dot(this.grad3[x],p,m)))},SimplexNoise.prototype.noise3d=function(e,t,r){var n,i,o,a,s,l,c=(e+t+r)*(1/3),u=Math.floor(e+c),h=Math.floor(t+c),d=Math.floor(r+c),p=1/6,m=(u+h+d)*p,f=e-(u-m),g=t-(h-m),_=r-(d-m);f>=g?g>=_?(n=1,i=0,o=0,a=1,s=1,l=0):f>=_?(n=1,i=0,o=0,a=1,s=0,l=1):(n=0,i=0,o=1,a=1,s=0,l=1):g<_?(n=0,i=0,o=1,a=0,s=1,l=1):f<_?(n=0,i=1,o=0,a=0,s=1,l=1):(n=0,i=1,o=0,a=1,s=1,l=0);var y=f-n+p,x=g-i+p,b=_-o+p,w=f-a+2*p,M=g-s+2*p,S=_-l+2*p,T=f-1+.5,A=g-1+.5,E=_-1+.5,C=255&u,L=255&h,P=255&d,R=this.perm[C+this.perm[L+this.perm[P]]]%12,B=this.perm[C+n+this.perm[L+i+this.perm[P+o]]]%12,D=this.perm[C+a+this.perm[L+s+this.perm[P+l]]]%12,O=this.perm[C+1+this.perm[L+1+this.perm[P+1]]]%12,I=.6-f*f-g*g-_*_,U=.6-y*y-x*x-b*b,N=.6-w*w-M*M-S*S,V=.6-T*T-A*A-E*E;return 32*((I<0?0:(I*=I)*I*this.dot3(this.grad3[R],f,g,_))+(U<0?0:(U*=U)*U*this.dot3(this.grad3[B],y,x,b))+(N<0?0:(N*=N)*N*this.dot3(this.grad3[D],w,M,S))+(V<0?0:(V*=V)*V*this.dot3(this.grad3[O],T,A,E)))},SimplexNoise.prototype.noise4d=function(e,t,r,n){var i,o,a,s,l,c,u,h,d,p,m,f,g=this.grad4,_=this.simplex,y=this.perm,x=(Math.sqrt(5)-1)/4,b=(5-Math.sqrt(5))/20,w=(e+t+r+n)*x,M=Math.floor(e+w),S=Math.floor(t+w),T=Math.floor(r+w),A=Math.floor(n+w),E=(M+S+T+A)*b,C=e-(M-E),L=t-(S-E),P=r-(T-E),R=n-(A-E),B=(C>L?32:0)+(C>P?16:0)+(L>P?8:0)+(C>R?4:0)+(L>R?2:0)+(P>R?1:0),D=C-(i=_[B][0]>=3?1:0)+b,O=L-(o=_[B][1]>=3?1:0)+b,I=P-(a=_[B][2]>=3?1:0)+b,U=R-(s=_[B][3]>=3?1:0)+b,N=C-(l=_[B][0]>=2?1:0)+2*b,V=L-(c=_[B][1]>=2?1:0)+2*b,F=P-(u=_[B][2]>=2?1:0)+2*b,G=R-(h=_[B][3]>=2?1:0)+2*b,z=C-(d=_[B][0]>=1?1:0)+3*b,k=L-(p=_[B][1]>=1?1:0)+3*b,H=P-(m=_[B][2]>=1?1:0)+3*b,W=R-(f=_[B][3]>=1?1:0)+3*b,j=C-1+4*b,$=L-1+4*b,q=P-1+4*b,X=R-1+4*b,Y=255&M,Z=255&S,J=255&T,Q=255&A,K=y[Y+y[Z+y[J+y[Q]]]]%32,ee=y[Y+i+y[Z+o+y[J+a+y[Q+s]]]]%32,te=y[Y+l+y[Z+c+y[J+u+y[Q+h]]]]%32,re=y[Y+d+y[Z+p+y[J+m+y[Q+f]]]]%32,ne=y[Y+1+y[Z+1+y[J+1+y[Q+1]]]]%32,ie=.6-C*C-L*L-P*P-R*R,oe=.6-D*D-O*O-I*I-U*U,ae=.6-N*N-V*V-F*F-G*G,se=.6-z*z-k*k-H*H-W*W,le=.6-j*j-$*$-q*q-X*X;return 27*((ie<0?0:(ie*=ie)*ie*this.dot4(g[K],C,L,P,R))+(oe<0?0:(oe*=oe)*oe*this.dot4(g[ee],D,O,I,U))+(ae<0?0:(ae*=ae)*ae*this.dot4(g[te],N,V,F,G))+(se<0?0:(se*=se)*se*this.dot4(g[re],z,k,H,W))+(le<0?0:(le*=le)*le*this.dot4(g[ne],j,$,q,X)))};var SVGLoader=function(e){Loader$1.call(this,e),this.defaultDPI=90,this.defaultUnit="px"};SVGLoader.prototype=Object.assign(Object.create(Loader$1.prototype),{constructor:SVGLoader,load:function(e,t,r,n){var i=this,o=new FileLoader(i.manager);o.setPath(i.path),o.setRequestHeader(i.requestHeader),o.setWithCredentials(i.withCredentials),o.load(e,(function(r){try{t(i.parse(r))}catch(t){n?n(t):console.error(t),i.manager.itemError(e)}}),r,n)},parse:function(e){var t=this;function parseArcCommand(e,t,r,n,i,o,a,s){if(0!=t&&0!=r){n=n*Math.PI/180,t=Math.abs(t),r=Math.abs(r);var l=(a.x-s.x)/2,c=(a.y-s.y)/2,u=Math.cos(n)*l+Math.sin(n)*c,h=-Math.sin(n)*l+Math.cos(n)*c,d=t*t,p=r*r,m=u*u,f=h*h,g=m/d+f/p;if(g>1){var _=Math.sqrt(g);d=(t*=_)*t,p=(r*=_)*r}var y=d*f+p*m,x=(d*p-y)/y,b=Math.sqrt(Math.max(0,x));i===o&&(b=-b);var w=b*t*h/r,M=-b*r*u/t,S=Math.cos(n)*w-Math.sin(n)*M+(a.x+s.x)/2,T=Math.sin(n)*w+Math.cos(n)*M+(a.y+s.y)/2,A=svgAngle(1,0,(u-w)/t,(h-M)/r),E=svgAngle((u-w)/t,(h-M)/r,(-u-w)/t,(-h-M)/r)%(2*Math.PI);e.currentPath.absellipse(S,T,t,r,A,A+E,0===o,n)}else e.lineTo(s.x,s.y)}function svgAngle(e,t,r,n){var i=e*r+t*n,o=Math.sqrt(e*e+t*t)*Math.sqrt(r*r+n*n),a=Math.acos(Math.max(-1,Math.min(1,i/o)));return e*n-t*r<0&&(a=-a),a}function parseStyle(e,t){t=Object.assign({},t);var r={};if(e.hasAttribute("class"))for(var n=e.getAttribute("class").split(/\s/).filter(Boolean).map(e=>e.trim()),i=0;i<n.length;i++)r=Object.assign(r,o["."+n[i]]);function addStyle(n,i,o){void 0===o&&(o=function copy(e){return e.startsWith("url")&&console.warn("SVGLoader: url access in attributes is not implemented."),e}),e.hasAttribute(n)&&(t[i]=o(e.getAttribute(n))),r[n]&&(t[i]=o(r[n])),e.style&&""!==e.style[n]&&(t[i]=o(e.style[n]))}function clamp(e){return Math.max(0,Math.min(1,parseFloatWithUnits(e)))}function positive(e){return Math.max(0,parseFloatWithUnits(e))}return e.hasAttribute("id")&&(r=Object.assign(r,o["#"+e.getAttribute("id")])),addStyle("fill","fill"),addStyle("fill-opacity","fillOpacity",clamp),addStyle("opacity","opacity",clamp),addStyle("stroke","stroke"),addStyle("stroke-opacity","strokeOpacity",clamp),addStyle("stroke-width","strokeWidth",positive),addStyle("stroke-linejoin","strokeLineJoin"),addStyle("stroke-linecap","strokeLineCap"),addStyle("stroke-miterlimit","strokeMiterLimit",positive),addStyle("visibility","visibility"),t}function getReflection(e,t){return e-(t-e)}function parseFloats(e){for(var t=e.split(/[\s,]+|(?=\s?[+\-])/),r=0;r<t.length;r++){var n=t[r];if(n.indexOf(".")!==n.lastIndexOf("."))for(var i=n.split("."),o=2;o<i.length;o++)t.splice(r+o-1,0,"0."+i[o]);t[r]=parseFloatWithUnits(n)}return t}var r=["mm","cm","in","pt","pc","px"],n={mm:{mm:1,cm:.1,in:1/25.4,pt:72/25.4,pc:6/25.4,px:-1},cm:{mm:10,cm:1,in:1/2.54,pt:72/2.54,pc:6/2.54,px:-1},in:{mm:25.4,cm:2.54,in:1,pt:72,pc:6,px:-1},pt:{mm:25.4/72,cm:2.54/72,in:1/72,pt:1,pc:6/72,px:-1},pc:{mm:25.4/6,cm:2.54/6,in:1/6,pt:12,pc:1,px:-1},px:{px:1}};function parseFloatWithUnits(e){var i="px";if("string"==typeof e||e instanceof String)for(var o=0,a=r.length;o<a;o++){var s=r[o];if(e.endsWith(s)){i=s,e=e.substring(0,e.length-s.length);break}}var l=void 0;return"px"===i&&"px"!==t.defaultUnit?l=n.in[t.defaultUnit]/t.defaultDPI:(l=n[i][t.defaultUnit])<0&&(l=n[i].in*t.defaultDPI),l*parseFloat(e)}function getTransformScaleX(e){var t=e.elements;return Math.sqrt(t[0]*t[0]+t[1]*t[1])}function getTransformScaleY(e){var t=e.elements;return Math.sqrt(t[3]*t[3]+t[4]*t[4])}var i=[],o={},a=[],s=new Matrix3,l=new Matrix3,c=new Matrix3,u=new Matrix3,h=new Vector2,d=new Vector3,p=new Matrix3,m=(new DOMParser).parseFromString(e,"image/svg+xml");return function parseNode(e,t){if(1===e.nodeType){var r=function getNodeTransform(e){if(!(e.hasAttribute("transform")||"use"===e.nodeName&&(e.hasAttribute("x")||e.hasAttribute("y"))))return null;var t=function parseNodeTransform(e){var t=new Matrix3,r=s;if("use"===e.nodeName&&(e.hasAttribute("x")||e.hasAttribute("y"))){var n=parseFloatWithUnits(e.getAttribute("x")),i=parseFloatWithUnits(e.getAttribute("y"));t.translate(n,i)}if(e.hasAttribute("transform"))for(var o=e.getAttribute("transform").split(")"),a=o.length-1;a>=0;a--){var h=o[a].trim();if(""!==h){var d=h.indexOf("("),p=h.length;if(d>0&&d<p){var m=h.substr(0,d),f=parseFloats(h.substr(d+1,p-d-1));switch(r.identity(),m){case"translate":if(f.length>=1){i=n=f[0];f.length>=2&&(i=f[1]),r.translate(n,i)}break;case"rotate":if(f.length>=1){var g,_=0,y=0;g=-f[0]*Math.PI/180,f.length>=3&&(_=f[1],y=f[2]),l.identity().translate(-_,-y),c.identity().rotate(g),u.multiplyMatrices(c,l),l.identity().translate(_,y),r.multiplyMatrices(l,u)}break;case"scale":if(f.length>=1){var x=f[0],b=x;f.length>=2&&(b=f[1]),r.scale(x,b)}break;case"skewX":1===f.length&&r.set(1,Math.tan(f[0]*Math.PI/180),0,0,1,0,0,0,1);break;case"skewY":1===f.length&&r.set(1,0,0,Math.tan(f[0]*Math.PI/180),1,0,0,0,1);break;case"matrix":6===f.length&&r.set(f[0],f[2],f[4],f[1],f[3],f[5],0,0,1)}}t.premultiply(r)}}return t}(e);a.length>0&&t.premultiply(a[a.length-1]);return p.copy(t),a.push(t),t}(e),n=!0,m=null;switch(e.nodeName){case"svg":break;case"style":!function parseCSSStylesheet(e){if(!e.sheet||!e.sheet.cssRules||!e.sheet.cssRules.length)return;for(var t=0;t<e.sheet.cssRules.length;t++){var r=e.sheet.cssRules[t];if(1===r.type)for(var n=r.selectorText.split(/,/gm).filter(Boolean).map(e=>e.trim()),i=0;i<n.length;i++)o[n[i]]=Object.assign(o[n[i]]||{},r.style)}}(e);break;case"g":t=parseStyle(e,t);break;case"path":t=parseStyle(e,t),e.hasAttribute("d")&&(m=function parsePathNode(e){for(var t=new ShapePath,r=new Vector2,n=new Vector2,i=new Vector2,o=!0,a=!1,s=e.getAttribute("d").match(/[a-df-z][^a-df-z]*/gi),l=0,c=s.length;l<c;l++){var u=s[l],h=u.charAt(0),d=u.substr(1).trim();switch(!0===o&&(a=!0,o=!1),h){case"M":for(var p=parseFloats(d),m=0,f=p.length;m<f;m+=2)r.x=p[m+0],r.y=p[m+1],n.x=r.x,n.y=r.y,0===m?t.moveTo(r.x,r.y):t.lineTo(r.x,r.y),0===m&&!0===a&&i.copy(r);break;case"H":for(p=parseFloats(d),m=0,f=p.length;m<f;m++)r.x=p[m],n.x=r.x,n.y=r.y,t.lineTo(r.x,r.y),0===m&&!0===a&&i.copy(r);break;case"V":for(p=parseFloats(d),m=0,f=p.length;m<f;m++)r.y=p[m],n.x=r.x,n.y=r.y,t.lineTo(r.x,r.y),0===m&&!0===a&&i.copy(r);break;case"L":for(p=parseFloats(d),m=0,f=p.length;m<f;m+=2)r.x=p[m+0],r.y=p[m+1],n.x=r.x,n.y=r.y,t.lineTo(r.x,r.y),0===m&&!0===a&&i.copy(r);break;case"C":for(p=parseFloats(d),m=0,f=p.length;m<f;m+=6)t.bezierCurveTo(p[m+0],p[m+1],p[m+2],p[m+3],p[m+4],p[m+5]),n.x=p[m+2],n.y=p[m+3],r.x=p[m+4],r.y=p[m+5],0===m&&!0===a&&i.copy(r);break;case"S":for(p=parseFloats(d),m=0,f=p.length;m<f;m+=4)t.bezierCurveTo(getReflection(r.x,n.x),getReflection(r.y,n.y),p[m+0],p[m+1],p[m+2],p[m+3]),n.x=p[m+0],n.y=p[m+1],r.x=p[m+2],r.y=p[m+3],0===m&&!0===a&&i.copy(r);break;case"Q":for(p=parseFloats(d),m=0,f=p.length;m<f;m+=4)t.quadraticCurveTo(p[m+0],p[m+1],p[m+2],p[m+3]),n.x=p[m+0],n.y=p[m+1],r.x=p[m+2],r.y=p[m+3],0===m&&!0===a&&i.copy(r);break;case"T":for(p=parseFloats(d),m=0,f=p.length;m<f;m+=2){var g=getReflection(r.x,n.x),_=getReflection(r.y,n.y);t.quadraticCurveTo(g,_,p[m+0],p[m+1]),n.x=g,n.y=_,r.x=p[m+0],r.y=p[m+1],0===m&&!0===a&&i.copy(r)}break;case"A":for(p=parseFloats(d),m=0,f=p.length;m<f;m+=7)if(p[m+5]!=r.x||p[m+6]!=r.y){var y=r.clone();r.x=p[m+5],r.y=p[m+6],n.x=r.x,n.y=r.y,parseArcCommand(t,p[m],p[m+1],p[m+2],p[m+3],p[m+4],y,r),0===m&&!0===a&&i.copy(r)}break;case"m":for(p=parseFloats(d),m=0,f=p.length;m<f;m+=2)r.x+=p[m+0],r.y+=p[m+1],n.x=r.x,n.y=r.y,0===m?t.moveTo(r.x,r.y):t.lineTo(r.x,r.y),0===m&&!0===a&&i.copy(r);break;case"h":for(p=parseFloats(d),m=0,f=p.length;m<f;m++)r.x+=p[m],n.x=r.x,n.y=r.y,t.lineTo(r.x,r.y),0===m&&!0===a&&i.copy(r);break;case"v":for(p=parseFloats(d),m=0,f=p.length;m<f;m++)r.y+=p[m],n.x=r.x,n.y=r.y,t.lineTo(r.x,r.y),0===m&&!0===a&&i.copy(r);break;case"l":for(p=parseFloats(d),m=0,f=p.length;m<f;m+=2)r.x+=p[m+0],r.y+=p[m+1],n.x=r.x,n.y=r.y,t.lineTo(r.x,r.y),0===m&&!0===a&&i.copy(r);break;case"c":for(p=parseFloats(d),m=0,f=p.length;m<f;m+=6)t.bezierCurveTo(r.x+p[m+0],r.y+p[m+1],r.x+p[m+2],r.y+p[m+3],r.x+p[m+4],r.y+p[m+5]),n.x=r.x+p[m+2],n.y=r.y+p[m+3],r.x+=p[m+4],r.y+=p[m+5],0===m&&!0===a&&i.copy(r);break;case"s":for(p=parseFloats(d),m=0,f=p.length;m<f;m+=4)t.bezierCurveTo(getReflection(r.x,n.x),getReflection(r.y,n.y),r.x+p[m+0],r.y+p[m+1],r.x+p[m+2],r.y+p[m+3]),n.x=r.x+p[m+0],n.y=r.y+p[m+1],r.x+=p[m+2],r.y+=p[m+3],0===m&&!0===a&&i.copy(r);break;case"q":for(p=parseFloats(d),m=0,f=p.length;m<f;m+=4)t.quadraticCurveTo(r.x+p[m+0],r.y+p[m+1],r.x+p[m+2],r.y+p[m+3]),n.x=r.x+p[m+0],n.y=r.y+p[m+1],r.x+=p[m+2],r.y+=p[m+3],0===m&&!0===a&&i.copy(r);break;case"t":for(p=parseFloats(d),m=0,f=p.length;m<f;m+=2){g=getReflection(r.x,n.x),_=getReflection(r.y,n.y);t.quadraticCurveTo(g,_,r.x+p[m+0],r.y+p[m+1]),n.x=g,n.y=_,r.x=r.x+p[m+0],r.y=r.y+p[m+1],0===m&&!0===a&&i.copy(r)}break;case"a":for(p=parseFloats(d),m=0,f=p.length;m<f;m+=7)if(0!=p[m+5]||0!=p[m+6]){y=r.clone();r.x+=p[m+5],r.y+=p[m+6],n.x=r.x,n.y=r.y,parseArcCommand(t,p[m],p[m+1],p[m+2],p[m+3],p[m+4],y,r),0===m&&!0===a&&i.copy(r)}break;case"Z":case"z":t.currentPath.autoClose=!0,t.currentPath.curves.length>0&&(r.copy(i),t.currentPath.currentPoint.copy(r),o=!0);break;default:console.warn(u)}a=!1}return t}(e));break;case"rect":t=parseStyle(e,t),m=function parseRectNode(e){var t=parseFloatWithUnits(e.getAttribute("x")||0),r=parseFloatWithUnits(e.getAttribute("y")||0),n=parseFloatWithUnits(e.getAttribute("rx")||0),i=parseFloatWithUnits(e.getAttribute("ry")||0),o=parseFloatWithUnits(e.getAttribute("width")),a=parseFloatWithUnits(e.getAttribute("height")),s=new ShapePath;s.moveTo(t+2*n,r),s.lineTo(t+o-2*n,r),(0!==n||0!==i)&&s.bezierCurveTo(t+o,r,t+o,r,t+o,r+2*i);s.lineTo(t+o,r+a-2*i),(0!==n||0!==i)&&s.bezierCurveTo(t+o,r+a,t+o,r+a,t+o-2*n,r+a);s.lineTo(t+2*n,r+a),(0!==n||0!==i)&&s.bezierCurveTo(t,r+a,t,r+a,t,r+a-2*i);s.lineTo(t,r+2*i),(0!==n||0!==i)&&s.bezierCurveTo(t,r,t,r,t+2*n,r);return s}(e);break;case"polygon":t=parseStyle(e,t),m=function parsePolygonNode(e){function iterator(e,n,i){var o=parseFloatWithUnits(n),a=parseFloatWithUnits(i);0===r?t.moveTo(o,a):t.lineTo(o,a),r++}var t=new ShapePath,r=0;return e.getAttribute("points").replace(/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g,iterator),t.currentPath.autoClose=!0,t}(e);break;case"polyline":t=parseStyle(e,t),m=function parsePolylineNode(e){function iterator(e,n,i){var o=parseFloatWithUnits(n),a=parseFloatWithUnits(i);0===r?t.moveTo(o,a):t.lineTo(o,a),r++}var t=new ShapePath,r=0;return e.getAttribute("points").replace(/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g,iterator),t.currentPath.autoClose=!1,t}(e);break;case"circle":t=parseStyle(e,t),m=function parseCircleNode(e){var t=parseFloatWithUnits(e.getAttribute("cx")),r=parseFloatWithUnits(e.getAttribute("cy")),n=parseFloatWithUnits(e.getAttribute("r")),i=new Path;i.absarc(t,r,n,0,2*Math.PI);var o=new ShapePath;return o.subPaths.push(i),o}(e);break;case"ellipse":t=parseStyle(e,t),m=function parseEllipseNode(e){var t=parseFloatWithUnits(e.getAttribute("cx")),r=parseFloatWithUnits(e.getAttribute("cy")),n=parseFloatWithUnits(e.getAttribute("rx")),i=parseFloatWithUnits(e.getAttribute("ry")),o=new Path;o.absellipse(t,r,n,i,0,2*Math.PI);var a=new ShapePath;return a.subPaths.push(o),a}(e);break;case"line":t=parseStyle(e,t),m=function parseLineNode(e){var t=parseFloatWithUnits(e.getAttribute("x1")),r=parseFloatWithUnits(e.getAttribute("y1")),n=parseFloatWithUnits(e.getAttribute("x2")),i=parseFloatWithUnits(e.getAttribute("y2")),o=new ShapePath;return o.moveTo(t,r),o.lineTo(n,i),o.currentPath.autoClose=!1,o}(e);break;case"defs":n=!1;break;case"use":t=parseStyle(e,t);var f=e.href.baseVal.substring(1),g=e.viewportElement.getElementById(f);g?parseNode(g,t):console.warn("SVGLoader: 'use node' references non-existent node id: "+f)}if(m&&(void 0!==t.fill&&"none"!==t.fill&&m.color.setStyle(t.fill),function transformPath(e,t){function transfVec2(e){d.set(e.x,e.y,1).applyMatrix3(t),e.set(d.x,d.y)}for(var r=function isTransformRotated(e){return 0!==e.elements[1]||0!==e.elements[3]}(t),n=e.subPaths,i=0,o=n.length;i<o;i++)for(var a=n[i].curves,s=0;s<a.length;s++){var l=a[s];l.isLineCurve?(transfVec2(l.v1),transfVec2(l.v2)):l.isCubicBezierCurve?(transfVec2(l.v0),transfVec2(l.v1),transfVec2(l.v2),transfVec2(l.v3)):l.isQuadraticBezierCurve?(transfVec2(l.v0),transfVec2(l.v1),transfVec2(l.v2)):l.isEllipseCurve&&(r&&console.warn("SVGLoader: Elliptic arc or ellipse rotation or skewing is not implemented."),h.set(l.aX,l.aY),transfVec2(h),l.aX=h.x,l.aY=h.y,l.xRadius*=getTransformScaleX(t),l.yRadius*=getTransformScaleY(t))}}(m,p),i.push(m),m.userData={node:e,style:t}),n)for(var _=e.childNodes,y=0;y<_.length;y++)parseNode(_[y],t);r&&(a.pop(),a.length>0?p.copy(a[a.length-1]):p.identity())}}(m.documentElement,{fill:"#000",fillOpacity:1,strokeOpacity:1,strokeWidth:1,strokeLineJoin:"miter",strokeLineCap:"butt",strokeMiterLimit:4}),{paths:i,xml:m.documentElement}}}),SVGLoader.getStrokeStyle=function(e,t,r,n,i){return{strokeColor:t=void 0!==t?t:"#000",strokeWidth:e=void 0!==e?e:1,strokeLineJoin:r=void 0!==r?r:"miter",strokeLineCap:n=void 0!==n?n:"butt",strokeMiterLimit:i=void 0!==i?i:4}},SVGLoader.pointsToStroke=function(e,t,r,n){var i=[],o=[],a=[];if(0===SVGLoader.pointsToStrokeWithBuffers(e,t,r,n,i,o,a))return null;var s=new BufferGeometry;return s.setAttribute("position",new Float32BufferAttribute(i,3)),s.setAttribute("normal",new Float32BufferAttribute(o,3)),s.setAttribute("uv",new Float32BufferAttribute(a,2)),s},SVGLoader.pointsToStrokeWithBuffers=function(){var e=new Vector2,t=new Vector2,r=new Vector2,n=new Vector2,i=new Vector2,o=new Vector2,a=new Vector2,s=new Vector2,l=new Vector2,c=new Vector2,u=new Vector2,h=new Vector2,d=new Vector2,p=new Vector2,m=new Vector2,f=new Vector2,g=new Vector2;return function(_,y,x,b,w,M,S,T){x=void 0!==x?x:12,b=void 0!==b?b:.001,T=void 0!==T?T:0;var A=(_=function removeDuplicatedPoints(e){for(var t=!1,r=1,n=e.length-1;r<n;r++)if(e[r].distanceTo(e[r+1])<b){t=!0;break}if(!t)return e;var i=[];i.push(e[0]);for(r=1,n=e.length-1;r<n;r++)e[r].distanceTo(e[r+1])>=b&&i.push(e[r]);return i.push(e[e.length-1]),i}(_)).length;if(A<2)return 0;var E,C,L,P,R,B=_[0].equals(_[A-1]),D=_[0],O=y.strokeWidth/2,I=1/(A-1),U=0,N=!1,V=0,F=3*T,G=2*T;getNormal(_[0],_[1],e).multiplyScalar(O),s.copy(_[0]).sub(e),l.copy(_[0]).add(e),c.copy(s),u.copy(l);for(var z=1;z<A;z++){E=_[z],C=z===A-1?B?_[1]:void 0:_[z+1];var k=e;getNormal(D,E,k),r.copy(k).multiplyScalar(O),h.copy(E).sub(r),d.copy(E).add(r);var H=U+I;if(L=!1,void 0!==C){getNormal(E,C,t),r.copy(t).multiplyScalar(O),p.copy(E).sub(r),m.copy(E).add(r),P=!0,r.subVectors(C,D),k.dot(r)<0&&(P=!1),1===z&&(N=P),r.subVectors(C,E),r.normalize();var W=Math.abs(k.dot(r));if(0!==W){var j=O/W;r.multiplyScalar(-j),n.subVectors(E,D),i.copy(n).setLength(j).add(r),f.copy(i).negate();var $=i.length(),q=n.length();n.divideScalar(q),o.subVectors(C,E);var X=o.length();switch(o.divideScalar(X),n.dot(f)<q&&o.dot(f)<X&&(L=!0),g.copy(i).add(E),f.add(E),R=!1,L?P?(m.copy(f),d.copy(f)):(p.copy(f),h.copy(f)):makeSegmentTriangles(),y.strokeLineJoin){case"bevel":makeSegmentWithBevelJoin(P,L,H);break;case"round":createSegmentTrianglesWithMiddleSection(P,L),P?makeCircularSector(E,h,p,H,0):makeCircularSector(E,m,d,H,1);break;case"miter":case"miter-clip":default:var Y=O*y.strokeMiterLimit/$;if(Y<1){if("miter-clip"!==y.strokeLineJoin){makeSegmentWithBevelJoin(P,L,H);break}createSegmentTrianglesWithMiddleSection(P,L),P?(o.subVectors(g,h).multiplyScalar(Y).add(h),a.subVectors(g,p).multiplyScalar(Y).add(p),addVertex(h,H,0),addVertex(o,H,0),addVertex(E,H,.5),addVertex(E,H,.5),addVertex(o,H,0),addVertex(a,H,0),addVertex(E,H,.5),addVertex(a,H,0),addVertex(p,H,0)):(o.subVectors(g,d).multiplyScalar(Y).add(d),a.subVectors(g,m).multiplyScalar(Y).add(m),addVertex(d,H,1),addVertex(o,H,1),addVertex(E,H,.5),addVertex(E,H,.5),addVertex(o,H,1),addVertex(a,H,1),addVertex(E,H,.5),addVertex(a,H,1),addVertex(m,H,1))}else L?(P?(addVertex(l,U,1),addVertex(s,U,0),addVertex(g,H,0),addVertex(l,U,1),addVertex(g,H,0),addVertex(f,H,1)):(addVertex(l,U,1),addVertex(s,U,0),addVertex(g,H,1),addVertex(s,U,0),addVertex(f,H,0),addVertex(g,H,1)),P?p.copy(g):m.copy(g)):P?(addVertex(h,H,0),addVertex(g,H,0),addVertex(E,H,.5),addVertex(E,H,.5),addVertex(g,H,0),addVertex(p,H,0)):(addVertex(d,H,1),addVertex(g,H,1),addVertex(E,H,.5),addVertex(E,H,.5),addVertex(g,H,1),addVertex(m,H,1)),R=!0}}else makeSegmentTriangles()}else makeSegmentTriangles();B||z!==A-1||addCapGeometry(_[0],c,u,P,!0,U),U=H,D=E,s.copy(p),l.copy(m)}if(B){if(L&&w){var Z=g,J=f;N!==P&&(Z=f,J=g),P?(R||N)&&(J.toArray(w,0),J.toArray(w,9),R&&Z.toArray(w,3)):!R&&N||(J.toArray(w,3),J.toArray(w,9),R&&Z.toArray(w,0))}}else addCapGeometry(E,h,d,P,!1,H);return V;function getNormal(e,t,r){return r.subVectors(t,e),r.set(-r.y,r.x).normalize()}function addVertex(e,t,r){w&&(w[F]=e.x,w[F+1]=e.y,w[F+2]=0,M&&(M[F]=0,M[F+1]=0,M[F+2]=1),F+=3,S&&(S[G]=t,S[G+1]=r,G+=2)),V+=3}function makeCircularSector(i,o,a,s,l){e.copy(o).sub(i).normalize(),t.copy(a).sub(i).normalize();var c=Math.PI,u=e.dot(t);Math.abs(u)<1&&(c=Math.abs(Math.acos(u))),c/=x,r.copy(o);for(var h=0,d=x-1;h<d;h++)n.copy(r).rotateAround(i,c),addVertex(r,s,l),addVertex(n,s,l),addVertex(i,s,.5),r.copy(n);addVertex(n,s,l),addVertex(a,s,l),addVertex(i,s,.5)}function makeSegmentTriangles(){addVertex(l,U,1),addVertex(s,U,0),addVertex(h,H,0),addVertex(l,U,1),addVertex(h,H,1),addVertex(d,H,0)}function makeSegmentWithBevelJoin(e,t,r){t?e?(addVertex(l,U,1),addVertex(s,U,0),addVertex(h,H,0),addVertex(l,U,1),addVertex(h,H,0),addVertex(f,H,1),addVertex(h,r,0),addVertex(p,r,0),addVertex(f,r,.5)):(addVertex(l,U,1),addVertex(s,U,0),addVertex(d,H,1),addVertex(s,U,0),addVertex(f,H,0),addVertex(d,H,1),addVertex(d,r,1),addVertex(m,r,0),addVertex(f,r,.5)):e?(addVertex(h,r,0),addVertex(p,r,0),addVertex(E,r,.5)):(addVertex(d,r,1),addVertex(m,r,0),addVertex(E,r,.5))}function createSegmentTrianglesWithMiddleSection(e,t){t&&(e?(addVertex(l,U,1),addVertex(s,U,0),addVertex(h,H,0),addVertex(l,U,1),addVertex(h,H,0),addVertex(f,H,1),addVertex(h,U,0),addVertex(E,H,.5),addVertex(f,H,1),addVertex(E,H,.5),addVertex(p,U,0),addVertex(f,H,1)):(addVertex(l,U,1),addVertex(s,U,0),addVertex(d,H,1),addVertex(s,U,0),addVertex(f,H,0),addVertex(d,H,1),addVertex(d,U,1),addVertex(f,H,0),addVertex(E,H,.5),addVertex(E,H,.5),addVertex(f,H,0),addVertex(m,U,1)))}function addCapGeometry(i,o,a,s,l,c){switch(y.strokeLineCap){case"round":l?makeCircularSector(i,a,o,c,.5):makeCircularSector(i,o,a,c,.5);break;case"square":if(l)e.subVectors(o,i),t.set(e.y,-e.x),r.addVectors(e,t).add(i),n.subVectors(t,e).add(i),s?(r.toArray(w,3),n.toArray(w,0),n.toArray(w,9)):(r.toArray(w,3),r.toArray(w,9),n.toArray(w,0));else{e.subVectors(a,i),t.set(e.y,-e.x),r.addVectors(e,t).add(i),n.subVectors(t,e).add(i);var u=w.length;s?(r.toArray(w,u-3),n.toArray(w,u-6),n.toArray(w,u-12)):(r.toArray(w,u-6),n.toArray(w,u-3),n.toArray(w,u-12))}}}}}();var OrbitControls=function(e,t){var r,n,i,o,a,s;void 0===t&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.enabled=!0,this.target=new Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:MOUSE.ROTATE,MIDDLE:MOUSE.DOLLY,RIGHT:MOUSE.PAN},this.touches={ONE:TOUCH.ROTATE,TWO:TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return f.phi},this.getAzimuthalAngle=function(){return f.theta},this.saveState=function(){l.target0.copy(l.target),l.position0.copy(l.object.position),l.zoom0=l.object.zoom},this.reset=function(){l.target.copy(l.target0),l.object.position.copy(l.position0),l.object.zoom=l.zoom0,l.object.updateProjectionMatrix(),l.dispatchEvent(c),l.update(),p=d.NONE},this.update=(r=new Vector3,n=(new Quaternion).setFromUnitVectors(e.up,new Vector3(0,1,0)),i=n.clone().invert(),o=new Vector3,a=new Quaternion,s=2*Math.PI,function update(){var e=l.object.position;r.copy(e).sub(l.target),r.applyQuaternion(n),f.setFromVector3(r),l.autoRotate&&p===d.NONE&&rotateLeft(function getAutoRotationAngle(){return 2*Math.PI/60/60*l.autoRotateSpeed}()),l.enableDamping?(f.theta+=g.theta*l.dampingFactor,f.phi+=g.phi*l.dampingFactor):(f.theta+=g.theta,f.phi+=g.phi);var t=l.minAzimuthAngle,u=l.maxAzimuthAngle;return isFinite(t)&&isFinite(u)&&(t<-Math.PI?t+=s:t>Math.PI&&(t-=s),u<-Math.PI?u+=s:u>Math.PI&&(u-=s),f.theta=t<=u?Math.max(t,Math.min(u,f.theta)):f.theta>(t+u)/2?Math.max(t,f.theta):Math.min(u,f.theta)),f.phi=Math.max(l.minPolarAngle,Math.min(l.maxPolarAngle,f.phi)),f.makeSafe(),f.radius*=_,f.radius=Math.max(l.minDistance,Math.min(l.maxDistance,f.radius)),!0===l.enableDamping?l.target.addScaledVector(y,l.dampingFactor):l.target.add(y),r.setFromSpherical(f),r.applyQuaternion(i),e.copy(l.target).add(r),l.object.lookAt(l.target),!0===l.enableDamping?(g.theta*=1-l.dampingFactor,g.phi*=1-l.dampingFactor,y.multiplyScalar(1-l.dampingFactor)):(g.set(0,0,0),y.set(0,0,0)),_=1,!!(x||o.distanceToSquared(l.object.position)>m||8*(1-a.dot(l.object.quaternion))>m)&&(l.dispatchEvent(c),o.copy(l.object.position),a.copy(l.object.quaternion),x=!1,!0)}),this.dispose=function(){l.domElement.removeEventListener("contextmenu",onContextMenu,!1),l.domElement.removeEventListener("pointerdown",onPointerDown,!1),l.domElement.removeEventListener("wheel",onMouseWheel,!1),l.domElement.removeEventListener("touchstart",onTouchStart,!1),l.domElement.removeEventListener("touchend",onTouchEnd,!1),l.domElement.removeEventListener("touchmove",onTouchMove,!1),l.domElement.ownerDocument.removeEventListener("pointermove",onPointerMove,!1),l.domElement.ownerDocument.removeEventListener("pointerup",onPointerUp,!1),l.domElement.removeEventListener("keydown",onKeyDown,!1)};var l=this,c={type:"change"},u={type:"start"},h={type:"end"},d={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},p=d.NONE,m=1e-6,f=new Spherical,g=new Spherical,_=1,y=new Vector3,x=!1,b=new Vector2,w=new Vector2,M=new Vector2,S=new Vector2,T=new Vector2,A=new Vector2,E=new Vector2,C=new Vector2,L=new Vector2;function getZoomScale(){return Math.pow(.95,l.zoomSpeed)}function rotateLeft(e){g.theta-=e}function rotateUp(e){g.phi-=e}var P,R=(P=new Vector3,function panLeft(e,t){P.setFromMatrixColumn(t,0),P.multiplyScalar(-e),y.add(P)}),B=function(){var e=new Vector3;return function panUp(t,r){!0===l.screenSpacePanning?e.setFromMatrixColumn(r,1):(e.setFromMatrixColumn(r,0),e.crossVectors(l.object.up,e)),e.multiplyScalar(t),y.add(e)}}(),D=function(){var e=new Vector3;return function pan(t,r){var n=l.domElement;if(l.object.isPerspectiveCamera){var i=l.object.position;e.copy(i).sub(l.target);var o=e.length();o*=Math.tan(l.object.fov/2*Math.PI/180),R(2*t*o/n.clientHeight,l.object.matrix),B(2*r*o/n.clientHeight,l.object.matrix)}else l.object.isOrthographicCamera?(R(t*(l.object.right-l.object.left)/l.object.zoom/n.clientWidth,l.object.matrix),B(r*(l.object.top-l.object.bottom)/l.object.zoom/n.clientHeight,l.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),l.enablePan=!1)}}();function dollyOut(e){l.object.isPerspectiveCamera?_/=e:l.object.isOrthographicCamera?(l.object.zoom=Math.max(l.minZoom,Math.min(l.maxZoom,l.object.zoom*e)),l.object.updateProjectionMatrix(),x=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),l.enableZoom=!1)}function dollyIn(e){l.object.isPerspectiveCamera?_*=e:l.object.isOrthographicCamera?(l.object.zoom=Math.max(l.minZoom,Math.min(l.maxZoom,l.object.zoom/e)),l.object.updateProjectionMatrix(),x=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),l.enableZoom=!1)}function handleMouseDownRotate(e){b.set(e.clientX,e.clientY)}function handleMouseDownPan(e){S.set(e.clientX,e.clientY)}function handleTouchStartRotate(e){if(1==e.touches.length)b.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),r=.5*(e.touches[0].pageY+e.touches[1].pageY);b.set(t,r)}}function handleTouchStartPan(e){if(1==e.touches.length)S.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),r=.5*(e.touches[0].pageY+e.touches[1].pageY);S.set(t,r)}}function handleTouchStartDolly(e){var t=e.touches[0].pageX-e.touches[1].pageX,r=e.touches[0].pageY-e.touches[1].pageY,n=Math.sqrt(t*t+r*r);E.set(0,n)}function handleTouchMoveRotate(e){if(1==e.touches.length)w.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),r=.5*(e.touches[0].pageY+e.touches[1].pageY);w.set(t,r)}M.subVectors(w,b).multiplyScalar(l.rotateSpeed);var n=l.domElement;rotateLeft(2*Math.PI*M.x/n.clientHeight),rotateUp(2*Math.PI*M.y/n.clientHeight),b.copy(w)}function handleTouchMovePan(e){if(1==e.touches.length)T.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),r=.5*(e.touches[0].pageY+e.touches[1].pageY);T.set(t,r)}A.subVectors(T,S).multiplyScalar(l.panSpeed),D(A.x,A.y),S.copy(T)}function handleTouchMoveDolly(e){var t=e.touches[0].pageX-e.touches[1].pageX,r=e.touches[0].pageY-e.touches[1].pageY,n=Math.sqrt(t*t+r*r);C.set(0,n),L.set(0,Math.pow(C.y/E.y,l.zoomSpeed)),dollyOut(L.y),E.copy(C)}function onPointerDown(e){if(!1!==l.enabled)switch(e.pointerType){case"mouse":case"pen":!function onMouseDown(e){var t;switch(e.preventDefault(),l.domElement.focus?l.domElement.focus():window.focus(),e.button){case 0:t=l.mouseButtons.LEFT;break;case 1:t=l.mouseButtons.MIDDLE;break;case 2:t=l.mouseButtons.RIGHT;break;default:t=-1}switch(t){case MOUSE.DOLLY:if(!1===l.enableZoom)return;!function handleMouseDownDolly(e){E.set(e.clientX,e.clientY)}(e),p=d.DOLLY;break;case MOUSE.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===l.enablePan)return;handleMouseDownPan(e),p=d.PAN}else{if(!1===l.enableRotate)return;handleMouseDownRotate(e),p=d.ROTATE}break;case MOUSE.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===l.enableRotate)return;handleMouseDownRotate(e),p=d.ROTATE}else{if(!1===l.enablePan)return;handleMouseDownPan(e),p=d.PAN}break;default:p=d.NONE}p!==d.NONE&&(l.domElement.ownerDocument.addEventListener("pointermove",onPointerMove,!1),l.domElement.ownerDocument.addEventListener("pointerup",onPointerUp,!1),l.dispatchEvent(u))}(e)}}function onPointerMove(e){if(!1!==l.enabled)switch(e.pointerType){case"mouse":case"pen":!function onMouseMove(e){if(!1===l.enabled)return;switch(e.preventDefault(),p){case d.ROTATE:if(!1===l.enableRotate)return;!function handleMouseMoveRotate(e){w.set(e.clientX,e.clientY),M.subVectors(w,b).multiplyScalar(l.rotateSpeed);var t=l.domElement;rotateLeft(2*Math.PI*M.x/t.clientHeight),rotateUp(2*Math.PI*M.y/t.clientHeight),b.copy(w),l.update()}(e);break;case d.DOLLY:if(!1===l.enableZoom)return;!function handleMouseMoveDolly(e){C.set(e.clientX,e.clientY),L.subVectors(C,E),L.y>0?dollyOut(getZoomScale()):L.y<0&&dollyIn(getZoomScale()),E.copy(C),l.update()}(e);break;case d.PAN:if(!1===l.enablePan)return;!function handleMouseMovePan(e){T.set(e.clientX,e.clientY),A.subVectors(T,S).multiplyScalar(l.panSpeed),D(A.x,A.y),S.copy(T),l.update()}(e)}}(e)}}function onPointerUp(e){switch(e.pointerType){case"mouse":case"pen":!function onMouseUp(e){if(l.domElement.ownerDocument.removeEventListener("pointermove",onPointerMove,!1),l.domElement.ownerDocument.removeEventListener("pointerup",onPointerUp,!1),!1===l.enabled)return;l.dispatchEvent(h),p=d.NONE}()}}function onMouseWheel(e){!1===l.enabled||!1===l.enableZoom||p!==d.NONE&&p!==d.ROTATE||(e.preventDefault(),e.stopPropagation(),l.dispatchEvent(u),function handleMouseWheel(e){e.deltaY<0?dollyIn(getZoomScale()):e.deltaY>0&&dollyOut(getZoomScale()),l.update()}(e),l.dispatchEvent(h))}function onKeyDown(e){!1!==l.enabled&&!1!==l.enableKeys&&!1!==l.enablePan&&function handleKeyDown(e){var t=!1;switch(e.keyCode){case l.keys.UP:D(0,l.keyPanSpeed),t=!0;break;case l.keys.BOTTOM:D(0,-l.keyPanSpeed),t=!0;break;case l.keys.LEFT:D(l.keyPanSpeed,0),t=!0;break;case l.keys.RIGHT:D(-l.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),l.update())}(e)}function onTouchStart(e){if(!1!==l.enabled){switch(e.preventDefault(),e.touches.length){case 1:switch(l.touches.ONE){case TOUCH.ROTATE:if(!1===l.enableRotate)return;handleTouchStartRotate(e),p=d.TOUCH_ROTATE;break;case TOUCH.PAN:if(!1===l.enablePan)return;handleTouchStartPan(e),p=d.TOUCH_PAN;break;default:p=d.NONE}break;case 2:switch(l.touches.TWO){case TOUCH.DOLLY_PAN:if(!1===l.enableZoom&&!1===l.enablePan)return;!function handleTouchStartDollyPan(e){l.enableZoom&&handleTouchStartDolly(e),l.enablePan&&handleTouchStartPan(e)}(e),p=d.TOUCH_DOLLY_PAN;break;case TOUCH.DOLLY_ROTATE:if(!1===l.enableZoom&&!1===l.enableRotate)return;!function handleTouchStartDollyRotate(e){l.enableZoom&&handleTouchStartDolly(e),l.enableRotate&&handleTouchStartRotate(e)}(e),p=d.TOUCH_DOLLY_ROTATE;break;default:p=d.NONE}break;default:p=d.NONE}p!==d.NONE&&l.dispatchEvent(u)}}function onTouchMove(e){if(!1!==l.enabled)switch(e.preventDefault(),e.stopPropagation(),p){case d.TOUCH_ROTATE:if(!1===l.enableRotate)return;handleTouchMoveRotate(e),l.update();break;case d.TOUCH_PAN:if(!1===l.enablePan)return;handleTouchMovePan(e),l.update();break;case d.TOUCH_DOLLY_PAN:if(!1===l.enableZoom&&!1===l.enablePan)return;!function handleTouchMoveDollyPan(e){l.enableZoom&&handleTouchMoveDolly(e),l.enablePan&&handleTouchMovePan(e)}(e),l.update();break;case d.TOUCH_DOLLY_ROTATE:if(!1===l.enableZoom&&!1===l.enableRotate)return;!function handleTouchMoveDollyRotate(e){l.enableZoom&&handleTouchMoveDolly(e),l.enableRotate&&handleTouchMoveRotate(e)}(e),l.update();break;default:p=d.NONE}}function onTouchEnd(e){!1!==l.enabled&&(l.dispatchEvent(h),p=d.NONE)}function onContextMenu(e){!1!==l.enabled&&e.preventDefault()}l.domElement.addEventListener("contextmenu",onContextMenu,!1),l.domElement.addEventListener("pointerdown",onPointerDown,!1),l.domElement.addEventListener("wheel",onMouseWheel,!1),l.domElement.addEventListener("touchstart",onTouchStart,!1),l.domElement.addEventListener("touchend",onTouchEnd,!1),l.domElement.addEventListener("touchmove",onTouchMove,!1),l.domElement.addEventListener("keydown",onKeyDown,!1),this.update()};OrbitControls.prototype=Object.create(EventDispatcher.prototype),OrbitControls.prototype.constructor=OrbitControls;var MapControls=function(e,t){OrbitControls.call(this,e,t),this.screenSpacePanning=!1,this.mouseButtons.LEFT=MOUSE.PAN,this.mouseButtons.RIGHT=MOUSE.ROTATE,this.touches.ONE=TOUCH.PAN,this.touches.TWO=TOUCH.DOLLY_ROTATE};MapControls.prototype=Object.create(EventDispatcher.prototype),MapControls.prototype.constructor=MapControls;export{ACESFilmicToneMapping,AddEquation,AddOperation,AdditiveAnimationBlendMode,AdditiveBlending,AlphaFormat,AlwaysDepth,AlwaysStencilFunc,AmbientLight,AmbientLightProbe,AnimationClip,AnimationLoader,AnimationMixer,AnimationObjectGroup,AnimationUtils,ArcCurve,ArrayCamera,ArrowHelper,AssetLoader,Assets,Audio$1 as Audio,AudioAnalyser,AudioContext,AudioListener,AudioLoader,AxesHelper,AxisHelper,Back,BackSide,BadTVMaterial,BasicDepthPacking,BasicMaterial,BasicShadowMap,BinaryTextureLoader,BloomCompositeMaterial,BlurDirectionX,BlurDirectionY,BlurMaterial,BokehBlurMaterial1,BokehBlurMaterial2,Bone,BooleanKeyframeTrack,Bounce,BoundingBoxHelper,Box2,Box3,Box3Helper,BoxBufferGeometry,BoxGeometry,BoxHelper,BufferAttribute,BufferGeometry,BufferGeometryLoader,ByteType,CSSPlugin,Cache,Camera,CameraHelper,CameraMotionBlurMaterial,CanvasRenderer,CanvasTexture,CatmullRomCurve3,ChromaticAberrationMaterial,CineonToneMapping,Circ,CircleBufferGeometry,CircleGeometry,ClampToEdgeWrapping,Clock,ClosedSplineCurve3,Cluster,Color,ColorKeyframeTrack,ColorMaterial,Component,CompressedTexture,CompressedTextureLoader,ConeBufferGeometry,ConeGeometry,CopyMaterial,CubeCamera,BoxGeometry as CubeGeometry,CubeReflectionMapping,CubeRefractionMapping,CubeTexture,CubeTextureLoader,CubeUVReflectionMapping,CubeUVRefractionMapping,Cubic,CubicBezierCurve,CubicBezierCurve3,CubicInterpolant,CullFaceBack,CullFaceFront,CullFaceFrontBack,CullFaceNone,Curve,CurvePath,CustomBlending,CustomToneMapping,CylinderBufferGeometry,CylinderGeometry,Cylindrical,DataTexture,DataTexture2DArray,DataTexture3D,DataTextureLoader,DataUtils,DecrementStencilOp,DecrementWrapStencilOp,DefaultLoadingManager,DepthFormat,DepthMaskMaterial,DepthStencilFormat,DepthTexture,Device,DirectionalLight,DirectionalLightHelper,DiscreteInterpolant,DodecahedronBufferGeometry,DodecahedronGeometry,DoubleSide,DstAlphaFactor,DstColorFactor,DynamicBufferAttribute,DynamicCopyUsage,DynamicDrawUsage,DynamicReadUsage,EdgesGeometry,EdgesHelper,Elastic,EllipseCurve,EnvironmentTextureLoader,EqualDepth,EqualStencilFunc,EquirectangularReflectionMapping,EquirectangularRefractionMapping,Euler,EventDispatcher,EventEmitter,Events,Expo,ExtrudeBufferGeometry,ExtrudeGeometry,FXAAMaterial,Face3,Face4,FaceColors,FastGaussianBlurMaterial,FileLoader,FilmGrainFXAAMaterial,FilmGrainMaterial,FlatShading,Float16BufferAttribute,Float32Attribute,Float32BufferAttribute,Float64Attribute,Float64BufferAttribute,FloatType,FlowMaterial,Flowmap,Fog,FogExp2,Font,FontLoader,FrontSide,Frustum,GLBufferAttribute,GLSL1,GLSL3,GammaEncoding,Geometry,GeometryUtils,Global,GreaterDepth,GreaterEqualDepth,GreaterEqualStencilFunc,GreaterStencilFunc,GridHelper,Group,HalfFloatType,HemisphereLight,HemisphereLightHelper,HemisphereLightProbe,IcosahedronBufferGeometry,IcosahedronGeometry,ImageBitmapLoader,ImageBitmapLoaderThread,ImageLoader,ImageUtils,ImmediateRenderObject,ImprovedNoise,IncrementStencilOp,IncrementWrapStencilOp,InstancedBufferAttribute,InstancedBufferGeometry,InstancedInterleavedBuffer,InstancedMesh,Int16Attribute,Int16BufferAttribute,Int32Attribute,Int32BufferAttribute,Int8Attribute,Int8BufferAttribute,IntType,Interface,InterleavedBuffer,InterleavedBufferAttribute,Interpolant,InterpolateDiscrete,InterpolateLinear,InterpolateSmooth,InvertStencilOp,JSONLoader,KeepStencilOp,KeyframeTrack,LOD,LatheBufferGeometry,LatheGeometry,Layers,LensFlare,LessDepth,LessEqualDepth,LessEqualStencilFunc,LessStencilFunc,Light,LightProbe,Line,Line3,LineBasicMaterial,LineCurve,LineCurve3,LineDashedMaterial,LineLoop,LinePieces,LineSegments,LineStrip,Linear,LinearEncoding,LinearFilter,LinearInterpolant,LinearMipMapLinearFilter,LinearMipMapNearestFilter,LinearMipmapLinearFilter,LinearMipmapNearestFilter,LinearToneMapping,LinkedList,Loader,LoaderUtils,LoadingManager,LogLuvEncoding,LoopOnce,LoopPingPong,LoopRepeat,LuminanceAlphaFormat,LuminanceFormat,LuminosityMaterial,MOUSE,Material,MaterialLoader,MathUtils as Math,MathUtils,Matrix3,Matrix4,MaxEquation,Mesh,MeshBasicMaterial,MeshDepthMaterial,MeshDistanceMaterial,MeshFaceMaterial,MeshLambertMaterial,MeshMatcapMaterial,MeshNormalMaterial,MeshPhongMaterial,MeshPhysicalMaterial,MeshStandardMaterial,MeshToonMaterial,MinEquation,MirroredRepeatWrapping,MixOperation,MultiLoader,MultiMaterial,MultiplyBlending,MultiplyOperation,NearestFilter,NearestMipMapLinearFilter,NearestMipMapNearestFilter,NearestMipmapLinearFilter,NearestMipmapNearestFilter,NeverDepth,NeverStencilFunc,NoBlending,NoColors,NoToneMapping,NormalAnimationBlendMode,NormalBlending,NormalMaterial,NotEqualDepth,NotEqualStencilFunc,NumberKeyframeTrack,OBJLoader,OBJLoaderThread,Object3D,ObjectLoader,ObjectPool,ObjectSpaceNormalMap,OctahedronBufferGeometry,OctahedronGeometry,OneFactor,OneMinusDstAlphaFactor,OneMinusDstColorFactor,OneMinusSrcAlphaFactor,OneMinusSrcColorFactor,OrbitControls,OrthographicCamera,PCFShadowMap,PCFSoftShadowMap,PMREMGenerator,ParametricBufferGeometry,ParametricGeometry,Particle,ParticleBasicMaterial,ParticleSystem,ParticleSystemMaterial,Path,PerspectiveCamera,Plane,PlaneBufferGeometry,PlaneGeometry,PlaneHelper,PointCloud,PointCloudMaterial,PointLight,PointLightHelper,Points,PointsMaterial,PoissonDiscBlurMaterial,PolarGridHelper,PolyhedronBufferGeometry,PolyhedronGeometry,PositionalAudio,Power0,Power1,Power2,Power3,Power4,PropertyBinding,PropertyMixer,Quad,QuadraticBezierCurve,QuadraticBezierCurve3,Quart,Quaternion,QuaternionKeyframeTrack,QuaternionLinearInterpolant,Quint,REVISION,RGBADepthPacking,RGBAFormat,RGBAIntegerFormat,RGBA_ASTC_10x10_Format,RGBA_ASTC_10x5_Format,RGBA_ASTC_10x6_Format,RGBA_ASTC_10x8_Format,RGBA_ASTC_12x10_Format,RGBA_ASTC_12x12_Format,RGBA_ASTC_4x4_Format,RGBA_ASTC_5x4_Format,RGBA_ASTC_5x5_Format,RGBA_ASTC_6x5_Format,RGBA_ASTC_6x6_Format,RGBA_ASTC_8x5_Format,RGBA_ASTC_8x6_Format,RGBA_ASTC_8x8_Format,RGBA_BPTC_Format,RGBA_ETC2_EAC_Format,RGBA_PVRTC_2BPPV1_Format,RGBA_PVRTC_4BPPV1_Format,RGBA_S3TC_DXT1_Format,RGBA_S3TC_DXT3_Format,RGBA_S3TC_DXT5_Format,RGBDEncoding,RGBEEncoding,RGBEFormat,RGBFormat,RGBIntegerFormat,RGBM16Encoding,RGBM7Encoding,RGBMaterial,RGB_ETC1_Format,RGB_ETC2_Format,RGB_PVRTC_2BPPV1_Format,RGB_PVRTC_4BPPV1_Format,RGB_S3TC_DXT1_Format,RGFormat,RGIntegerFormat,RawShaderMaterial,Ray,Raycaster,RectAreaLight,RedFormat,RedIntegerFormat,Reflector,ReinhardToneMapping,RepeatWrapping,ReplaceStencilOp,ReverseSubtractEquation,RingBufferGeometry,RingGeometry,SRGB8_ALPHA8_ASTC_10x10_Format,SRGB8_ALPHA8_ASTC_10x5_Format,SRGB8_ALPHA8_ASTC_10x6_Format,SRGB8_ALPHA8_ASTC_10x8_Format,SRGB8_ALPHA8_ASTC_12x10_Format,SRGB8_ALPHA8_ASTC_12x12_Format,SRGB8_ALPHA8_ASTC_4x4_Format,SRGB8_ALPHA8_ASTC_5x4_Format,SRGB8_ALPHA8_ASTC_5x5_Format,SRGB8_ALPHA8_ASTC_6x5_Format,SRGB8_ALPHA8_ASTC_6x6_Format,SRGB8_ALPHA8_ASTC_8x5_Format,SRGB8_ALPHA8_ASTC_8x6_Format,SRGB8_ALPHA8_ASTC_8x8_Format,SVGLoader,Scene,SceneCompositeMaterial,SceneUtils,ShaderChunk,ShaderLib,ShaderMaterial,ShadowMaterial,Shape,ShapeBufferGeometry,ShapeGeometry,ShapePath,ShapeUtils,ShortType,SimplexNoise,Sine,Skeleton,SkeletonHelper,SkinnedMesh,SmoothShading,Sound,Sound3D,Sphere,SphereBufferGeometry,SphereGeometry,Spherical,SphericalCubeTextureLoader,SphericalHarmonics3,SpherizeImage,SpherizeTextureLoader,Spline,SplineCurve,SplineCurve3,SpotLight,SpotLightHelper,Sprite,SpriteMaterial,SrcAlphaFactor,SrcAlphaSaturateFactor,SrcColorFactor,Stage,StaticCopyUsage,StaticDrawUsage,StaticReadUsage,SteppedEase,StereoCamera,StreamCopyUsage,StreamDrawUsage,StreamReadUsage,StringKeyframeTrack,Strong,SubtractEquation,SubtractiveBlending,TOUCH,TangentSpaceNormalMap,TetrahedronBufferGeometry,TetrahedronGeometry,TextBufferGeometry,TextGeometry$1 as TextGeometry,TextGeometryLoader,TextGeometryLoaderThread,TextMaterial,Texture,TextureLoader$1 as TextureLoader,Thread,Timeline as TimelineLite,Timeline as TimelineMax,TorusBufferGeometry,TorusGeometry,TorusKnotBufferGeometry,TorusKnotGeometry,Triangle,TriangleFanDrawMode,TriangleStripDrawMode,TrianglesDrawMode,TubeBufferGeometry,TubeGeometry,Tween as TweenLite,TweenMaxWithCSS as TweenMax,UVMapping,Uint16Attribute,Uint16BufferAttribute,Uint32Attribute,Uint32BufferAttribute,Uint8Attribute,Uint8BufferAttribute,Uint8ClampedAttribute,Uint8ClampedBufferAttribute,Uniform,UniformsLib,UniformsUtils,UnrealBloomBlurMaterial,UnrealBloomCompositeMaterial,UnsignedByteType,UnsignedInt248Type,UnsignedIntType,UnsignedShort4444Type,UnsignedShort5551Type,UnsignedShort565Type,UnsignedShortType,VSMShadowMap,Vector2,Vector3,Vector4,VectorKeyframeTrack,Vertex,VertexColors,VideoGlitchMaterial,VideoTexture,WebAudio,WebAudio3D,WebAudioParam,WebGL1Renderer,WebGLCubeRenderTarget,WebGLMultisampleRenderTarget,WebGLRenderTarget,WebGLRenderTargetCube,WebGLRenderer,WebGLUtils,WireframeGeometry,WireframeHelper,Wobble,WrapAroundEnding,XHRLoader,ZeroCurvatureEnding,ZeroFactor,ZeroSlopeEnding,ZeroStencilOp,absolute,basename,clamp$1 as clamp,clearTween,createElementFromHTML,defer,degrees,delayedCall,extension,fract,getConstructorName,getEase,getFrustum,getFullscreenTriangle,getProperty,gsapWithCSS as gsap,guid,headsTails,lerp,mix,mod,queryString,quickSetter,radians,random$1 as random,range,sRGBEncoding,set,shuffle$1 as shuffle,smoothStep,step,ticker,tween,updateRoot,wait};